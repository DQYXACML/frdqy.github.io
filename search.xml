<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Shell编程之（五）：awk</title>
      <link href="/2019/12/29/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Aawk/"/>
      <url>/2019/12/29/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Aawk/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>awk是一个文本处理工具，通常用于处理数据并生成结果报告。</p><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;&#125;pattern&#123;commands&#125;END&#123;&#125;'</span> file_name</span><br><span class="line">stdout | awk <span class="string">'BEGIN&#123;&#125;pattern&#123;commands&#125;END&#123;&#125;'</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="语法格式说明"><a href="#语法格式说明" class="headerlink" title="语法格式说明"></a>语法格式说明</h4><table><thead><tr><th>语法格式</th><th>解释</th></tr></thead><tbody><tr><td>BEGIN{}</td><td>正式处理数据之前执行</td></tr><tr><td>pattern</td><td>匹配模式</td></tr><tr><td>{commands}</td><td>处理命令，可能多行</td></tr><tr><td>END{}</td><td>处理完所有匹配数据后执行</td></tr></tbody></table><h3 id="内置变量对照表"><a href="#内置变量对照表" class="headerlink" title="内置变量对照表"></a>内置变量对照表</h3><table><thead><tr><th>内置变量</th><th>含义</th></tr></thead><tbody><tr><td>$0</td><td>整行内容</td></tr><tr><td>$1-$n</td><td>当前行的第1-n个字段</td></tr><tr><td>NF(Number Field)</td><td>当前行的字段个数</td></tr><tr><td>NR(Number Row)</td><td>当前行行号，从1开始</td></tr><tr><td>FNR(File Number Row)</td><td>多文件每个文件行号单独计数，从0开始</td></tr><tr><td>FS(Field Separator)</td><td>输入字段分隔符，默认空格或tab</td></tr><tr><td>RS(Row Separator)</td><td>输入行分隔符，默认回车换行</td></tr><tr><td>OFS(Output Field Separator)</td><td>输出字段分隔符，默认空格</td></tr><tr><td>ORS(Output Row Separator)</td><td>输出行分隔符，默认回车换行</td></tr><tr><td>FILENAME</td><td>当前输入的文件名字</td></tr><tr><td>ARGC</td><td>命令行参数个数</td></tr><tr><td>ARGV</td><td>命令行参数数组</td></tr></tbody></table><h3 id="printf详解"><a href="#printf详解" class="headerlink" title="printf详解"></a>printf详解</h3><h4 id="printf格式说明符"><a href="#printf格式说明符" class="headerlink" title="printf格式说明符"></a>printf格式说明符</h4><table><thead><tr><th>格式符</th><th>含义</th></tr></thead><tbody><tr><td><strong>%s</strong></td><td><strong>打印字符串</strong></td></tr><tr><td><strong>%d</strong></td><td><strong>打印十进制数</strong></td></tr><tr><td>%f</td><td>打印浮点数</td></tr><tr><td>%x</td><td>打印十六进制数</td></tr><tr><td>%o</td><td>打印八进制数</td></tr><tr><td>%e</td><td>打印数字科学计数法形式</td></tr><tr><td>%c</td><td>打印单个字符的ASCII</td></tr></tbody></table><h4 id="printf修饰符"><a href="#printf修饰符" class="headerlink" title="printf修饰符"></a>printf修饰符</h4><table><thead><tr><th>修饰符</th><th>含义</th></tr></thead><tbody><tr><td>-</td><td>左对齐</td></tr><tr><td>+</td><td>右对齐</td></tr><tr><td>#</td><td>八进制加0，十六进制加0x</td></tr></tbody></table><h4 id="格式符实例"><a href="#格式符实例" class="headerlink" title="格式符实例"></a>格式符实例</h4><ul><li>以字符串格式打印/etc/passwd中的第7个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%s\n",$7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以10进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%d\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以浮点数进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符，小数点保留2位</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%0.2f\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以16进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%#x\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以8进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%#o\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以科学技术格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%e\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="模式匹配"><a href="#模式匹配" class="headerlink" title="模式匹配"></a>模式匹配</h3><h4 id="语法格式-1"><a href="#语法格式-1" class="headerlink" title="语法格式"></a>语法格式</h4><table><thead><tr><th>语法格式</th><th>含义</th></tr></thead><tbody><tr><td>/RegExp/</td><td>按正则匹配</td></tr><tr><td>关系运算</td><td>按关系匹配</td></tr></tbody></table><h4 id="正则实例"><a href="#正则实例" class="headerlink" title="正则实例"></a>正则实例</h4><ul><li>匹配/etc/passwd文件行中包含有root字符串的所有行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;/root/&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>匹配/etc/passwd文件行中以frdqy开头的所有行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;/^frdqy/&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="关系实例"><a href="#关系实例" class="headerlink" title="关系实例"></a>关系实例</h4><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段小于50的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3&lt;50&#123;printf "%d\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段大于50的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3&gt;50&#123;printf "%d\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第7个字段为/bin/bash的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$7=="/bin/bash"&#123;printf "%s\n",$7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第7个字段不为/bin/bash的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$7!="/bin/bash"&#123;printf "%s\n",$7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段包含3个以上数字的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3~/[0-9]&#123;3,&#125;/&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br><span class="line"><span class="comment">#~表示匹配正则，!~表示不匹配正则</span></span><br></pre></td></tr></table></figure><h4 id="布尔实例"><a href="#布尔实例" class="headerlink" title="布尔实例"></a>布尔实例</h4><ul><li>以:为分隔符，匹配/etc/passwd文件中包含root或frdqy的所有</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$1=="root" || $1=="frdqy"&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段小于50并且第4个字段大于50的所有行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3&lt;50 &amp;&amp; $4&gt;50&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><table><thead><tr><th>运算符</th><th align="left">含义</th></tr></thead><tbody><tr><td>+</td><td align="left">加</td></tr><tr><td>-</td><td align="left">减</td></tr><tr><td>*</td><td align="left">乘</td></tr><tr><td>除</td><td align="left">/</td></tr><tr><td>%</td><td align="left">模</td></tr><tr><td>^或**</td><td align="left">乘方</td></tr><tr><td>++x</td><td align="left">返回变量x之前+1</td></tr><tr><td>x++</td><td align="left">返回变量x之后+1</td></tr><tr><td>x+=y</td><td align="left">x=x+y</td></tr></tbody></table><h4 id="算数实例"><a href="#算数实例" class="headerlink" title="算数实例"></a>算数实例</h4><ul><li>使用awk计算/etc/services中空白行的数量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'/^$/&#123;sum++&#125;END&#123;printf "%d\n",sum&#125;'</span> /etc/services</span><br></pre></td></tr></table></figure><ul><li><p>计算下列每个同学的平均分数，将其打印在最后一列后</p><blockquote><p>Allen,80,90,96,98</p><p>Mike,93,98,92,91</p><p>Zhang,78,76,87,92</p><p>Jerry,86,89,68,92</p><p>Li,78,88,98,100</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=","&#125;&#123;sum=$2+$3+$4+$5;avg=sum/(NF-1);printf "%-8s%-8d%-8d%-8d%-8d%-0.2f\n",$1,$2,$3,$4,$5,avg&#125;'</span> ./student.txt</span><br></pre></td></tr></table></figure><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式)</span><br><span class="line">动作1</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(条件表达式)</span><br><span class="line">动作2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">动作3</span><br></pre></td></tr></table></figure><h4 id="条件实例"><a href="#条件实例" class="headerlink" title="条件实例"></a>条件实例</h4><ul><li>以:为分隔符，只打印/etc/passwd中第3个字段的数值在50-100范围内的行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;if($3&lt;=100&amp;&amp;$3&gt;=50)print $0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li><p>计算下列每个学生的平均分数，并且只打印平均分大于90的学生姓名和分数信息</p><blockquote><p>Allen,80,90,96,98</p><p>Mike,93,98,92,91</p><p>Zhang,78,76,87,92</p><p>Jerry,86,89,68,92</p><p>Li,78,88,98,100</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#过长，写在scripts.awk中</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    FS=<span class="string">","</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    sum=<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>+<span class="variable">$5</span>;</span><br><span class="line">    avg=sum/(NF-1);</span><br><span class="line">    <span class="keyword">if</span>(avg&gt;90)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-8s%-8d%-8d%-8d%-8d%-0.2f\n"</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$5</span>,avg</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#用-f选项调用</span></span><br><span class="line">awk -f ./scripts.awk ./student.txt</span><br></pre></td></tr></table></figure><h4 id="循环语句-while"><a href="#循环语句-while" class="headerlink" title="循环语句-while"></a>循环语句-while</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件表达式)</span><br><span class="line">动作</span><br></pre></td></tr></table></figure><h4 id="循环语句-do-while"><a href="#循环语句-do-while" class="headerlink" title="循环语句-do while"></a>循环语句-do while</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">动作</span><br><span class="line"><span class="keyword">while</span>(条件表达式)</span><br></pre></td></tr></table></figure><h4 id="循环语句-for"><a href="#循环语句-for" class="headerlink" title="循环语句-for"></a>循环语句-for</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化计数器;测试计数器;计数器变更)</span><br><span class="line">动作</span><br></pre></td></tr></table></figure><h4 id="循环实例"><a href="#循环实例" class="headerlink" title="循环实例"></a>循环实例</h4><ul><li>计算1+2+…+100的和，使用while、do while、for三种实现</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#while</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=100)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#do-while</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    i=0;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">    i++</span><br><span class="line">    sum+=i</span><br><span class="line">    &#125;<span class="keyword">while</span>(i&lt;100)</span><br><span class="line">    <span class="built_in">print</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#for</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;=100;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><table><thead><tr><th>函数名</th><th>解释</th><th>函数返回值</th></tr></thead><tbody><tr><td>length</td><td>计算字符串长度</td><td>整数长度值</td></tr><tr><td>index(str1,str2)</td><td>在str1中找str2位置</td><td>返回索引，从1开始</td></tr><tr><td>tolower(str)</td><td>转换为小写</td><td>转换后的字符串</td></tr><tr><td>toupper(str)</td><td>转换为大写</td><td>转换后的字符串</td></tr><tr><td>substr(str,m,n)</td><td>从str的m个字符开始，截取n位</td><td>截取后的子串</td></tr><tr><td>match(str,RE)</td><td>在str中按RE查找</td><td>返回索引</td></tr><tr><td>split(str,arr,fs)</td><td>按fs切割字符串，结果存arr中</td><td>切割后的子串个数</td></tr><tr><td>sub(RE,repStr,str)</td><td>在str中找符合RE的子串，将其换为repStr，换一个</td><td>替换个数</td></tr><tr><td>gsub(RE,repStr,str)</td><td>在str中找符合RE的子串，将其换为repStr，换所有</td><td>替换个数</td></tr></tbody></table><h4 id="字符串处理实例"><a href="#字符串处理实例" class="headerlink" title="字符串处理实例"></a>字符串处理实例</h4><ul><li>以:为分隔符，返回/etc/passwd中每行每个字段的长度</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    FS=<span class="string">":"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=1;i&lt;=NF;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i!=NF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span> <span class="string">"%d:"</span>,length(<span class="variable">$i</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==NF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span> <span class="string">"%d"</span>,length(<span class="variable">$i</span>)</span><br><span class="line">            <span class="built_in">printf</span> <span class="string">"\n"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>搜索字符串”I have a dream”中出现”ea”字符串的位置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    i=index(<span class="string">"I have a dream"</span>,<span class="string">"ea"</span>)</span><br><span class="line">    <span class="built_in">print</span> i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#match,可见match功能包含了index</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    i=index(<span class="string">"I have a dream"</span>,<span class="string">"ea"</span>)</span><br><span class="line">    <span class="built_in">print</span> i</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将字符串”Hadoop is a bigdata Framework”全部转换为小写</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=tolower(<span class="string">"Hadoop is a bigdata Framework"</span>)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将字符串”Hadoop is a bigdata Framework”全部转换为大写</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=toupper(<span class="string">"Hadoop is a bigdata Framework"</span>)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将字符串”Hadoop Kafka Spark Storm HDFS YARN Zookeeper”分割保存到数组arr中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Hadoop Kafka Spark Storm HDFS YARN Zookeeper"</span></span><br><span class="line">    len=split(str,arr,<span class="string">" "</span>)</span><br><span class="line">    i=1</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span> arr[i]</span><br><span class="line">        i++</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>搜素字符串”Transaction 2345 Start:Select * from master”第一个数字出现的位置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction 2345 Start:Select * from master"</span></span><br><span class="line">    i=match(str,<span class="string">"[0-9]"</span>)</span><br><span class="line">    <span class="built_in">print</span> i</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>截取字符串”Transaction start”的子串，截取条件从第4个字符开始，截取5位</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction start"</span></span><br><span class="line">    str1=substr(str,4,5)</span><br><span class="line">    <span class="built_in">print</span> str1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>替换字符串”Transaction 243 Start,Event ID:9002”中第一个匹配到数字串替换为$符号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction 243 Start,Event ID:9002"</span></span><br><span class="line">    sub(<span class="string">"[0-9]+"</span>,<span class="string">"$"</span>,str)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>替换字符串”Transaction 243 Start,Event ID:9002”中所有匹配到数字串替换为$符号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction 243 Start,Event ID:9002"</span></span><br><span class="line">    gsub(<span class="string">"[0-9]+"</span>,<span class="string">"$"</span>,str)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>-v</td><td>参数传递</td></tr><tr><td><strong>-f</strong></td><td><strong>指定脚本文件</strong></td></tr><tr><td>-F</td><td>指定分隔符</td></tr><tr><td>-V</td><td>查看awk版本号</td></tr></tbody></table><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在使用参数传递时，引用变量建议全部使用""，否则如果引用的字符串内出现空格则会报错。</span></span><br><span class="line">num=20</span><br><span class="line">var=<span class="string">"Hello World"</span></span><br><span class="line"><span class="comment">#下面命令会报错，原因在于var变量字符串包含空格</span></span><br><span class="line">awk -v num2=<span class="variable">$num</span> -v var1=<span class="variable">$var</span> <span class="string">'BEGIN&#123;print num2,var1&#125;'</span></span><br><span class="line"><span class="comment">#遇到上述问题需要将引用用""包含起来</span></span><br><span class="line">awk -v <span class="string">"num2=<span class="variable">$num</span>"</span> -v <span class="string">"var1=<span class="variable">$var</span>"</span> <span class="string">'BEGIN&#123;print num2,var1&#125;'</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="shell中数组的用法"><a href="#shell中数组的用法" class="headerlink" title="shell中数组的用法"></a>shell中数组的用法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义,各元素用空格或tab分隔</span></span><br><span class="line">array=(<span class="string">"Allen"</span> <span class="string">"Mike"</span> <span class="string">"Messi"</span>)</span><br><span class="line"><span class="comment">#遍历</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="variable">$&#123;array[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>echo ${array[2]}</td><td>打印元素</td></tr><tr><td>echo ${ #array[@]}</td><td>打印元素个数</td></tr><tr><td>echo ${ #array[3]}</td><td>打印元素长度</td></tr><tr><td>array[3]=”Li”</td><td>数组元素赋值</td></tr><tr><td>unset array[2];unset array</td><td>删除元素</td></tr><tr><td>echo ${array[@]:1:3}</td><td>分片访问</td></tr><tr><td>${array[@]/e/E}</td><td>替换第一个e为E</td></tr><tr><td>${array[@]//e/E}</td><td>替换所有的e为E</td></tr></tbody></table><h4 id="awk中数组的用法"><a href="#awk中数组的用法" class="headerlink" title="awk中数组的用法"></a>awk中数组的用法</h4><p>既可以数字作为数组下标也可以字符串作为数组下标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检测数组第i+1下标是否存在</span></span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">in</span> array</span><br><span class="line"><span class="comment">#删除某个数组元素</span></span><br><span class="line">delete array[i]</span><br><span class="line"><span class="comment">#删除整个数组</span></span><br><span class="line">delete array</span><br><span class="line"></span><br><span class="line"><span class="comment">#for循环语法格式1</span></span><br><span class="line"><span class="keyword">for</span>(初始化; 布尔表达式; 更新) &#123;</span><br><span class="line">//代码语句</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#for循环语法格式2</span></span><br><span class="line"><span class="keyword">for</span>(变量 <span class="keyword">in</span> 数组) &#123;</span><br><span class="line">//代码语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组实例"><a href="#数组实例" class="headerlink" title="数组实例"></a>数组实例</h4><ul><li>统计主机上所有的TCP连接状态数，按照每个TCP状态分类</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep tcp | awk <span class="string">'&#123;array[$6]++&#125;END&#123;for(a in array) print a,array[a]&#125;'</span></span><br></pre></td></tr></table></figure><ul><li><p>计算横向数据总和，计算纵向数据总和</p><blockquote><p>allen    80    90    87    91</p><p>mike    78    86    93    96</p><p>Kobe    66    92    82    78</p><p>Jerry    98    74    66    54</p><p>Wang    87    21    100    43</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-10s%-10s%-10s%-10s%-10s%-10s\n"</span>,<span class="string">"Name"</span>,<span class="string">"Yuwen"</span>,<span class="string">"Math"</span>,<span class="string">"English"</span>,<span class="string">"Physical"</span>,<span class="string">"total"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    total=<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>+<span class="variable">$5</span></span><br><span class="line">    sum+=total</span><br><span class="line">    i=2</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=NF)</span><br><span class="line">    &#123;</span><br><span class="line">        array[i]+=<span class="variable">$i</span></span><br><span class="line">        i++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-10s%-10d%-10d%-10d%-10d%-10d\n"</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$5</span>,total</span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-10s%-10d%-10d%-10d%-10d%-10d\n"</span>,<span class="string">"sum_c"</span>,array[2],array[3],array[4],array[5],sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实战演练"><a href="#实战演练" class="headerlink" title="实战演练"></a>实战演练</h3><h4 id="模拟脚本"><a href="#模拟脚本" class="headerlink" title="模拟脚本"></a>模拟脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#数据生成脚本，模拟大型数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> create_random</span><br><span class="line">&#123;</span><br><span class="line">    min=<span class="variable">$1</span></span><br><span class="line">    max=$((<span class="variable">$2</span>-<span class="variable">$min</span>+1))</span><br><span class="line">    num=`date +%s%N`</span><br><span class="line">    <span class="built_in">echo</span> $((<span class="variable">$num</span>%<span class="variable">$max</span>+<span class="variable">$min</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">INDEX=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> allen mike jerry tracy han lilei</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        COUNT=<span class="variable">$RANDOM</span></span><br><span class="line">        NUM1=`create_random 1 <span class="variable">$COUNT</span>`</span><br><span class="line">        NUM2=`expr <span class="variable">$COUNT</span> - <span class="variable">$NUM1</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"`date '+%Y-%m-%d %H:%M:%S'` <span class="variable">$INDEX</span> Batches: user <span class="variable">$user</span> insert <span class="variable">$COUNT</span> records into database:product table:detal, insert <span class="variable">$NUM1</span> records successfully,failed <span class="variable">$NUM2</span> records"</span> &gt;&gt; ./db.log.`date +%Y%m%d`</span><br><span class="line">        INDEX=`expr <span class="variable">$INDEX</span> + 1`</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="需求及解决方案"><a href="#需求及解决方案" class="headerlink" title="需求及解决方案"></a>需求及解决方案</h4><ul><li>统计每个人分别插入多少条record进数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-10s%-10d\n"</span>,i,array[i]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>统计每个人分别插入成功多少record，失败多少record</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    array1[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-10s   %-10d successed!\n"</span>,i,array[i]</span><br><span class="line">    <span class="keyword">for</span> (j <span class="keyword">in</span> array1)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-10s   %-10d Failed!\n"</span>,j,array[j]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将1和2结合起来一起输出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-20s%-20s%-20s%-20s\n"</span>,<span class="string">"Name"</span>,<span class="string">"Sum"</span>,<span class="string">"Successed"</span>,<span class="string">"Failed"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">    array1[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    array2[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-20s%-20d%-20d%-20d\n"</span>,i,array[i],array1[i],array2[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在3结尾加上统计全部插入记录、失败记录数、成功记录数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-20s%-20s%-20s%-20s\n"</span>,<span class="string">"Name"</span>,<span class="string">"Sum"</span>,<span class="string">"Successed"</span>,<span class="string">"Failed"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">    array1[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    array2[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">    &#123;</span><br><span class="line">        total_sum+=array[i]</span><br><span class="line">        total_successed+=array1[i]</span><br><span class="line">        total_failed+=array2[i]</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-20s%-20d%-20d%-20d\n"</span>,i,array[i],array1[i],array2[i]</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-20s%-20d%-20d%-20d\n"</span>,<span class="string">"total"</span>,total_sum,total_successed,total_failed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查找丢失数据的现象(成功+失败不等于插入的记录数)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$8</span>!=<span class="variable">$14</span>+<span class="variable">$17</span>)</span><br><span class="line">        <span class="built_in">print</span> <span class="variable">$0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell编程之（四）：sed</title>
      <link href="/2019/12/28/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9Ased/"/>
      <url>/2019/12/28/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9Ased/</url>
      
        <content type="html"><![CDATA[<h3 id="基础介绍"><a href="#基础介绍" class="headerlink" title="基础介绍"></a>基础介绍</h3><p>sed(Stream Editor)，流编辑器。对标准输出或文件<strong>逐行</strong>进行处理(修改、删除、打印等)。</p><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed [option] <span class="string">"pattern command"</span> file<span class="comment">#对文件逐行操作</span></span><br><span class="line">stdout | sed [option] <span class="string">"pattern command"</span><span class="comment">#对标注输出逐行操作</span></span><br><span class="line"><span class="comment">#sed用parttern来匹配每一行，如果某一行符合pattern模式被匹配到，就用command对那一行进行执行</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="sed选项"><a href="#sed选项" class="headerlink" title="sed选项"></a>sed选项</h3><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>只打印模式匹配行(静默模式)</td></tr><tr><td>-e</td><td>直接在命令行进行sed编辑,默认选项;适用于多个匹配模式和命令</td></tr><tr><td>-f</td><td>编辑动作保存在文件中，指定文件执行</td></tr><tr><td>-r</td><td>支持扩展正则表达式</td></tr><tr><td><strong>-i</strong></td><td><strong>直接修改文件内容</strong></td></tr></tbody></table><h3 id="pattern用法"><a href="#pattern用法" class="headerlink" title="pattern用法"></a>pattern用法</h3><table><thead><tr><th>匹配模式</th><th>含义</th></tr></thead><tbody><tr><td>10command</td><td>匹配到第10行</td></tr><tr><td>10,20command</td><td>匹配从第10行开始，到第20行结束</td></tr><tr><td>10,+5command</td><td>匹配从第10行开始，到第16行结束</td></tr><tr><td><strong>/pattern1/command</strong></td><td><strong>匹配到pattern1的行</strong></td></tr><tr><td><strong>/pattern1/,/pattern2/command</strong></td><td><strong>匹配到pattern1开始，pattern2结束的行</strong></td></tr><tr><td>10,/pattern1/command</td><td>匹配从第10行开始，到匹配到pattern1的行结束</td></tr><tr><td>/pattern1/,10command</td><td>匹配到pattern1的行开始到第10行结束</td></tr></tbody></table><h3 id="编辑命令对照表"><a href="#编辑命令对照表" class="headerlink" title="编辑命令对照表"></a>编辑命令对照表</h3><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>p</td><td>打印</td></tr></tbody></table><h4 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>a</td><td>往后追加</td></tr><tr><td>i</td><td>往前追加</td></tr><tr><td>r</td><td>外部文件读入，行后追加</td></tr><tr><td>w</td><td>匹配行写入外部文件</td></tr></tbody></table><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>d</td><td>删除</td></tr></tbody></table><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>s/old/new</td><td>将行内第一个old替换为new</td></tr><tr><td>s/old/new/g</td><td>将行内全部的old替换为new</td></tr><tr><td>s/old/new/2g</td><td>将行内从第两个old开始到最后所有的old替换为new</td></tr><tr><td>s/old/new/ig</td><td>将行内old全部替换为new，忽略大小写</td></tr></tbody></table><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>=</td><td>显示行号</td></tr></tbody></table><h3 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;#引用匹配的整个串</span><br><span class="line">\1#引用匹配的第一个分组，需要&quot;()&quot;将待匹配括起来</span><br><span class="line">#例如：</span><br><span class="line">sed &#39;s&#x2F;\(l..e\)&#x2F;\1r&#x2F;g&#39;#表示将以l开头e结尾的四字串替换为结尾加e</span><br><span class="line">#注意：&amp;只能匹配整个串，而\1可以匹配一部分串，更加灵活</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>当写脚本时使用sed匹配模式中包含变量时，要用双引号将整个匹配模式括起来。也可以对引用变量使用单引号单独括起来，效果一样。</p><h3 id="查询实例"><a href="#查询实例" class="headerlink" title="查询实例"></a>查询实例</h3><ul><li>打印/etc/passwd中第20行内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'20p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中从第8行开始，到第15行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'8,15p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中从第8行开始，然后+5行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'8,+5p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中开头匹配frdqy字符串的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/^frdqy/p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中开头为root的行开始，到开头为frdqy的行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/^root/,/^frdqy/p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中第8行开始，到含有/sbin/nologin的内容的行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'8,/\/sbin\/nologin/p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中第一个包含/bin/bash内容的行开始，到第五行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/\/bin\/bash/,5p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="删除实例"><a href="#删除实例" class="headerlink" title="删除实例"></a>删除实例</h3><ul><li>删除/etc/passwd中的第15行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'15d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中的第8行到第14行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'8,14d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中的不能登录的用户(/sbin/nologin)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/sbin\/nologin/d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中以mail开头的行，到以backup开头的行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^mail/,/^backup/d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中第一个不能登录的用户，到第13行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/sbin\/nologin/,13d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中第5行到以ftp开头的所有行的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'5,/^ftp/d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中以backup开头的行到最后行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^backup/,$d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除配置文件的注释行和空行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^#/d;/^$/d'</span></span><br><span class="line"><span class="comment">#只能删除#在开头的注释，例如代码内部注释就删不了。</span></span><br><span class="line">sed -i <span class="string">'/^[:blank:]*#/d'</span> ./nginx</span><br><span class="line"><span class="comment">#只删除代码内部的注释</span></span><br></pre></td></tr></table></figure><ul><li>在配置文件中所有不以#开头的行前面添加*符号，注意：以#开头的行不添加</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/^[^#]/\*&amp;/g'</span> ./nginx</span><br><span class="line"><span class="comment">#中括号外的^表示行首，中括号内的^表示取反，即不取中括号内的值。</span></span><br></pre></td></tr></table></figure><h3 id="修改实例"><a href="#修改实例" class="headerlink" title="修改实例"></a>修改实例</h3><ul><li>修改/etc/passwd中第1行中第一个root为ROOT</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'1s/root/ROOT/'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd中第5行到第10行中所有的/sbin/nologin为/bin/bash</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'5,10/\/sbin\/nologin/\/bin\/bash/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd中匹配到/sbin/nologin的行，将匹配到行中的login改为大写LOGIN</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/\(\/sbin\/no\)login/\1LOGIN/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd从匹配到以root开头的行，到匹配到行中包括mail的所有行，将bin改为dqy</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^root/,/mail/s/bin/dqy/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd从匹配到以root开头的行，到第15行中所有行的nologin修改为frdqy</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^root/,15s/nologin/frdqy/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd从第15行开始，到匹配到以frdqy开头的所有行的bin修改为BIN</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'15,/^frdqy/s/bin/BIN/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="追加实例"><a href="#追加实例" class="headerlink" title="追加实例"></a>追加实例</h3><ul><li>在/etc/passwd文件第10行后面追加”Add Line Behind”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'10a Add Line Behind'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件第10行到第20行，每行后面追加”Test Line Behind”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'10,20a Test Line Behind'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件匹配到/bin/bash的行后追加”Insert Line For /bin/bash Behind”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/bin\/bash/a Insert Line For /bin/bash Behind'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件匹配到以gdm开头的行，在匹配行前面追加”Add Line Before”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^gdm/i Add Line Before'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件每一行前面都追加”Insert Line Before Every Line”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'i Insert Line Before Every Line'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/fstab文件内容追加到/etc/passwd文件第 20行后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'20r /etc/fstab'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/inittab文件内容追加到/etc/passwd文件匹配/sbin/nologin行后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/sbin\/nologin/r /etc/inittab'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/vconsole.conf文件内容追加到/etc/passwd文件匹配以sync开头到18行的所有行后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^sync/,18r /etc/vconsole.conf'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/passwd文件匹配到/bin/bash的行追加到/tmp/sed.txt中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/bin\/bash/w /tmp/sed.txt'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/passwd文件从第10行开始到匹配到frdqy开头的所有行追加到/tmp/sed_1.txt中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'10,/^frdqy/w /tmp/sed_1.txt'</span> /etc/passwd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则知识补充</title>
      <link href="/2019/12/27/%E6%AD%A3%E5%88%99%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/"/>
      <url>/2019/12/27/%E6%AD%A3%E5%88%99%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">^ <span class="comment">#行首</span></span><br><span class="line">$ <span class="comment">#行尾</span></span><br><span class="line">\&lt; <span class="comment">#词首</span></span><br><span class="line">\&gt; <span class="comment">#词尾</span></span><br><span class="line">\b <span class="comment">#单词边界</span></span><br><span class="line">\B <span class="comment">#单词非边界</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#  #表示前面的字符连续出现任意次，包括0次。</span><br><span class="line">.  #表示任意单个字符。</span><br><span class="line">.* #表示任意长度的任意字符，与通配符中的*的意思相同。</span><br><span class="line">\? #表示匹配其前面的字符0或1次</span><br><span class="line">\+ #表示匹配其前面的字符至少1次，或者连续多次，连续次数上不封顶。</span><br><span class="line">\&#123;n\&#125;#表示前面的字符连续出现n次，将会被匹配到。</span><br><span class="line">\&#123;x,y\&#125; #表示之前的字符至少连续出现x次，最多连续出现y次，都能被匹配到，换句话说，只要之前的字符连续出现的次数在x与y之间，即可被匹配到。</span><br><span class="line">\&#123;,n\&#125; #表示之前的字符连续出现至多n次，最少0次，都会陪匹配到。</span><br><span class="line">\&#123;n,\&#125; #表示之前的字符连续出现至少n次，才会被匹配到.</span><br><span class="line">.  #表示匹配任意单个字符</span><br><span class="line">S* #表示匹配前面的字符任意次，包括0次</span><br><span class="line">[  ] #表示匹配指定范围内的任意单个字符</span><br><span class="line">[^  ]#表示匹配指定范围外的任意单个字符</span><br><span class="line"> </span><br><span class="line">[[:alpha:]]  #表示任意大小写字母</span><br><span class="line">[[:lower:]]  #表示任意小写字母</span><br><span class="line">[[:upper:]]  #表示任意大写字母</span><br><span class="line">[[:digit:]]  #表示0到9之间的任意单个数字（包括0和9）</span><br><span class="line">[[:alnum:]]  #表示任意数字或字母</span><br><span class="line">[[:space:]]  #表示任意空白字符，包括&quot;空格&quot;、&quot;tab键&quot;等。</span><br><span class="line">[[:punct:]]  #表示任意标点符号</span><br><span class="line"> </span><br><span class="line">[0-9]与[[:digit:]]等效</span><br><span class="line">[a-z]与[[:lower:]]等效</span><br><span class="line">[A-Z]与[[:upper:]]等效</span><br><span class="line">[a-zA-Z]与[[:alpha:]]等效</span><br><span class="line">[a-zA-Z0-9]与[[:alnum:]]等效</span><br><span class="line"> </span><br><span class="line">[^0-9]与[^[:digit:]]等效</span><br><span class="line">[^a-z]与[^[:lower:]]等效</span><br><span class="line">[^A-Z]与[^[:upper:]]等效</span><br><span class="line">[^a-zA-Z]与[^[:alpha:]]等效</span><br><span class="line">[^a-zA-Z0-9]与[^[:alnum:]]等效</span><br><span class="line"> </span><br><span class="line">#简短格式并非所有正则表达式解析器都可以识别</span><br><span class="line">\d #表示任意单个0到9的数字</span><br><span class="line">\D #表示任意单个非数字字符</span><br><span class="line">\t #表示匹配单个横向制表符（相当于一个tab键）</span><br><span class="line">\s #表示匹配单个空白字符，包括&quot;空格&quot;，&quot;tab制表符&quot;等</span><br><span class="line">\S #表示匹配单个非空白字符</span><br><span class="line"></span><br><span class="line">\(\)#表示分组，且可以嵌套</span><br><span class="line">\(ab\)#表示将ab作为一个整体处理</span><br><span class="line">\1 #表示引用整个表达式中第一个分组中的正则表达式</span><br><span class="line">\2 #表示引用整个表达式中第二个分组中的正则表达式</span><br><span class="line">#若分组嵌套，以左括号为基准判断是第几个分组</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 正则 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell编程之（三）：常用查找工具</title>
      <link href="/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%9F%A5%E6%89%BE%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%9F%A5%E6%89%BE%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h3 id="find命令："><a href="#find命令：" class="headerlink" title="find命令："></a>find命令：</h3><blockquote><pre><code>语法格式：find [路径] [选项] [操作]</code></pre><blockquote><pre><code>选项：    -name(大小写敏感)    -iname(忽略大小写)    -perm    -prune(排除某些目录，通常与path一起使用)    如：find . -path ./test -prune -o -type f(-o表示或者)    -user    -group    -mtime -n | +n    -nogroup(无效组)    -nouser(无效用户)    -newer file1 ! file2    -type    -size -n | +n    -mindepth n    -maxdepth n</code></pre><a id="more"></a><pre><code>操作：    -print(默认)    -ok(与exec相似，会给用户提示)    -exec     删除etc下conf结尾的文件        find ./etc -name &apos;*.conf&apos; -exec rm -rf {} \;     复制         find ./etc -size +1M -exec cp {} ./test/ \;     删除/var/log下以.log结尾的7天以前的文件         find /var/log -name &apos;*.log&apos; -mtime +7 -exec rm -rf {} \;     搜素etc下以conf结尾的且大于10k的文件，复制到root/conf目录下         find /etc/ -name &apos;*.conf&apos; -size +10k -exec cp {} /root/conf/ \;</code></pre></blockquote></blockquote><h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><blockquote><pre><code>locate在数据库文件中查找，而find在整个磁盘中查找由系统定时任务负责更新数据库find默认全部匹配，locate默认部分匹配updatedb命令：更新/var/lib/mlocate/mlocate.db配置文件为：/etc/updatedb.conf</code></pre></blockquote><h3 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h3><blockquote><p>-b查找二进制文件</p><p>-m查找帮助文件</p><p>-s查找源代码文件</p></blockquote><h3 id="which"><a href="#which" class="headerlink" title="which"></a>which</h3><blockquote><p>查找二进制文件(查用于查找程序绝对路径)</p></blockquote><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><blockquote><pre><code>形式一：grep [option] [pattern] [file1,file2...]形式二：command | grep [option] [pattern]    参数：        -v     不显示匹配行        -i     忽略大小写        -n     显示行号        -r     递归搜索(当前目录下搜索所有文件)        -E     支持扩展正则        -F     不按正则        -c     输出匹配行的数量        -w     匹配整个单词        -x     匹配整行        -l     只列出匹配的文件名</code></pre></blockquote><h3 id="逻辑运算："><a href="#逻辑运算：" class="headerlink" title="逻辑运算："></a>逻辑运算：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a<span class="comment">#与</span></span><br><span class="line">-o<span class="comment">#或</span></span><br><span class="line">-not|! <span class="comment">#非</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell编程之（二）：函数的使用</title>
      <link href="/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="函数命名格式"><a href="#函数命名格式" class="headerlink" title="函数命名格式"></a>函数命名格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">name()</span><br><span class="line">&#123;</span><br><span class="line">command1</span><br><span class="line">command2</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line">command1</span><br><span class="line">command2</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#调用函数时直接用函数名调用即可，像一条shell命令一样</span></span><br><span class="line"><span class="comment">#函数内部参数使用$1,$2...$n</span></span><br><span class="line"><span class="comment">#调用函数例子：function_name $1 $2</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="函数传参"><a href="#函数传参" class="headerlink" title="函数传参"></a>函数传参</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span><span class="comment">#第一个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$2</span><span class="comment">#第二个参数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name zhangsan lisi</span><br></pre></td></tr></table></figure><h3 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h3><blockquote><p>返回0：成功<br>返回1~255：失败</p><p>echo返回单一字符串或数据列表</p><p>echo $$：返回脚本执行的进程pid，用于解决脚本自身名字包含所要管    理的服务引起冲突的情况。<br>守护进程(daemon)：通过脚本判断某个服务是否正常，不正常就启动</p><p>netstat -tnlp：查看网络状态</p></blockquote><h3 id="全局变量与局部变量的定义"><a href="#全局变量与局部变量的定义" class="headerlink" title="全局变量与局部变量的定义"></a>全局变量与局部变量的定义</h3><blockquote><p>不做特殊说明，shell中变量都是全局变量(不建议在大型脚本中使用全    局变量)</p><p>定义变量时使用local关键字<br>函数内外若存在同名变量，则函数内部变量覆盖外部变量</p><p>库函数：用于封装常用函数，后缀通常以.lib结尾。<br>引用库函数时，用. base_function即可，推荐用绝对路径(点后有一个    空格)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell编程之（一）：变量的用法</title>
      <link href="/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%8F%98%E9%87%8F%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%8F%98%E9%87%8F%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;#String&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr length <span class="string">"<span class="variable">$String</span>"</span></span><br></pre></td></tr></table></figure><h3 id="获取子串在字符串中的索引位置"><a href="#获取子串在字符串中的索引位置" class="headerlink" title="获取子串在字符串中的索引位置"></a>获取子串在字符串中的索引位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr index <span class="variable">$String</span> <span class="variable">$subString</span>  <span class="comment">#切片,字符查找，返回第一个</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="计算子串长度"><a href="#计算子串长度" class="headerlink" title="计算子串长度"></a>计算子串长度</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr match <span class="variable">$String</span> subString</span><br></pre></td></tr></table></figure><h3 id="抽取子串"><a href="#抽取子串" class="headerlink" title="抽取子串"></a>抽取子串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;string:position:length&#125;</span><span class="comment">#从position取length个</span></span><br><span class="line"><span class="variable">$&#123;String:position&#125;</span><span class="comment">#从String中的position开始</span></span><br><span class="line"><span class="variable">$&#123;String: -position&#125;</span><span class="comment">#从右往左(注意空格)</span></span><br><span class="line"><span class="variable">$&#123;String:(position)&#125;</span><span class="comment">#从左往右</span></span><br><span class="line"><span class="variable">$expr</span> substr <span class="variable">$String</span> <span class="variable">$position</span> <span class="variable">$length</span><span class="comment">#与二类似</span></span><br></pre></td></tr></table></figure><h3 id="变量替换："><a href="#变量替换：" class="headerlink" title="变量替换："></a>变量替换：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;变量名#正则&#125;</span><span class="comment">#从开头匹配最短删除</span></span><br><span class="line"><span class="variable">$&#123;变量名##正则&#125;</span><span class="comment">#从开头匹配最长删除</span></span><br><span class="line"><span class="variable">$&#123;变量名%正则&#125;</span><span class="comment">#从尾部匹配最短删除</span></span><br><span class="line"><span class="variable">$&#123;变量名%%正则&#125;</span><span class="comment">#从尾部匹配最长删除</span></span><br><span class="line"><span class="variable">$&#123;变量名/旧字符串/新字符串&#125;</span><span class="comment">#第一个字符串替换</span></span><br><span class="line"><span class="variable">$&#123;变量名//旧字符串/新字符串&#125;</span><span class="comment">#全部字符串替换</span></span><br><span class="line"><span class="comment">#注意：使用expr索引计数从1开始，使用$&#123;&#125;索引计数从0开始</span></span><br></pre></td></tr></table></figure><h3 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">``</span><br><span class="line">$()</span><br></pre></td></tr></table></figure><h3 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(())<span class="comment">#注意与命令替换区分</span></span><br></pre></td></tr></table></figure><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef<span class="comment">#完整格式显示所有进程</span></span><br><span class="line">grep -v <span class="comment">#不输出查询内容，用于过滤grep本身</span></span><br><span class="line">wc -l <span class="comment">#统计有多少行</span></span><br><span class="line">ps -ef | grep nginx | grep -v grep | wc -l <span class="comment">#判断nginx是否存活</span></span><br></pre></td></tr></table></figure><h3 id="有类型变量"><a href="#有类型变量" class="headerlink" title="有类型变量"></a>有类型变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> -r<span class="comment">#声明变量为只读类型</span></span><br><span class="line"><span class="built_in">declare</span> -i <span class="comment">#声明变量为整型</span></span><br><span class="line"><span class="built_in">declare</span> -f <span class="comment">#在脚本中显示定义的函数和内容</span></span><br><span class="line"><span class="built_in">declare</span> -F <span class="comment">#在脚本中显示定义的函数</span></span><br><span class="line"><span class="built_in">declare</span> -a <span class="comment">#声明数组</span></span><br><span class="line">arr=(<span class="string">"jones"</span> <span class="string">"mike"</span> <span class="string">"kobe"</span> <span class="string">"jordan"</span>) <span class="comment">#以空格分隔</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;arr[@]&#125;</span><span class="comment">#获取整个数组</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#arr[@]&#125;</span>  <span class="comment">#获取整个数组长度</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#arr[i]&#125;</span><span class="comment">#获取某个数组元素长度</span></span><br><span class="line"><span class="built_in">declare</span> -x <span class="comment">#声明环境变量</span></span><br><span class="line"><span class="comment">#取消某个设置只需要“-”改为“+”即可</span></span><br></pre></td></tr></table></figure><h3 id="expr语法格式"><a href="#expr语法格式" class="headerlink" title="expr语法格式"></a>expr语法格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">expr <span class="variable">$num1</span> operator <span class="variable">$num2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#操作符对照表(注意转义)</span></span><br><span class="line">num1 | num2num1<span class="comment">#不为空且非0，返回num1；否则返回num2</span></span><br><span class="line">num1 &amp; num2 num1  <span class="comment">#不为空且非0，返回num1；否则返回0</span></span><br><span class="line"><span class="comment">#判断整数</span></span><br><span class="line">expr <span class="variable">$num</span> + 1<span class="comment">#如果执行成功则为整数(成功返回1)</span></span><br></pre></td></tr></table></figure><h3 id="bc进行浮点数计算"><a href="#bc进行浮点数计算" class="headerlink" title="bc进行浮点数计算"></a>bc进行浮点数计算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"23 + 5"</span> | bc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"23.15 + 4.3"</span> | bc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scale=4;23.5/3.5"</span> | bc</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/27/hello-world/"/>
      <url>/2019/12/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Strat"><a href="#Quick-Strat" class="headerlink" title="Quick Strat"></a>Quick Strat</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
