<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Frdqy的博客</title>
  
  <subtitle>记录默默到无闻的学习路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-01-04T12:04:36.753Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Frdqy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux网络属性配置</title>
    <link href="http://yoursite.com/2020/01/04/Linux%E7%BD%91%E7%BB%9C%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/01/04/Linux%E7%BD%91%E7%BB%9C%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE/</id>
    <published>2020-01-04T12:03:23.000Z</published>
    <updated>2020-01-04T12:04:36.753Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ifcfg系列"><a href="#ifcfg系列" class="headerlink" title="ifcfg系列"></a>ifcfg系列</h3><h4 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h4><p>接口及地址查看和管理</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ifconfig [interface]</span><br><span class="line">-a：显示所有接口，包括非激活状态</span><br><span class="line"></span><br><span class="line">ifconfig INTERFACE [aftype] option | address...</span><br><span class="line"><span class="comment">#启用网卡,其中大写的需要替换成具体接口名以及ip地址、子网掩码等信息</span></span><br><span class="line">ifconfig INTERFACE_NAME IP/MASK [up]</span><br><span class="line">ifconfig INTERFACE_NAME netmask NETMASK</span><br></pre></td></tr></table></figure><h4 id="route"><a href="#route" class="headerlink" title="route"></a>route</h4><p>路由查看和管理</p><h5 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">route [option]</span><br><span class="line">-n：直接显示数字信息，不进行主机名解析，效率比较高</span><br></pre></td></tr></table></figure><h5 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">route add [-net|-host] target [netmask Nm] [gw GW] [dev]</span><br><span class="line"><span class="comment">#实例</span></span><br><span class="line"><span class="comment">#添加条目，经由192.168.10.1访问10.10.10.0网络</span></span><br><span class="line">route add -net 10.10.10.0/8 gw 192.168.10.1</span><br><span class="line"><span class="comment">#添加默认网关</span></span><br><span class="line">route add -net 0.0.0.0/0.0.0.0 gw 192.168.10.1</span><br></pre></td></tr></table></figure><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">route del [-net|-host] target [gw GW] [dev]</span><br><span class="line"><span class="comment">#实例</span></span><br><span class="line"><span class="comment">#删除上面创建的条目</span></span><br><span class="line">route del -net 10.10.10.0/8 gw 192.168.10.1</span><br><span class="line"><span class="comment">#删除默认网关</span></span><br><span class="line">route del default</span><br></pre></td></tr></table></figure><h4 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h4><p>网络连接、路由表、接口信息等网络信息查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示路由表</span></span><br><span class="line">netstat -rn</span><br><span class="line">-r：路由表</span><br><span class="line">-n：数字格式</span><br><span class="line"><span class="comment">#显示网络连接</span></span><br><span class="line">netstat [option]</span><br><span class="line">-t：tcp相关连接</span><br><span class="line">-u：UDP相关连接</span><br><span class="line">-w：raw socket相关连接</span><br><span class="line">-l：处于监听状态的连接</span><br><span class="line">-a：所有状态</span><br><span class="line">-n：以数字格式显示</span><br><span class="line">-e：扩展格式</span><br><span class="line">-p：显示相关进程pid</span><br><span class="line">-i：显示接口信息</span><br><span class="line"><span class="comment">#常用组合</span></span><br><span class="line">-tan、-uan、-tnl、-unl、-tnlp</span><br></pre></td></tr></table></figure><h4 id="ifup-ifdown"><a href="#ifup-ifdown" class="headerlink" title="ifup/ifdown"></a>ifup/ifdown</h4><p>通过读取/etc/sysconfig/network-scripts/下网卡的配置文件进行网卡的开启和禁用</p><h3 id="hostnamectl"><a href="#hostnamectl" class="headerlink" title="hostnamectl"></a>hostnamectl</h3><p>配置主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl</span><br><span class="line">status：显示当前主机名设定</span><br><span class="line"><span class="built_in">set</span>-hostname NAME：设定主机名，永久有效</span><br><span class="line"><span class="comment">#centos6中需要修改/etc/sysconfig/network来修改主机名才能永久有效</span></span><br></pre></td></tr></table></figure><h3 id="DNS配置"><a href="#DNS配置" class="headerlink" title="DNS配置"></a>DNS配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在配置文件/etc/resolov.conf中修改即可，最多可以同时添加3个</span></span><br><span class="line"><span class="comment">#nameserver为关键字，后面ip地址只能以数字形式，不能使用域名</span></span><br><span class="line">nameserver 192.168.163.2</span><br><span class="line"><span class="comment">#注意/etc/hosts优先于dns配置文件，如果本地有host，那么host内的设置优先</span></span><br></pre></td></tr></table></figure><h3 id="iproute2系列"><a href="#iproute2系列" class="headerlink" title="iproute2系列"></a>iproute2系列</h3><h4 id="ip"><a href="#ip" class="headerlink" title="ip"></a>ip</h4><p>查看和管理路由、设备、策略路由以及隧道等信息，主要用来逐渐取代ifcfg系列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">ip [option] OBJECT &#123;COMMAND|<span class="built_in">help</span>&#125;</span><br><span class="line">link：网络设备配置</span><br><span class="line">show/list：显示设备的属性</span><br><span class="line"><span class="built_in">set</span>：设置设备的属性</span><br><span class="line">dev NAME：指明要管理的设备</span><br><span class="line">up/down：启用和关闭设备</span><br><span class="line">multicast on/off：启用关闭多播</span><br><span class="line">name NAME：重命名网络接口</span><br><span class="line">mtu NUMBER：设置MTU大小，默认1500</span><br><span class="line">netns NAME：ns为命名空间，用于将指定接口移到某个netns中，常用于构建虚拟网络</span><br><span class="line"><span class="built_in">help</span>：显示简要帮助</span><br><span class="line">netns：管理网络命名空间</span><br><span class="line">add NAME：增加一个网络命名空间</span><br><span class="line">del NAME：删除一个网络命名空间</span><br><span class="line">list：列出所有的netns</span><br><span class="line"><span class="built_in">exec</span> NAME COMMAND：在netns中执行COMMAND命令</span><br><span class="line">addr：管理网络接口的ip地址</span><br><span class="line">add IP dev INTERFACE：指定接口增加IP地址</span><br><span class="line">label NAME：为指定接口添加接口别名。用于解决ifconig命令不显示多个地址的问题</span><br><span class="line">broadcast ADDRESS：广播地址，一般自动获得</span><br><span class="line">scope SCOPE_VALUE：指定接口作用范围</span><br><span class="line">global：全局可用</span><br><span class="line">link：接口可用</span><br><span class="line">host：仅本机可用</span><br><span class="line">delete IP dev INTERFACE：删除指定设备的地址</span><br><span class="line">show：显示地址信息</span><br><span class="line">flush dev INTERFACE：清空指定接口地址</span><br><span class="line">route：路由管理</span><br><span class="line">add 目标网络/掩码长度 via GW dev 设备 [src]：添加路由</span><br><span class="line">change：同上</span><br><span class="line">repalce：同上</span><br><span class="line">delete 网络：删除到指定网络的路由</span><br><span class="line">show：显示路由信息</span><br><span class="line">get 目标网络：获取某单个路由信息</span><br><span class="line">flush：清空路由信息</span><br></pre></td></tr></table></figure><h4 id="ss"><a href="#ss" class="headerlink" title="ss"></a>ss</h4><p>用来取代netstat的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ss [option] [filter]</span><br><span class="line">-t：tcp相关连接</span><br><span class="line">-u：UDP相关连接</span><br><span class="line">-w：raw socket相关连接</span><br><span class="line">-l：处于监听状态的连接</span><br><span class="line">-a：所有状态</span><br><span class="line">-n：以数字格式显示</span><br><span class="line">-e：扩展格式</span><br><span class="line">-p：显示相关进程pid</span><br><span class="line">-i：显示接口信息</span><br><span class="line">-m：显示内存用量</span><br><span class="line">-o：显示计时器信息</span><br><span class="line">[fileter]</span><br><span class="line">state [TCP-STATE] [EXPRESSION]</span><br><span class="line"><span class="comment">#实例</span></span><br><span class="line"><span class="comment">#过滤出目标端口和源端口均为22的信息</span></span><br><span class="line">ss -tan <span class="string">'( dport = :22 or sport = :22 )'</span></span><br><span class="line"><span class="comment">#过滤出TCP状态为ESTABLISHED的连接</span></span><br><span class="line">ss -tan state ESTABLISHED</span><br><span class="line"><span class="comment">#常见TCP状态：LISTEN,ESTABLISHED,FIN_WAIT_1,FIN_WAIT_@,SYN_SENT,SYN_RECV,CLOSED</span></span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h5 id="ip-1"><a href="#ip-1" class="headerlink" title="ip"></a>ip</h5><p>上述命令修改的信息都是临时有效，若想重启后仍然有效需要修改配置文件。配置文件一般放在/etc/sysconfig/network-scripts/目录下。</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>DEVICE</td><td>此配置文件的设备名</td></tr><tr><td>ONBOOT</td><td>开机时是否激活</td></tr><tr><td>UUID</td><td>设备唯一标识</td></tr><tr><td>IPV6INIT</td><td>是否初始化IPV6</td></tr><tr><td>BOOTPROTO</td><td>激活此接口时使用什么协议配置接口属性，常用dhcp、static</td></tr><tr><td>TYPE</td><td>接口类型</td></tr><tr><td>DNS1</td><td>定义第一DNS服务器指向</td></tr><tr><td>DNS2</td><td>定义备用DNS服务器指向</td></tr><tr><td>DOMAIN</td><td>DNS搜索域</td></tr><tr><td>GATEWAY</td><td>网关</td></tr><tr><td>IPADDR</td><td>ip地址，静态是要填写</td></tr><tr><td>NETMASIK/PREFIX</td><td>以长度方式指明子网掩码</td></tr><tr><td>USERCTL</td><td>是否允许普通用户控制此设备</td></tr><tr><td>PEERDNS</td><td>是否允许dhcp的dns指向覆盖本地的dns</td></tr><tr><td>NM_CONTROLLED</td><td>是否使用nm工具</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos6</span></span><br><span class="line">service SERVICE_NAME &#123;start|stop|statues|restart&#125;</span><br><span class="line"><span class="comment">#centos7/8</span></span><br><span class="line">systemctl &#123;start|stop|statues|restart&#125; SERVICE_NAME</span><br><span class="line">nmcli SERVICE_NAME &#123;start|stop|statues|restart&#125;</span><br></pre></td></tr></table></figure><h5 id="route-1"><a href="#route-1" class="headerlink" title="route"></a>route</h5><p>配置文件放在/etc/sysconfig/network-scripts/route-INTERFACE，有两种配置方式，不可混用。</p><ul><li>每行一个路由条目</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TARGET via GW</span><br></pre></td></tr></table></figure><ul><li>每三行一个路由条目</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ADDRESS#&#x3D;TARGET</span><br><span class="line">NETMASK#&#x3D;MASK</span><br><span class="line">GATEWAY#&#x3D;NEXTHOP</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ifcfg系列&quot;&gt;&lt;a href=&quot;#ifcfg系列&quot; class=&quot;headerlink&quot; title=&quot;ifcfg系列&quot;&gt;&lt;/a&gt;ifcfg系列&lt;/h3&gt;&lt;h4 id=&quot;ifconfig&quot;&gt;&lt;a href=&quot;#ifconfig&quot; class=&quot;headerlink&quot; title=&quot;ifconfig&quot;&gt;&lt;/a&gt;ifconfig&lt;/h4&gt;&lt;p&gt;接口及地址查看和管理&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="网络配置" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>IF常见检测选项补充</title>
    <link href="http://yoursite.com/2020/01/03/IF%E5%B8%B8%E8%A7%81%E6%A3%80%E6%B5%8B%E9%80%89%E9%A1%B9%E8%A1%A5%E5%85%85/"/>
    <id>http://yoursite.com/2020/01/03/IF%E5%B8%B8%E8%A7%81%E6%A3%80%E6%B5%8B%E9%80%89%E9%A1%B9%E8%A1%A5%E5%85%85/</id>
    <published>2020-01-03T11:39:30.000Z</published>
    <updated>2020-01-03T11:45:54.526Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用选项"><a href="#常用选项" class="headerlink" title="常用选项"></a>常用选项</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[ -f <span class="string">"somefile"</span> ] ：判断是否是一个文件</span><br><span class="line">[ -x <span class="string">"/bin/ls"</span> ] ：判断/bin/ls是否存在并有可执行权限</span><br><span class="line">[ -n <span class="string">"<span class="variable">$var</span>"</span> ] ：判断<span class="variable">$var</span>变量是否有值</span><br><span class="line">[ <span class="string">"<span class="variable">$a</span>"</span> = <span class="string">"<span class="variable">$b</span>"</span> ] ：判断<span class="variable">$a</span>和<span class="variable">$b</span>是否相等</span><br><span class="line">-r file　　　　　用户可读为真</span><br><span class="line">-w file　　　　　用户可写为真</span><br><span class="line">-x file　　　　　用户可执行为真</span><br><span class="line">-f file　　　　　文件为正规文件为真</span><br><span class="line">-d file　　　　　文件为目录为真</span><br><span class="line">-c file　　　　　文件为字符特殊文件为真</span><br><span class="line">-b file　　　　　文件为块特殊文件为真</span><br><span class="line">-s file　　　　　文件大小非0时为真</span><br><span class="line">-t file　　　　　当文件描述符(默认为1)指定的设备为终端时为真</span><br><span class="line"></span><br><span class="line">含条件选择的shell脚本 对于不含变量的任务简单shell脚本一般能胜任。但在执行一些决策任务时，就需要包含<span class="keyword">if</span>/<span class="keyword">then</span>的条件判断了。shell脚本编程支持此类运算，包括比较运算、判断文件是否存在等。</span><br><span class="line">基本的<span class="keyword">if</span>条件命令选项有： - eq —比较两个参数是否相等（例如，<span class="keyword">if</span> [ 2 –eq 5 ]）</span><br><span class="line">-ne —比较两个参数是否不相等</span><br><span class="line">-lt —参数1是否小于参数2</span><br><span class="line">-le —参数1是否小于等于参数2</span><br><span class="line">-gt —参数1是否大于参数2</span><br><span class="line">-ge —参数1是否大于等于参数2</span><br><span class="line">-f — 检查某文件是否存在（例如，<span class="keyword">if</span> [ -f <span class="string">"filename"</span> ]）</span><br><span class="line">-d — 检查目录是否存在</span><br><span class="line">几乎所有的判断都可以用这些比较运算符实现。脚本中常用-f命令选项在执行某一文件之前检查它是否存在。</span><br></pre></td></tr></table></figure><h3 id="其他选项"><a href="#其他选项" class="headerlink" title="其他选项"></a>其他选项</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[-a file] 如果file存在则为真</span><br><span class="line">[-b file] 如果file存在且是一个块特殊文件则为真</span><br><span class="line">[-c file] 如果file存在且是一个字特殊文件则为真</span><br><span class="line">[-d file] 如果file文件存在且是一个目录则为真</span><br><span class="line">-d前的!是逻辑非</span><br><span class="line">例如：</span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$lcd_path</span>/<span class="variable">$par_date</span> ]</span><br><span class="line">表示后面的那个目录不存在，则执行后面的<span class="keyword">then</span>操作</span><br><span class="line">[-e file] 如果file文件存在则为真</span><br><span class="line">[-f file] 如果file存在且是一个普通文件则为真</span><br><span class="line">[-g file] 如果file存在且已经设置了SGID则为真（SUID 是 Set User ID, SGID 是 Set Group ID的意思）</span><br><span class="line">[-h file] 如果file存在且是一个符号连接则为真</span><br><span class="line">[-k file] 如果file存在且已经设置粘制位则为真</span><br><span class="line">当一个目录被设置为<span class="string">"粘制位"</span>(用chmod a+t),则该目录下的文件只能由</span><br><span class="line">一、超级管理员删除</span><br><span class="line">二、该目录的所有者删除</span><br><span class="line">三、该文件的所有者删除</span><br><span class="line">也就是说,即便该目录是任何人都可以写,但也只有文件的属主才可以删除文件。</span><br><span class="line">具体例子如下：</span><br><span class="line"><span class="comment">#ls -dl /tmp</span></span><br><span class="line">drwxrwxrwt 4 root    root  .........</span><br><span class="line">注意other位置的t，这便是粘连位。</span><br><span class="line">[-p file] 如果file存在且是一个名字管道（F如果O）则为真</span><br><span class="line">管道是linux里面进程间通信的一种方式，其他的还有像信号（signal）、信号量、消息队列、共享内存、套接字（socket）等。</span><br><span class="line">[-r file] 如果file存在且是可读的则为真</span><br><span class="line">[-s file] 如果file存在且大小不为0则为真</span><br><span class="line">[-t FD] 如果文件描述符FD打开且指向一个终端则为真</span><br><span class="line">[-u file] 如果file存在且设置了SUID（<span class="built_in">set</span> userID）则为真</span><br><span class="line">[-w file] 如果file存在且是可写的则为真</span><br><span class="line">[-x file] 如果file存在且是可执行的则为真</span><br><span class="line">[-O file] 如果file存在且属有效用户ID则为真</span><br><span class="line">[-G file] 如果file存在且属有效用户组则为真</span><br><span class="line">[-L file] 如果file存在且是一个符号连接则为真</span><br><span class="line">[-N file] 如果file存在and has been mod如果ied since it was last <span class="built_in">read</span>则为真</span><br><span class="line">[-S file] 如果file存在且是一个套接字则为真</span><br><span class="line">[file1 –nt file2] 如果file1 has been changed more recently than file2或者file1 exists and file2 does not则为真</span><br><span class="line">[file1 –ot file2] 如果file1比file2要老，或者file2存在且file1不存在则为真</span><br><span class="line">[file1 –ef file2] 如果file1和file2指向相同的设备和节点号则为真</span><br><span class="line">[-o optionname] 如果shell选项“optionname”开启则为真</span><br><span class="line">[-z string] “string”的长度为零则为真</span><br><span class="line">[-n string] or [string] “string”的长度为非零non-zero则为真</span><br><span class="line">[sting1==string2] 如果2个字符串相同。“=”may be used instead of “==”<span class="keyword">for</span> strict posix compliance则为真</span><br><span class="line">[string1!=string2] 如果字符串不相等则为真</span><br><span class="line">[string1&lt;string2] 如果“string1”sorts before“string2”lexicographically <span class="keyword">in</span> the current locale则为真</span><br><span class="line">[arg1 OP arg2] “OP”is one of –eq,-ne,-lt,-le,-gt or –ge.These arithmetic binary oprators <span class="built_in">return</span> <span class="literal">true</span> <span class="keyword">if</span> “arg1”is equal to,not equal to,less than,less than or equal to,greater than,or greater than or equal to“agr2”,respectively.“arg1”and “agr2”are integers.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用选项&quot;&gt;&lt;a href=&quot;#常用选项&quot; class=&quot;headerlink&quot; title=&quot;常用选项&quot;&gt;&lt;/a&gt;常用选项&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="IF选项" scheme="http://yoursite.com/tags/IF%E9%80%89%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>Linux程序包管理</title>
    <link href="http://yoursite.com/2020/01/03/Linux%E7%A8%8B%E5%BA%8F%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/01/03/Linux%E7%A8%8B%E5%BA%8F%E5%8C%85%E7%AE%A1%E7%90%86/</id>
    <published>2020-01-03T11:38:49.000Z</published>
    <updated>2020-01-04T12:17:27.874Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>将源代码编译后变成目标二进制格式，然后需要将二进制程序和其库文件、配置文件、帮助文件等打包形成一个或多个方便用户使用管理的包，这个包叫做程序包，实现这个过程的工具叫做程序包管理器。他可以帮助用户实现程序的安装、升级、卸载、查询、校验的等。</p><a id="more"></a><h3 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h3><h4 id="组成格式"><a href="#组成格式" class="headerlink" title="组成格式"></a>组成格式</h4><ul><li>程序包的组成清单。每个程序包单独实现。包括文件清单、安装或卸载脚本</li><li>数据库。整个系统维护一个数据库，存放各个包的名称版本、依赖关系、功能说明、文件路径和校验码等，数据库存放在/var/lib/rpm下，每个文件都存放不同侧重点的信息。</li></ul><h4 id="dpkg"><a href="#dpkg" class="headerlink" title="dpkg"></a>dpkg</h4><p>待补充</p><h4 id="rpm"><a href="#rpm" class="headerlink" title="rpm"></a>rpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">rpm [option] package</span><br><span class="line">-i：安装</span><br><span class="line">-h：<span class="built_in">hash</span> marks输出进度条，每个<span class="string">'#'</span>表示2%进度</span><br><span class="line">--<span class="built_in">test</span>：只检测不安装，通常检测依赖</span><br><span class="line">--replacepkgs：重新安装</span><br><span class="line">--nosignature：不检查签名，即不检查来源合法性</span><br><span class="line">--nodigest：不检查包完整性信息</span><br><span class="line">-U：升级或安装</span><br><span class="line">-h：<span class="built_in">hash</span> marks输出进度条，每个<span class="string">'#'</span>表示2%进度</span><br><span class="line">--oldpackage：程序包降级</span><br><span class="line">--force：强制升级</span><br><span class="line">-e：卸载</span><br><span class="line">--allmatches：卸载所有匹配到的指定程序包各版本</span><br><span class="line">--<span class="built_in">test</span>：只测试卸载，检测依赖</span><br><span class="line">-q：查询</span><br><span class="line"><span class="comment">#rpm &#123;-q|--query&#125; [select-options] [query-options]</span></span><br><span class="line">[select options]</span><br><span class="line">package_name：查询指定的程序包是否安装及其版本</span><br><span class="line">-a：查询所有已安装包</span><br><span class="line">-f file：查询指定的文件由哪个程序包安装生成</span><br><span class="line">-p package：对未安装的程序包查询</span><br><span class="line">--whatprovides capability：查询指定capability由哪个包提供</span><br><span class="line">--whatrequiers capability：查询指定capability被哪个包依赖</span><br><span class="line">[query-options]</span><br><span class="line">--changelog：查询rpm包的changelog</span><br><span class="line">-l：列出程序包安装生成的所有文件</span><br><span class="line">-i：查询程序包相关的信息，版本号、大小等</span><br><span class="line">-c：查询指定程序包的配置文件</span><br><span class="line">-d：查询指定程序包文档</span><br><span class="line">--provides：列出指定程序包的所有capability</span><br><span class="line">-R：查询指定程序包的依赖关系</span><br><span class="line">--scripts：查询程序包自带的脚本</span><br><span class="line">-V：校验</span><br><span class="line"><span class="comment">#校验位含义</span></span><br><span class="line">S file Size differs</span><br><span class="line">M Mode differs (includes permissions and file <span class="built_in">type</span>)</span><br><span class="line">5 digest (formerly MD5 sum) differs</span><br><span class="line">D Device major/minor number mismatch</span><br><span class="line">L readLink(2) path mismatch</span><br><span class="line">U User ownership differs</span><br><span class="line">G Group ownership differs</span><br><span class="line">T mTime differs</span><br><span class="line">P caPabilities differ</span><br><span class="line">-v：详细信息</span><br><span class="line">-K：不安装直接检验程序合法性与完整性</span><br><span class="line">--nosignature：不检查签名，即不检查来源合法性</span><br><span class="line">--nodigest：不检查包完整性信息</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：不要对内核做升级操作，直接安装，支持多内核共存</span></span><br><span class="line"><span class="comment">#程序包原配置文件被改动过，那么安装新版本时不会覆盖，而是将新的配置文件重命名后提供</span></span><br></pre></td></tr></table></figure><h5 id="包命名格式"><a href="#包命名格式" class="headerlink" title="包命名格式"></a>包命名格式</h5><p>name-version-release.arch.rpm</p><p>version：major.minor.release</p><p>release.arch：rpm包的发行号</p><h5 id="拆包"><a href="#拆包" class="headerlink" title="拆包"></a>拆包</h5><p>由于程序打包后并不是所有功能都被用户所需要，因此引进拆包的概念。拆包后包分为主包和支包。</p><p>主包：name-version-release.arch.rpm</p><p>支包：name-function-version-release.arch.rpm</p><p>​            function：devel，utils，libs等各种开发或者插件包</p><h5 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h5><p>每个rpm包之间可能存在安装A就要先安装B这种情况，这叫做依赖关系。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询指定程序包的依赖关系</span></span><br><span class="line">rpm -qr package</span><br></pre></td></tr></table></figure><h5 id="前端工具"><a href="#前端工具" class="headerlink" title="前端工具"></a>前端工具</h5><p>用来自动解决依赖关系。rhel系列上rpm包前端工具为yum、dnf。centos8中dnf已取代yum，不过大体命令使用格式没变，下文均使用习惯的yum来表示dnf。</p><h6 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h6><p>yum的仓库就是yum repository，它存储了大量的rpm包以及包的相关源数据，通常放置于特定目录下repodata</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#仓库定义</span></span><br><span class="line"><span class="comment">#&#123;A|B&#125;其中A为默认选项</span></span><br><span class="line">[repositoryid]</span><br><span class="line">name=some name <span class="keyword">for</span> repo</span><br><span class="line"><span class="comment">#baseurl指向的是一堆url，可以是包含repodata的文件夹</span></span><br><span class="line">baseurl=url://path</span><br><span class="line"><span class="built_in">enable</span>=&#123;1|0&#125;<span class="comment">#该仓库是否启用</span></span><br><span class="line">gpgcheck=&#123;1|0&#125;<span class="comment">#是否启用校验</span></span><br><span class="line">gpgkey=url<span class="comment">#指明gpg的密钥文件</span></span><br><span class="line">mirrorlist=url<span class="comment">#镜像url文件</span></span><br><span class="line">enablegroups=&#123;1|0&#125;<span class="comment">#是否使用组批量管理程序包</span></span><br><span class="line">failovermethod=&#123;roundrobin|priority&#125;<span class="comment">#多个仓库的选用顺序定义</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建repo，即在指定目录下创建仓库</span></span><br><span class="line"><span class="comment">#执行后会在指定目录下创建repodata目录，里面存放了有关各个rpm的信息</span></span><br><span class="line"><span class="comment">#其中repmod.xml存放了各个文件的校验码，用于检查上述文件是否合法，不合法则丢弃cache</span></span><br><span class="line">createrepo 目录</span><br></pre></td></tr></table></figure><h6 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h6><ul><li>/etc/yum.conf：为所有仓库提供公共配置</li><li>/etc/yum.repos.d/*.repo：为仓库的指向提供配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#repo文件中的变量</span></span><br><span class="line"><span class="variable">$releasever</span>：当前OS的发型版的主版本号</span><br><span class="line"><span class="variable">$arch</span>：平台</span><br><span class="line"><span class="variable">$basearch</span>：基础平台</span><br><span class="line"><span class="variable">$YUM0</span>-9：自定义变量</span><br></pre></td></tr></table></figure><h6 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a>yum命令</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">yum [option] &lt;commands&gt; [args...]</span><br><span class="line">repolist &#123;all|<span class="built_in">enable</span>|<span class="built_in">disable</span>&#125;：显示仓库列表</span><br><span class="line">list &#123;available|installed|updates&#125;：显示程序包</span><br><span class="line">install package：安装指定包，可以指定具体版本</span><br><span class="line">reinstall package：重新安装</span><br><span class="line">downgrade package：降级</span><br><span class="line">update package：升级指定程序包</span><br><span class="line">check-update：检查可用升级</span><br><span class="line">remove|erase package：卸载程序包，依赖也会被卸载</span><br><span class="line">info package：显示指定package详细信息</span><br><span class="line">provides|whatprovides feature：查看指定特性由哪个程序包提供</span><br><span class="line">clean &#123;package|all|plugins...&#125;：清理本地缓存</span><br><span class="line">makecache：生成缓存</span><br><span class="line">search string：根据关键字模糊搜索程序包名和summary信息</span><br><span class="line">deplist package：显示指定包的依赖关系</span><br><span class="line"><span class="built_in">history</span>：查看安装、卸载等信息</span><br><span class="line">groupinstall group：安装包组</span><br><span class="line">groupupdate group：更新包组</span><br><span class="line">grouplist：查询所有包组信息</span><br><span class="line">groupinfo group：查询指定包组信息</span><br><span class="line">groupremove group：删除包组</span><br><span class="line"></span><br><span class="line"><span class="comment">#命令行选项</span></span><br><span class="line">--nogpgcheck：禁止进行gpgcheck</span><br><span class="line">-y：自动回答yes</span><br><span class="line">-q：静默模式</span><br><span class="line">--disablerepo=repoidglob：临时禁用指定的repo</span><br><span class="line">--enablerepo=repoidglob：临时启用指定的repo</span><br><span class="line">--noplugins：禁用所有插件</span><br></pre></td></tr></table></figure><h5 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h5><p>rpm包可以自带安装脚本，主要分为四类：</p><ul><li>preinstall：安装之前执行的脚本，用%pre定义，用–nopre取消</li><li>postinstall：安装之后执行的脚本，用%post定义，用–nopost取消</li><li>preuninstall：卸载真正执行前执行的脚本，用%preun定义，用–nopreun取消</li><li>postuninstall：卸载完成后执行的脚本，用%postun定义，用–nopostun取消</li></ul><h5 id="完整性验证"><a href="#完整性验证" class="headerlink" title="完整性验证"></a>完整性验证</h5><p>数字签名的含义是指制作者首先用单向加密算法对数据进行加密并得到特征码，然后使用自己的私钥对特征码进行加密，这样别人只能使用制作者的公钥才能对文件解密，然后再使用相同的单向加密算法计算特征码，相同则文件没有问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取并导入信任的包制作者密钥，centos发行版的密钥通常保存在/etc/pki/rpm-gpg/目录下</span></span><br><span class="line">rpm --import /etc/pki/rpm-gpg/</span><br><span class="line"></span><br><span class="line"><span class="comment">#不安装直接检查完整性与合法性</span></span><br><span class="line">rpm -K package</span><br></pre></td></tr></table></figure><h5 id="数据库重建"><a href="#数据库重建" class="headerlink" title="数据库重建"></a>数据库重建</h5><p>rpm数据库放在/var/lib/rpm/下，其中存放各个包的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用rpmdb命令，本身还是rpm</span></span><br><span class="line">rpm &#123;--initdb|--rebuilddb&#125; [-v] [--dbpath DIRECTORY] [--root DIRECTORY]</span><br><span class="line">--initdb：初始化数据库，若没有数据库则创建一个新的</span><br><span class="line">--rebuilddb：重新构建数据库，构建后的数据库没有rpm事务文件，即__db.001等文件</span><br></pre></td></tr></table></figure><h3 id="程序包编译安装"><a href="#程序包编译安装" class="headerlink" title="程序包编译安装"></a>程序包编译安装</h3><p>形如testname-version-release.src.rpm的包成为源程序包，需要使用rpmbuild命令制作成二进制格式的rpm包后再进行安装。</p><h4 id="组织格式"><a href="#组织格式" class="headerlink" title="组织格式"></a>组织格式</h4><p>源代码一般由多个文件组成，且文件中的代码之间很有可能存在跨文件的依赖关系。因此需要使用make来管理源代码的编译。</p><h4 id="编译安装步骤"><a href="#编译安装步骤" class="headerlink" title="编译安装步骤"></a>编译安装步骤</h4><ul><li><p>./configure</p><ul><li>通过选项传递参数，指定启用特性、安装路径等；执行时会参考用户指定的Makefile.in文件生成makefile</li><li>检查各指定功能依赖到的外部环境</li><li>一般由autoconf系列命令根据开发者的需要生成configure脚本；由automake系列命令根据用户需要生成Makefile.in文件(一般源代码文件都会提供)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#configure脚本，一般可以指定安装位置、指定启用的特性</span></span><br><span class="line">--<span class="built_in">help</span>：获取帮助</span><br><span class="line">--prefix=path：指明默认安装位置，默认为/usr/<span class="built_in">local</span>/</span><br><span class="line">--sysconfdir=path：指明配置文件安装位置</span><br></pre></td></tr></table></figure></li><li><p>make</p><ul><li>根据makefile文件构建应用程序</li></ul></li><li><p>make install</p></li><li><p>导出二进制程序至PATH环境变量中。即编辑文件/etc/profile.d/name.sh添加export  PATH=$PATH:/yourpath</p></li><li><p>导出库文件路径。即编辑/etc/ld.so.conf.d/name.conf，添加新的库文件所在目录至此文件中。之后使用ldconfig命令让系统重新生成缓存</p></li><li><p>导出头文件。可以导出整个目录的符号链接到/usr/include/目录下即可。</p></li><li><p>导出帮助手册。编辑/etc/man.conf，添加一条MANPATH路径即可。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;将源代码编译后变成目标二进制格式，然后需要将二进制程序和其库文件、配置文件、帮助文件等打包形成一个或多个方便用户使用管理的包，这个包叫做程序包，实现这个过程的工具叫做程序包管理器。他可以帮助用户实现程序的安装、升级、卸载、查询、校验的等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="rpm" scheme="http://yoursite.com/tags/rpm/"/>
    
      <category term="yum" scheme="http://yoursite.com/tags/yum/"/>
    
      <category term="dnf" scheme="http://yoursite.com/tags/dnf/"/>
    
  </entry>
  
  <entry>
    <title>任务计划crontab</title>
    <link href="http://yoursite.com/2020/01/02/%E4%BB%BB%E5%8A%A1%E8%AE%A1%E5%88%92crontab/"/>
    <id>http://yoursite.com/2020/01/02/%E4%BB%BB%E5%8A%A1%E8%AE%A1%E5%88%92crontab/</id>
    <published>2020-01-02T14:21:35.000Z</published>
    <updated>2020-01-02T14:26:20.789Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>用于设定系统定时处理某件事情的功能，例如设定数据库定时备份等。</p><a id="more"></a><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>at、batch、crontab</p><p>其中at和batch是在未来的某个时间点执行一次任务，crontab是周期性的运行某任务</p><p>上述命令的执行结果会通过邮件发送给用户。这里说的邮件是本机邮件，不是互联网邮件。</p><h4 id="at"><a href="#at" class="headerlink" title="at"></a>at</h4><p>在未来某个时间点执行一次某个任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">at [option] time</span><br><span class="line">-l：查看已有的任务</span><br><span class="line">-f file：从file中读取作业内容，不用交互输入</span><br><span class="line">-d <span class="comment">#：删除指明作业号的作业</span></span><br><span class="line">-c <span class="comment">#：查看指定作业号的具体内容</span></span><br><span class="line">-q QUEUE：指明任务执行队列，默认队列为a</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行结果以邮件方式发给提交作业的用户</span></span><br><span class="line"><span class="comment">#时间格式为：HH:MM[YYYY-mm-dd]</span></span><br><span class="line"><span class="comment">#模糊时间表示：noon、midnight、teatime、tomorrow</span></span><br><span class="line"><span class="comment">#相对时间表示：now+#mins/hours/days/weeks</span></span><br></pre></td></tr></table></figure><h4 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h4><p>实现周期性执行某任务。需要服务程序来监控，该服务为cronle，提供了crond守护进程及相关辅助工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意：如果拒绝接收邮件可以用command &gt; /dev/null，还会接收错误输出</span></span><br><span class="line"><span class="comment">#若使用command &amp;&gt; /dev/null则连错误输出也过滤掉，不推荐</span></span><br><span class="line">crontab [option]</span><br><span class="line">-e：编辑任务；可用于删除单个任务</span><br><span class="line">-l：列出所有任务</span><br><span class="line">-r：移除所有任务；即删除/var/spool/cron/下的用户文件</span><br><span class="line">-i：交互式</span><br><span class="line">-u user：root用户用于管理其他用户的任务，与其他命令组合使用</span><br></pre></td></tr></table></figure><h5 id="系统cron任务"><a href="#系统cron任务" class="headerlink" title="系统cron任务"></a>系统cron任务</h5><p>主要用于实现系统自身的维护，编辑时直接手动编辑配置文件/etc/crontab</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cat /etc/crontab</span></span><br><span class="line"><span class="comment">#注意：每一行定义一个周期任务；命令建议使用绝对路径；执行结果发送给MAILTO指定的用户；共7个字段</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/crontab</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"></span><br><span class="line"><span class="comment"># For details see man 4 crontabs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  * user-name  command to be executed</span></span><br></pre></td></tr></table></figure><h5 id="用户cron任务"><a href="#用户cron任务" class="headerlink" title="用户cron任务"></a>用户cron任务</h5><p>使用命令crontab编辑任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#确保crond运行</span></span><br><span class="line">systemctl status crond.service</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义于/var/spool/cron/username中，只能用命令crontab修改，且只有6个字段(无用户名)</span></span><br><span class="line"><span class="comment">#注意：每一行定义一个周期任务；命令建议使用绝对路径；结果发给定义文件的用户</span></span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"></span><br><span class="line"><span class="comment"># For details see man 4 crontabs</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of job definition:</span></span><br><span class="line"><span class="comment"># .---------------- minute (0 - 59)</span></span><br><span class="line"><span class="comment"># |  .------------- hour (0 - 23)</span></span><br><span class="line"><span class="comment"># |  |  .---------- day of month (1 - 31)</span></span><br><span class="line"><span class="comment"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span></span><br><span class="line"><span class="comment"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span></span><br><span class="line"><span class="comment"># |  |  |  |  |</span></span><br><span class="line"><span class="comment"># *  *  *  *  *  command to be executed</span></span><br></pre></td></tr></table></figure><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><ul><li>*表示“每…执行一次”；</li><li>在时间点上使用逗号分隔的多个值可以表示多个时间实现离散取值</li><li>在时间点上使用#-#表示连续时间取值；</li><li>可以在指定时间上定义步长*/#，#就是步长，且步长需要能整除时间；</li><li>最小单位为分钟，不能完成秒级任务(可以通过脚本每分钟循环实现)</li></ul><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><ul><li>3 * * * *：每小时执行一次；每小时的第3分钟执行</li><li>3 4 * * 5：每周执行一次；每周5的4点3分执行</li><li>5 6 7 * *：每月执行一次；每月的7号的6点5分执行</li><li>7 8 9 10 *：每年执行一次；每年10月9号8点7分执行</li><li>9 8 * * 3,7：每周3和周日执行一次</li><li>0 8,20 * * 3,7：每周3和周日的8点和20点执行一次，注意前面的min位必须指定，否则每分钟都执行</li><li>0 9-18 * * 1-5：周1到周5的9点到18点每小时执行一次</li><li>*/5 * * * *：每5分钟执行一次</li></ul><h3 id="本地电子邮件服务"><a href="#本地电子邮件服务" class="headerlink" title="本地电子邮件服务"></a>本地电子邮件服务</h3><h4 id="smtp"><a href="#smtp" class="headerlink" title="smtp"></a>smtp</h4><p>simple mail transmission protocol，简单邮件投递服务，只能发邮件不能收邮件</p><h4 id="pop3"><a href="#pop3" class="headerlink" title="pop3"></a>pop3</h4><p>post office protocol，邮局协议，用于接收邮件</p><h4 id="mail命令"><a href="#mail命令" class="headerlink" title="mail命令"></a>mail命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mail [-s <span class="string">'SUBJECT'</span>] 用户 &lt; 邮件正文</span><br><span class="line"></span><br><span class="line"><span class="comment">#邮件正文一般用输入重定向即可</span></span><br><span class="line"><span class="comment">#注意，初次实验可能对面没有收到，因为配置文件/etc/postfix/main.cf文件中的inet_interfaces = all一开始没有设置成all而是localhost，修改后即可正常发送。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;用于设定系统定时处理某件事情的功能，例如设定数据库定时备份等。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="定时任务" scheme="http://yoursite.com/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>压缩与归档</title>
    <link href="http://yoursite.com/2020/01/02/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E5%BD%92%E6%A1%A3/"/>
    <id>http://yoursite.com/2020/01/02/%E5%8E%8B%E7%BC%A9%E4%B8%8E%E5%BD%92%E6%A1%A3/</id>
    <published>2020-01-02T14:20:58.000Z</published>
    <updated>2020-01-02T14:26:05.361Z</updated>
    
    <content type="html"><![CDATA[<h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>CPU时间换磁盘空间</p><h3 id="压缩工具"><a href="#压缩工具" class="headerlink" title="压缩工具"></a>压缩工具</h3><p>compress/uncompress    .z</p><p>gzip/gunzip    .gz</p><p>bzip2/bunzip2    .bz2</p><p>xz/unxz    .xz</p><p>上述工具不支持压缩目录，要压缩目录需要先归档。<a id="more"></a></p><h4 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#压缩文件并删除源文件</span></span><br><span class="line">gzip [option] file</span><br><span class="line">-d：解压缩，相当于gunzip</span><br><span class="line">-<span class="comment">#：指定压缩比，默认6，数字越大压缩比越大(1-9)</span></span><br><span class="line">-c：将压缩结果输出至标准输出例如：gzip -c file &gt; file.gz</span><br><span class="line"><span class="comment">#解压缩文件，结尾必须是.gz结尾</span></span><br><span class="line">gunzip [option] file.gz</span><br><span class="line"><span class="comment">#不解压直接查看压缩文件</span></span><br><span class="line">zcat file.gz</span><br></pre></td></tr></table></figure><h4 id="bzip2"><a href="#bzip2" class="headerlink" title="bzip2"></a>bzip2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bizip2 [option] file</span><br><span class="line">-d：解压缩，相当于bunzip</span><br><span class="line">-<span class="comment">#：指定压缩比，默认为6，数字越大压缩比越大(1-9)</span></span><br><span class="line">-k：保留源文件</span><br><span class="line"><span class="comment">#不解压直接查看压缩文件</span></span><br><span class="line">bzcat file.bz</span><br></pre></td></tr></table></figure><h4 id="xz-unxz"><a href="#xz-unxz" class="headerlink" title="xz/unxz"></a>xz/unxz</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xz [option] file</span><br><span class="line">-d：解压缩</span><br><span class="line">-<span class="comment">#：指定压缩比，默认为6，数字越大压缩比越大(1-9)</span></span><br><span class="line">-k：保留源文件</span><br><span class="line"><span class="comment">#不解压直接查看压缩文件</span></span><br><span class="line">xzcat file.xz</span><br></pre></td></tr></table></figure><h3 id="归档工具"><a href="#归档工具" class="headerlink" title="归档工具"></a>归档工具</h3><p>用于将目录内所有文件都归档成一个文件再指行压缩</p><h4 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">tar [option] file</span><br><span class="line">-c：创建归档</span><br><span class="line">-x：展开归档</span><br><span class="line">-t：查看归档文件列表，不展开归档</span><br><span class="line">-f path：指明要归档的文件目录</span><br><span class="line">-C path：指明归档文件展开到何处</span><br><span class="line">-z：使用gizp2压缩/解压缩</span><br><span class="line">-j：使用bzip2压缩/解压缩</span><br><span class="line">-J：使用xz压缩/解压缩</span><br><span class="line">-v：显示压缩详细信息</span><br><span class="line">-A：新增文件到已压缩文件中</span><br><span class="line"></span><br><span class="line"><span class="comment">#常用搭配</span></span><br><span class="line"><span class="comment">#使用gzip压缩和解压缩目录文件</span></span><br><span class="line">tar zcvf 保存文件.tar.gz ./<span class="built_in">test</span>/</span><br><span class="line">tar zxvf 保存文件.tar.gz ./<span class="built_in">test</span>/</span><br><span class="line"><span class="comment">#使用bzip2压缩和解压缩目录文件</span></span><br><span class="line">tar jcvf 保存文件.tar.bz ./<span class="built_in">test</span>/</span><br><span class="line">tar jxvf 保存文件.tar.bz ./<span class="built_in">test</span>/</span><br><span class="line"><span class="comment">#使用xz压缩和解压缩目录文件</span></span><br><span class="line">tar Jcvf 保存文件.tar.xz ./<span class="built_in">test</span>/</span><br><span class="line">tar Jxvf 保存文件.tar.xz ./<span class="built_in">test</span>/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h3&gt;&lt;p&gt;CPU时间换磁盘空间&lt;/p&gt;
&lt;h3 id=&quot;压缩工具&quot;&gt;&lt;a href=&quot;#压缩工具&quot; class=&quot;headerlink&quot; title=&quot;压缩工具&quot;&gt;&lt;/a&gt;压缩工具&lt;/h3&gt;&lt;p&gt;compress/uncompress    .z&lt;/p&gt;
&lt;p&gt;gzip/gunzip    .gz&lt;/p&gt;
&lt;p&gt;bzip2/bunzip2    .bz2&lt;/p&gt;
&lt;p&gt;xz/unxz    .xz&lt;/p&gt;
&lt;p&gt;上述工具不支持压缩目录，要压缩目录需要先归档。
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="tar" scheme="http://yoursite.com/tags/tar/"/>
    
      <category term="压缩" scheme="http://yoursite.com/tags/%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>磁盘管理与文件系统</title>
    <link href="http://yoursite.com/2020/01/02/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2020/01/02/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-01-02T14:20:26.000Z</published>
    <updated>2020-01-02T14:25:47.253Z</updated>
    
    <content type="html"><![CDATA[<h3 id="设备类型"><a href="#设备类型" class="headerlink" title="设备类型"></a>设备类型</h3><h4 id="块"><a href="#块" class="headerlink" title="块"></a>块</h4><p>随机访问，数据交换单位是块</p><h4 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h4><p>线性访问，数据交换单位是字符</p><a id="more"></a><h3 id="设备文件"><a href="#设备文件" class="headerlink" title="设备文件"></a>设备文件</h3><p>关联至设备的驱动程序；设备的访问入口</p><h4 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/dev/sd[a-z]<span class="comment">#</span></span><br><span class="line"><span class="comment">#其中"#"表示任意数字</span></span><br></pre></td></tr></table></figure><h4 id="设备号"><a href="#设备号" class="headerlink" title="设备号"></a>设备号</h4><ul><li>major：主设备号，区分设备类型，用于标明设备所需要的驱动程序</li><li>minor：次设备号，区分同种设备类型下的不同设备，是特定设备的访问路口</li></ul><h4 id="mknod命令"><a href="#mknod命令" class="headerlink" title="mknod命令"></a>mknod命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用于创建块或字符设备</span></span><br><span class="line">mknod [OPTION]... NAME TYPE [MAJOR MINOR]</span><br><span class="line">-m MODE:创建后的设备文件的访问权限</span><br></pre></td></tr></table></figure><h4 id="引用方式"><a href="#引用方式" class="headerlink" title="引用方式"></a>引用方式</h4><ul><li>设备文件名</li><li>卷标</li><li>UUID</li></ul><h3 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h3><h4 id="MBR"><a href="#MBR" class="headerlink" title="MBR"></a>MBR</h4><p>主引导记录，处于0号扇区(每个扇区512B)。</p><h5 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h5><ul><li>446B：bootloader程序，是引导启动操作系统的程序</li><li>64B：分区表，每16B标识一个分区，一共只能有4个分区，其中第四个分区使用拓展分区即可超过4个分区的限制</li><li>2B：MBR区域的有效性标识，一般为55AA</li></ul><h4 id="GPT"><a href="#GPT" class="headerlink" title="GPT"></a>GPT</h4><p>待补充</p><h4 id="fdisk命令"><a href="#fdisk命令" class="headerlink" title="fdisk命令"></a>fdisk命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用于管理磁盘分区</span></span><br><span class="line">fdisk [options] device</span><br><span class="line"></span><br><span class="line"><span class="comment">#fdisk /dev/dev_name后将进入交互式管理接口</span></span><br><span class="line"><span class="comment">#交互常用命令</span></span><br><span class="line">n:创建新分区</span><br><span class="line">d:删除已有分区</span><br><span class="line">t:修改分区类型</span><br><span class="line">l:查看已有id</span><br><span class="line">w:保存修改到磁盘</span><br><span class="line">q:不保存直接退出</span><br><span class="line">m:查看帮助信息</span><br><span class="line">p:显示现有分区信息</span><br></pre></td></tr></table></figure><p>注意：在已经分区且已经挂载其中某个分区的磁盘上创建新的分区，内核可能在创建完成后无法直接识别，使用以下命令解决</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看内核分区</span></span><br><span class="line">cat /proc/partitions</span><br><span class="line"></span><br><span class="line"><span class="comment">#通知内核强制重读磁盘分区</span></span><br><span class="line">CentOS 5：partprobe [device]</span><br><span class="line">CentOS 6/7：</span><br><span class="line">partx -a [device]</span><br><span class="line">kpartx -af [device]</span><br></pre></td></tr></table></figure><h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3><h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><h5 id="低级格式化"><a href="#低级格式化" class="headerlink" title="低级格式化"></a>低级格式化</h5><p>分区之前进行，主要划分磁道</p><h5 id="高级格式化"><a href="#高级格式化" class="headerlink" title="高级格式化"></a>高级格式化</h5><p>分区之后对分区进行，主要是创建文件系统</p><h4 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h4><p>元数据主要是文件的属性例如大小、权限、时间戳、数据块指针等信息的存放区域(不包括文件名)，一般一个文件的元数据叫做一个inode(index node)索引节点，在创建操作系统时就已经分配了一段区域作为元数据的存储区域。另外，元数据区域包括一个位图，用于标识inode节点的分配情况。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#文件前的编号即为inode编号</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls -i </span></span><br><span class="line">34214878 anaconda-ks.cfg  34214891 initial-setup-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#stat命令查看具体文件的inode信息</span></span><br><span class="line">[root@localhost ~]<span class="comment"># stat ./anaconda-ks.cfg </span></span><br><span class="line">  File: ./anaconda-ks.cfg</span><br><span class="line">  Size: 1467      Blocks: 8          IO Block: 4096   regular file</span><br><span class="line">Device: fd00h/64768dInode: 34214878    Links: 1</span><br><span class="line">Access: (0600/-rw-------)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Context: system_u:object_r:admin_home_t:s0</span><br><span class="line">Access: 2019-12-23 08:02:55.976905697 -0500</span><br><span class="line">Modify: 2019-12-23 07:16:53.042026882 -0500</span><br><span class="line">Change: 2019-12-23 07:16:53.042026882 -0500</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p>目录本身也是文件，他所在的块存贮的是他的一级目录下的文件名和对于的inode映射。因此在每次查找路径时都会先查找/的inode，然后查找/的块，从/的块中的映射查找需要的文件再依次查找下去，直到找到目标文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#free查看内存看出cache占用，里面存储的就包含路径的缓存，用于加快查找映射</span></span><br><span class="line">[root@localhost ~]<span class="comment"># free</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:         817272      522836       91996        1804      202440      140784</span><br><span class="line">Swap:       2097148      216064     1881084</span><br></pre></td></tr></table></figure><h4 id="VFS"><a href="#VFS" class="headerlink" title="VFS"></a>VFS</h4><p>虚拟文件系统，是一个中间层，用于将各种文件系统的差异性屏蔽而向上层统一输出一个接口。</p><p>Linux文件系统：ext2~4、xfs、btrfs等</p><p>网络文件系统：nfs、cifs等</p><p>集群文件系统：gfs2、ocfs2等</p><p>内核级分布式文件系统：ceph等</p><p>伪文件系统：proc、sysfs、tmpfs等</p><p>交换文件系统：swap等</p><p>用户空间分布式文件系统：mogiles、moosefs等</p><h4 id="管理工具"><a href="#管理工具" class="headerlink" title="管理工具"></a>管理工具</h4><h5 id="创建文件系统工具"><a href="#创建文件系统工具" class="headerlink" title="创建文件系统工具"></a>创建文件系统工具</h5><p>mkfs：它包括一系列指令，如mkfs.ext2、mkfs.ext3、mkfs.xfs等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ext系列专用管理工具</span></span><br><span class="line">mke2fs [option] device</span><br><span class="line">-t &#123;ext2|3|4&#125;：指明文件系统类型</span><br><span class="line">-b &#123;1024|2048|4096&#125;：指明文件系统的块大小</span><br><span class="line">-L LABLE：指明卷标</span><br><span class="line">-j：创建有日志的文件系统</span><br><span class="line">-i <span class="comment">#：指明inode的比率，即每多少字节创建一个inode</span></span><br><span class="line">-N <span class="comment">#：直接指明要给此文件系统创建的inode数量</span></span><br><span class="line">-O [^]feature：以指定的特性创建文件系统(或取消某种特性)</span><br><span class="line">-m <span class="comment">#：指定预留空间百分比，直接根数字即可</span></span><br></pre></td></tr></table></figure><h5 id="检测及修复文件系统工具"><a href="#检测及修复文件系统工具" class="headerlink" title="检测及修复文件系统工具"></a>检测及修复文件系统工具</h5><p>fsck：它包括一系列指令，如fsck.ext2、fsck.ext3、fsck.xfs等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#e2fsck用于检查ext系列文件系统</span></span><br><span class="line">e2fsck [option] device</span><br><span class="line">-y：对所有问题自动回复yes</span><br><span class="line">-f：即使文件系统clean也要强制检测</span><br><span class="line"></span><br><span class="line"><span class="comment">#fsck用于通用的linux文件系统检查</span></span><br><span class="line">fsck</span><br><span class="line">-t <span class="built_in">type</span>：指明文件系统类型</span><br><span class="line">-a：无须交互而自动修复所有错误</span><br><span class="line">-r：交互式修复(推荐)</span><br></pre></td></tr></table></figure><h5 id="查看管理属性工具"><a href="#查看管理属性工具" class="headerlink" title="查看管理属性工具"></a>查看管理属性工具</h5><p>dumpe2fs、tune2fs、blkid、e2label</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#e2label用于查看与设置ext系列的卷标</span></span><br><span class="line">e2label device</span><br><span class="line">e2label device LABEL</span><br><span class="line"></span><br><span class="line"><span class="comment">#blkid打印块属性</span></span><br><span class="line">blkid [option] device</span><br><span class="line">-L LABEL；根据LABEL定位设备</span><br><span class="line">-U UUID：根据UUID定位设备</span><br><span class="line"></span><br><span class="line"><span class="comment">#tune2fs用于调整ext系列系统中可调整的参数，例如卷标和系统类型等</span></span><br><span class="line">tune2fs [option] device</span><br><span class="line">-l：查看超级块信息</span><br><span class="line">-j：将ext2升级为ext3</span><br><span class="line">-L LABEL：修改卷标</span><br><span class="line">-m <span class="comment">#：修改预留空间百分比，直接跟数字即可</span></span><br><span class="line">-O [^]feature：开启或关闭某种特性</span><br><span class="line">-o [^]mount_option：开启或关闭某种默认挂载选项，常用设置acl</span><br><span class="line"></span><br><span class="line"><span class="comment">#dumpe2fs用于显示文件系统属性信息，包括每个块组和超级块信息</span></span><br><span class="line">dumpe2fs [option] device</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改ext系列文件系统的大小，主要用于扩展lv后扩展文件系统使用</span></span><br><span class="line">resize2fs lvname</span><br></pre></td></tr></table></figure><h4 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h4><p>主要是解决当写文件发生错误导致系统重启后恢复哪些文件而设置的机制。在磁盘上会单独分一块日志区，写文件时先写在日志区，然后再写回文件系统中。虽然会有性能损失，但是利大于弊。</p><h4 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h4><h5 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h5><p>将此文件指向的所有数据块标记为未使用状态并将此文件的inode标记为未使用，即只修改inode位图和数据块位图即可，因此速度很快。</p><h5 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h5><p>当处于同一文件系统时，移动文件仅仅是改变其路径。即将当前目录的条目移到另一目录即可，文件本身并不做改变。</p><p>当处于不同文件系统时，移动文件相当于复制数据至目标文件并删除源文件，因此比较慢。</p><h4 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h4><h5 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h5><p>指向同一inode的不同路径</p><p>其中目录不支持硬链接；硬链接不能跨文件系统；创建硬链接会增加inode引用计数；硬链接大小相同</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#硬链接inode相同</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls -i</span></span><br><span class="line">34214878 anaconda-ks.cfg      34214891 initial-setup-ks.cfg</span><br><span class="line">34214878 anaconda-ks.cfg_bak  34214894 <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二列的“1”就是引用计数</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls -l</span></span><br><span class="line">total 8</span><br><span class="line">-rw-------. 1 root root 1467 Dec 23 07:16 anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. 1 root root 1622 Dec 23 08:03 initial-setup-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建一个硬链接，可以看到引用计数加1</span></span><br><span class="line"><span class="comment">#删除一个硬链接不影响另一个</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ln anaconda-ks.cfg anaconda-ks.cfg_bak</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls -l</span></span><br><span class="line">total 12</span><br><span class="line">-rw-------. 2 root root 1467 Dec 23 07:16 anaconda-ks.cfg</span><br><span class="line">-rw-------. 2 root root 1467 Dec 23 07:16 anaconda-ks.cfg_bak</span><br><span class="line">-rw-r--r--. 1 root root 1622 Dec 23 08:03 initial-setup-ks.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment">#不能链接目录</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ln test test_1</span></span><br><span class="line">ln: <span class="built_in">test</span>: hard link not allowed <span class="keyword">for</span> directory</span><br></pre></td></tr></table></figure><h5 id="符号链接"><a href="#符号链接" class="headerlink" title="符号链接"></a>符号链接</h5><p>inode数据保存的指针区域保存的不是指向磁盘块的指针，而是指向那个真正文件的路径</p><p>其中，符号链接和文件是两个独立的文件，他们有各自的inode；可以对目录进行符号链接，且可以跨文件系统；删除符号链接不影响源文件，但是删除源文件影响符号链接；符号链接大小为路径字符串长度。</p><p>符号链接本身权限是777，因为用户对符号链接的访问本质还是要看源文件的权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以看到符号链接的文件inode与硬链接和源文件不同</span></span><br><span class="line"><span class="comment">#且源文件和符号链接的引用计数也不同，源文件引用计数不变</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ln -s anaconda-ks.cfg anaconda-ks.cfg_symbolic</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls -li</span></span><br><span class="line">total 12</span><br><span class="line">34214878 -rw-------. 2 root root 1467 Dec 23 07:16 anaconda-ks.cfg</span><br><span class="line">34214878 -rw-------. 2 root root 1467 Dec 23 07:16 anaconda-ks.cfg_bak</span><br><span class="line">34214895 lrwxrwxrwx. 1 root root   15 Jan  1 06:15 anaconda-ks.cfg_symbolic -&gt; anaconda-ks.cfg</span><br><span class="line">34214891 -rw-r--r--. 1 root root 1622 Dec 23 08:03 initial-setup-ks.cfg</span><br><span class="line">34214894 drwxr-xr-x. 2 root root    6 Jan  1 06:09 <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#可以对目录进行符号链接</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ln -s test test_symbolic</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ls -li test*</span></span><br><span class="line">34214899 lrwxrwxrwx. 1 root root 4 Jan  1 06:17 test_symbolic -&gt; <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span>:</span><br><span class="line">total 0</span><br></pre></td></tr></table></figure><h4 id="swap交换分区"><a href="#swap交换分区" class="headerlink" title="swap交换分区"></a>swap交换分区</h4><p>Linux上的交换分区必须使用独立的文件系统，且文件系统的system_ID必须为82</p><h5 id="创建swap分区"><a href="#创建swap分区" class="headerlink" title="创建swap分区"></a>创建swap分区</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkswap [option] device</span><br><span class="line">-L：指明卷标</span><br><span class="line">-f：强制创建</span><br></pre></td></tr></table></figure><h5 id="启用swap"><a href="#启用swap" class="headerlink" title="启用swap"></a>启用swap</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">swapon [option] device</span><br><span class="line">-a：启用定义在/etc/fstab文件中的所有swap设备</span><br></pre></td></tr></table></figure><h5 id="禁用swap"><a href="#禁用swap" class="headerlink" title="禁用swap"></a>禁用swap</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff device</span><br></pre></td></tr></table></figure><h4 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h4><p>根文件系统以外的其他文件系统想要被访问就必须先关联到根文件系统上的某个目录来实现，这个关联操作称为“挂载”，挂载目录成为”挂载点“，即用于另一个文件系统的访问入口。</p><p>此外，挂载点必须实现存在；应该使用不会被或未被其他进程使用的目录；挂载点下原有的文件会被隐藏</p><h5 id="mount使用"><a href="#mount使用" class="headerlink" title="mount使用"></a>mount使用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#mount实现挂载</span></span><br><span class="line">mount [-fnrsvw] [-t fstype] [-o options] device dir</span><br><span class="line">-a：自动挂载</span><br><span class="line">-r：只读挂载</span><br><span class="line">-w：读写挂载</span><br><span class="line">-n：默认情况下，挂载卸载会同步更新到/etc/mtab中，该选项用于禁止该功能</span><br><span class="line">-t：指明挂载文件系统类型，可省略，默认通过blkid识别</span><br><span class="line">-L LABEL：挂载时以卷标的方式指明设备</span><br><span class="line">-U UUID：挂载时以UUID方式指明设</span><br><span class="line">-o options挂载选项</span><br><span class="line">sync/async：同步/异步操作</span><br><span class="line">atime/noatime：文件在被访问时是否更新其访问时间戳，不启用更好</span><br><span class="line">diratime/nodiratime：同上，对目录操作</span><br><span class="line">remount：重新挂载，不用卸载再挂载</span><br><span class="line">acl：支持使用facl</span><br><span class="line">ro：只读类似-r</span><br><span class="line">rw：读写类似-w</span><br><span class="line">dev/nodev：此设备上是否允许创建设备文件</span><br><span class="line"><span class="built_in">exec</span>/noexec：是否允许运行此设备上的程序文件</span><br><span class="line">auto/noauto：是否允许自动挂载</span><br><span class="line">user/nouser：是否允许普通用户挂载</span><br><span class="line">suid/nosuid：是否允许suid和sgid特殊权限生效</span><br><span class="line">defaults：rw, suid, dev, <span class="built_in">exec</span>, auto, nouser, and async</span><br><span class="line">--<span class="built_in">bind</span> 源目录 目标目录：实现目录的绑定，用作某目录临时入口</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看当前已挂载设备</span></span><br><span class="line">mount</span><br><span class="line">cat /etc/mtab</span><br><span class="line">cat /proc/mounts</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载光盘</span></span><br><span class="line">mount -r /dev/cdrom mount_point</span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载本地回环设备(iso等映像)</span></span><br><span class="line">mount -o loop 回环设备 mount_point</span><br></pre></td></tr></table></figure><h5 id="umount使用"><a href="#umount使用" class="headerlink" title="umount使用"></a>umount使用</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#umount实现卸载</span></span><br><span class="line">umount [-dflnrv] &#123;directory|device&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#正在被访问时无法卸载,查看被谁访问使用</span></span><br><span class="line">lsof mount_point</span><br><span class="line">fuser -v mount_point</span><br><span class="line"></span><br><span class="line"><span class="comment">#终止所有访问挂载点的进程</span></span><br><span class="line">fuser -km mount_point</span><br></pre></td></tr></table></figure><h5 id="fstab"><a href="#fstab" class="headerlink" title="fstab"></a>fstab</h5><p>用于定义开机自动挂载的目录。其每行定义一个要挂载的文件系统及其相关属性</p><p>属性从左自右分别为：挂载设备、挂载点、文件系统类型、挂载选项、转储频率、自检次序</p><p>挂载设备：LAEBL、UUID、伪文件系统均可</p><p>挂载选项：defaults表示默认选项，若自定义多个选项，则每个选项之间使用”，“分隔</p><p>转储频率：0表示不备份；1表示每天备份、2表示每隔一天备份</p><p>自检次序：0表示不自检；1表示首先自检，通常为根文件系统；2.3.4….依次自检</p><h4 id="其余命令"><a href="#其余命令" class="headerlink" title="其余命令"></a>其余命令</h4><h5 id="df"><a href="#df" class="headerlink" title="df"></a>df</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示文件系统使用情况</span></span><br><span class="line">df [option]</span><br><span class="line">-l：仅显示本地文件的相关信息</span><br><span class="line">-h：以人可读的形式显示，即单位换算</span><br><span class="line">-i：显示inode使用状态</span><br></pre></td></tr></table></figure><h5 id="du"><a href="#du" class="headerlink" title="du"></a>du</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示文件使用情况而非文件系统</span></span><br><span class="line">du [option] file</span><br><span class="line">-h：以人可读的形式显示，即单位换算</span><br><span class="line">-s：显示目录下所有文件的大小总和</span><br></pre></td></tr></table></figure><h5 id="dd"><a href="#dd" class="headerlink" title="dd"></a>dd</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#底层的复制工具</span></span><br><span class="line"><span class="comment">#表示从path1复制文件到path2</span></span><br><span class="line">dd <span class="keyword">if</span>=/path1 of=/path2</span><br><span class="line">bs=<span class="comment">#：表示复制单元大小</span></span><br><span class="line">count=<span class="comment">#：表示复制多少个bs</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#备份MBR</span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/sda of=/tmp/mbr.bck bs=512 count=1</span><br><span class="line"><span class="comment">#破坏MBR的bootloader</span></span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/dev/sda bs=256 count=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#特殊设备</span></span><br><span class="line">/dev/null</span><br><span class="line">/dev/zero</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;设备类型&quot;&gt;&lt;a href=&quot;#设备类型&quot; class=&quot;headerlink&quot; title=&quot;设备类型&quot;&gt;&lt;/a&gt;设备类型&lt;/h3&gt;&lt;h4 id=&quot;块&quot;&gt;&lt;a href=&quot;#块&quot; class=&quot;headerlink&quot; title=&quot;块&quot;&gt;&lt;/a&gt;块&lt;/h4&gt;&lt;p&gt;随机访问，数据交换单位是块&lt;/p&gt;
&lt;h4 id=&quot;字符&quot;&gt;&lt;a href=&quot;#字符&quot; class=&quot;headerlink&quot; title=&quot;字符&quot;&gt;&lt;/a&gt;字符&lt;/h4&gt;&lt;p&gt;线性访问，数据交换单位是字符&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="磁盘管理" scheme="http://yoursite.com/tags/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    
      <category term="文件系统" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>LVM2</title>
    <link href="http://yoursite.com/2020/01/02/LVM2/"/>
    <id>http://yoursite.com/2020/01/02/LVM2/</id>
    <published>2020-01-02T14:19:49.000Z</published>
    <updated>2020-01-03T11:43:14.672Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>Logical Volume Manager，逻辑卷管理器。在硬盘之上创建一个逻辑层用于管理硬盘分区系统。主要用于实现文件系统的动态增加与减少，类似于btrfs的动态扩展和收缩。</p><a id="more"></a><h3 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h3><h4 id="PV"><a href="#PV" class="headerlink" title="PV"></a>PV</h4><p>physical volume</p><p>在物理层面组成的磁盘卷，是在硬件磁盘分区基础上加上了lVM相关的管理参数，可以理解为对硬盘的划分，与分区类似。PV可以是一个磁盘也可以是一个分区。</p><h4 id="VG"><a href="#VG" class="headerlink" title="VG"></a>VG</h4><p>volume group</p><p>将多个PV组合而成抽象出的一个逻辑卷组，用以对外提供PE(physical extend)，即PV在逻辑上组合成VG后再经过逻辑划分成PE来使用。</p><h4 id="PE"><a href="#PE" class="headerlink" title="PE"></a>PE</h4><p>physical extend</p><p>在VG里划分的对外提供的块，一般为M单位大小。</p><h4 id="LV"><a href="#LV" class="headerlink" title="LV"></a>LV</h4><p>logical volume</p><p>由多个PE组成的逻辑卷，对LV可以进行挂载和建立文件系统操作。此时可以通过增加或删除PE实现文件系统的动态增加与减少。</p><h3 id="管理工具"><a href="#管理工具" class="headerlink" title="管理工具"></a>管理工具</h3><h4 id="PV管理工具"><a href="#PV管理工具" class="headerlink" title="PV管理工具"></a>PV管理工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#简要pv信息显示</span></span><br><span class="line">pvs</span><br><span class="line"><span class="comment">#显示pv详细信息</span></span><br><span class="line">pvdisplay device</span><br><span class="line"><span class="comment">#创建pv。新创建的pv没有加入VG，所以不知道PE大小</span></span><br><span class="line">pvcreate device</span><br></pre></td></tr></table></figure><h4 id="VG管理工具"><a href="#VG管理工具" class="headerlink" title="VG管理工具"></a>VG管理工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#简要vg信息显示</span></span><br><span class="line">vgs</span><br><span class="line"><span class="comment">#显示vg详细信息</span></span><br><span class="line">vgdisplay</span><br><span class="line"><span class="comment">#创建vg，其中device必须是已被创建的pv</span></span><br><span class="line">vgcreate [option] vgname device</span><br><span class="line"><span class="comment">#扩展vg，device必须是已创建的pv</span></span><br><span class="line">vgextend vgname device</span><br><span class="line"><span class="comment">#缩减vg，device必须是已创建的pv，且删除前要使用pvmove移走pv中的数据到同一vg的其他pv上</span></span><br><span class="line">vgreduce vgname device</span><br><span class="line"><span class="comment">#删除vg</span></span><br><span class="line">vgremove vgname</span><br></pre></td></tr></table></figure><h4 id="LV管理工具"><a href="#LV管理工具" class="headerlink" title="LV管理工具"></a>LV管理工具</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#简要lv信息显示</span></span><br><span class="line">lvs</span><br><span class="line"><span class="comment">#显示lv详细信息</span></span><br><span class="line">lvdisplay</span><br><span class="line"><span class="comment">#创建lv</span></span><br><span class="line">lvcreate [option] lvname vgname</span><br><span class="line">-L：指明卷大小</span><br><span class="line">-n：指明卷名称</span><br><span class="line"><span class="comment">#扩展逻辑卷</span></span><br><span class="line"><span class="comment">#注意：修改逻辑卷后要修改文件系统大小resize2fs lvname</span></span><br><span class="line">lvextend [option] lvnam</span><br><span class="line">-L：指明目标大小</span><br><span class="line"><span class="comment">#缩减逻辑卷</span></span><br><span class="line"><span class="comment">#注意：缩减逻辑卷前要先卸载逻辑卷，然后做文件系统强制检测修复fsck -f lvname，之后修改文件系统大小resize2fs lvname 大小，最后再挂载即可</span></span><br><span class="line">lvreduce [option] lvname</span><br><span class="line">-L：指明目标大小</span><br><span class="line"><span class="comment">#逻辑卷删除</span></span><br><span class="line">lvremove lvname</span><br></pre></td></tr></table></figure><h3 id="快照"><a href="#快照" class="headerlink" title="快照"></a>快照</h3><p>快照是LVM提供对lv上文件系统做备份的一个功能。快照也是一个或多个逻辑卷区域，只是文件类型与正常文件不同而已。快照使用写时复制，本质是一个指向要备份数据的inode的硬链接，当没有数据改变时快照和目标数据相同。当目标数据发生变化时，会把要修改的文件先拷贝到快照区域，然后再修改需要修改的目标文件，这样快照里保存的就是未修改前的文件了，这方便备份与还原。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建快照</span></span><br><span class="line"><span class="comment">#-p r：指明只读</span></span><br><span class="line">lvcreate -L 大小 -p r -s snapshot_name original_lv_name</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用lvconvert合并快照与源数据</span></span><br><span class="line"><span class="comment">#注意：合并前源数据和快照都需要卸载才可以合并，且合并结束后会自动删除快照</span></span><br><span class="line">lvconvert --merge original_lv_name</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;Logical Volume Manager，逻辑卷管理器。在硬盘之上创建一个逻辑层用于管理硬盘分区系统。主要用于实现文件系统的动态增加与减少，类似于btrfs的动态扩展和收缩。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="lvm" scheme="http://yoursite.com/tags/lvm/"/>
    
  </entry>
  
  <entry>
    <title>RAID</title>
    <link href="http://yoursite.com/2020/01/02/RAID/"/>
    <id>http://yoursite.com/2020/01/02/RAID/</id>
    <published>2020-01-02T14:19:14.000Z</published>
    <updated>2020-01-03T11:45:30.396Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>Redundant Arrays Of Independent Disks，独立磁盘冗余阵列</p><a id="more"></a><h3 id="级别"><a href="#级别" class="headerlink" title="级别"></a>级别</h3><h4 id="RAID-0"><a href="#RAID-0" class="headerlink" title="RAID-0"></a>RAID-0</h4><h5 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h5><p>条带卷(stripe)</p><p>将要存储的数据分块然后并行存储到RAID的不同的磁盘下叫做条带。 </p><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><ul><li>读、写性能提升</li><li>可用空间：N*min(S1,S2…)</li><li>无容错能力</li><li>最小磁盘数：2,2+</li></ul><h4 id="RAID-1"><a href="#RAID-1" class="headerlink" title="RAID-1"></a>RAID-1</h4><h5 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h5><p>镜像卷(mirror)</p><p>将要存储的数据分块然后在RAID的每个磁盘上都存储一份，即镜像。</p><h5 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h5><ul><li>读性能提升，写性能下降</li><li>可用空间：1*min(S1,S2…)</li><li>有冗余能力</li><li>最小磁盘数：2,2+</li></ul><h4 id="RAID-5"><a href="#RAID-5" class="headerlink" title="RAID-5"></a>RAID-5</h4><h5 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h5><p>使用异或校验的形式且校验码依次存储在每个磁盘上，即每个磁盘轮流当校验码，目前主要以左对称为主</p><h5 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h5><ul><li>读写性能提升</li><li>可用空间：(N-1)*min(S1,S2…)</li><li>用冗余能力，最多坏一块</li><li>最小磁盘数：3,3+</li></ul><h4 id="RAID-6"><a href="#RAID-6" class="headerlink" title="RAID-6"></a>RAID-6</h4><h5 id="概念-4"><a href="#概念-4" class="headerlink" title="概念"></a>概念</h5><p>在RAID-5基础上增加一块校验盘</p><h5 id="特点-3"><a href="#特点-3" class="headerlink" title="特点"></a>特点</h5><ul><li>读写性能提升</li><li>可用空间：(N-2)*min(S1,S2…)</li><li>有冗余能力，最多坏2块</li><li>最少磁盘数：4,4+</li></ul><h4 id="RAID-10"><a href="#RAID-10" class="headerlink" title="RAID-10"></a>RAID-10</h4><h5 id="概念-5"><a href="#概念-5" class="headerlink" title="概念"></a>概念</h5><p>先两两做成RAID-1再做成RAID-0。存储时先按RAID-0条带后再镜像存储到RAID-1中。</p><h5 id="特点-4"><a href="#特点-4" class="headerlink" title="特点"></a>特点</h5><ul><li>读写性能提升</li><li>可用空间：N*(S1,S2…)/2</li><li>有冗余能力，每组镜像最多只能坏一块</li></ul><h4 id="RAID-01"><a href="#RAID-01" class="headerlink" title="RAID-01"></a>RAID-01</h4><h5 id="概念-6"><a href="#概念-6" class="headerlink" title="概念"></a>概念</h5><p>先两两做成RAID-0再做成RAID-1。存储时先按RAID-1镜像后再条带到RAID-0中。</p><h5 id="特点-5"><a href="#特点-5" class="headerlink" title="特点"></a>特点</h5><ul><li>读写性能提升</li><li>可用空间：N*(S1,S2…)/2</li><li>有冗余能力，每组镜像最多只能坏一块</li></ul><h3 id="JBOD"><a href="#JBOD" class="headerlink" title="JBOD"></a>JBOD</h3><p>Just a Bunch Of Disks</p><p>功能：将多块磁盘空间合并一个大的连续空间使用，可用空间一般为磁盘容量总和</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;p&gt;Redundant Arrays Of Independent Disks，独立磁盘冗余阵列&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="raid" scheme="http://yoursite.com/tags/raid/"/>
    
  </entry>
  
  <entry>
    <title>文件特殊权限</title>
    <link href="http://yoursite.com/2020/01/01/%E6%96%87%E4%BB%B6%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90/"/>
    <id>http://yoursite.com/2020/01/01/%E6%96%87%E4%BB%B6%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90/</id>
    <published>2020-01-01T11:23:25.000Z</published>
    <updated>2020-01-01T11:55:55.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文件特殊权限"><a href="#文件特殊权限" class="headerlink" title="文件特殊权限"></a>文件特殊权限</h3><p>SUID、SGID、STICKY</p><a id="more"></a><h3 id="安全上下文"><a href="#安全上下文" class="headerlink" title="安全上下文"></a>安全上下文</h3><ol><li>进程以某用户的身份运行：进程是发起此进程用户的代理，因此以此用户的身份和权限完成所有操作</li><li>权限匹配模型：<ol><li>判断进程的属主是否为被访问文件的属主 ，如果是则使用属主权限访问，否则进入2</li><li>判断进程的属主是否属于被访问文件的属组，如果是就使用属组权限，否则进入3</li><li>应用other模型</li></ol></li></ol><h3 id="SUID"><a href="#SUID" class="headerlink" title="SUID"></a>SUID</h3><p>默认情况下用户发起的进程其属主是其发起者。而设置SUID的进程执行时，其属主为进程自己的属主。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/etc/shadow无访问权限</span></span><br><span class="line">[frdqy@localhost ~]$ ls -l /etc/shadow</span><br><span class="line">----------. 1 root root 1434 Dec 31 22:26 /etc/shadow</span><br><span class="line"></span><br><span class="line"><span class="comment">#以frdqy身份无法访问/etc/shadow，因为此时以使用cat的发起者权限来访问/etc/shadow，即other</span></span><br><span class="line">[frdqy@localhost ~]$ cat /etc/shadow</span><br><span class="line">cat: /etc/shadow: Permission denied</span><br><span class="line"></span><br><span class="line"><span class="comment">#此时cat并没有设置SUID权限</span></span><br><span class="line">[frdqy@localhost ~]$ ls -l /bin/cat</span><br><span class="line">-rwxr-xr-x. 1 root root 51856 May 11  2019 /bin/cat</span><br><span class="line"></span><br><span class="line"><span class="comment">#用root给cat设置SUID权限后</span></span><br><span class="line">[root@localhost frdqy]<span class="comment"># chmod u+s /bin/cat</span></span><br><span class="line">[root@localhost frdqy]<span class="comment"># ls -l /bin/cat</span></span><br><span class="line">-rwsr-xr-x. 1 root root 51856 May 11  2019 /bin/cat</span><br><span class="line"></span><br><span class="line"><span class="comment">#frdqy用户即可用cat查看/etc/shadow内容，因为此时cat进程使用的是其属主root权限，而不是进程的发起者</span></span><br><span class="line">[frdqy@localhost ~]$ cat /etc/shadow</span><br><span class="line">root:<span class="variable">$6</span><span class="variable">$RsZ</span>/8mPpOXX17jO8<span class="variable">$yeL</span>/BOfROjigWhsFEEwvF6ZDe3ldr/FJX9vvQFtzJCIWZngO5RhjLVRRgAeSg13ymfLWELIyl5R.sTBbGtP390::0:99999:7:::</span><br></pre></td></tr></table></figure><p>注意：</p><p>如果进程属主原本有执行权限，那么加了SUID后就变成s；如果进程属主原本没有执行权限，那么加SUID后就变成S。</p><h3 id="SGID"><a href="#SGID" class="headerlink" title="SGID"></a>SGID</h3><p>通常对目录设置，这样其他用户在该目录下创建文件时，文件的属组全都是目录的属组，主要为了方便同组用户的修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod g+|g- /dir</span><br></pre></td></tr></table></figure><h3 id="STICKY"><a href="#STICKY" class="headerlink" title="STICKY"></a>STICKY</h3><p>用于解决某一目录下每个用户都可以删除同组其他用户的文件问题，在该目录上设置STICKY后用户只能新建和删除自己的文件，不能删除同组其他用户的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod o+t|o-t /dir</span><br><span class="line"><span class="comment">#/tmp和/var/tmp默认具有STICKY权限</span></span><br></pre></td></tr></table></figure><h3 id="FACL"><a href="#FACL" class="headerlink" title="FACL"></a>FACL</h3><p>facl是文件的额外赋权机制，在原来的ugo之外，另一层让普通用户能控制赋权给另外的用户或组的赋权机制</p><h4 id="getfacl"><a href="#getfacl" class="headerlink" title="getfacl"></a>getfacl</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">getfacl file</span><br><span class="line">user:USERNAME:MODE</span><br><span class="line">group:GROUPNAME:MODE</span><br><span class="line"><span class="comment">#若username为空则为属主的权限，若groupname为空则为默认属组的权限</span></span><br></pre></td></tr></table></figure><h4 id="setfacl"><a href="#setfacl" class="headerlink" title="setfacl"></a>setfacl</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#赋权给用户</span></span><br><span class="line">setfacl -m u:USERNAME:MODE file</span><br><span class="line"><span class="comment">#赋权给组</span></span><br><span class="line">setfacl -m g:GROUPNAME:MODE file</span><br><span class="line"><span class="comment">#撤销赋权</span></span><br><span class="line">setfacl -x u:USERNAME:MODE file</span><br><span class="line">setfacl -x g:GROUPNAME:MODE file</span><br></pre></td></tr></table></figure><h3 id="访问控制顺序"><a href="#访问控制顺序" class="headerlink" title="访问控制顺序"></a>访问控制顺序</h3><p>首先，检查进程属主与被访问文件属主是否相同，相同则使用属主权限；否则检查被访问文件是否定义关于该用户的访问控制链表(facl)，有则应用该访问链表权限；否则检查此进程的属主是否是被访问文件的属组，是则应用属组访问权限，否则检查访问控制链表是否有该用属组的定义，若有则应用该属组权限。最后还不匹配就按other访问。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;文件特殊权限&quot;&gt;&lt;a href=&quot;#文件特殊权限&quot; class=&quot;headerlink&quot; title=&quot;文件特殊权限&quot;&gt;&lt;/a&gt;文件特殊权限&lt;/h3&gt;&lt;p&gt;SUID、SGID、STICKY&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="权限" scheme="http://yoursite.com/tags/%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程之（七）：脚本实战</title>
    <link href="http://yoursite.com/2019/12/31/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%83%EF%BC%89%EF%BC%9A%E8%84%9A%E6%9C%AC%E5%AE%9E%E6%88%98/"/>
    <id>http://yoursite.com/2019/12/31/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%83%EF%BC%89%EF%BC%9A%E8%84%9A%E6%9C%AC%E5%AE%9E%E6%88%98/</id>
    <published>2019-12-31T08:27:45.000Z</published>
    <updated>2019-12-31T08:28:45.979Z</updated>
    
    <content type="html"><![CDATA[<h3 id="脚本需求"><a href="#脚本需求" class="headerlink" title="脚本需求"></a>脚本需求</h3><ul><li>实现一个脚本工具，该脚本提供类似supervisor功能</li><li>一键查看所有进程运行状态</li><li>按分组查看进程运行状态</li></ul><a id="more"></a><h3 id="拆分脚本功能"><a href="#拆分脚本功能" class="headerlink" title="拆分脚本功能"></a>拆分脚本功能</h3><h4 id="app-statues"><a href="#app-statues" class="headerlink" title="app_statues"></a>app_statues</h4><h5 id="function-get-all-process"><a href="#function-get-all-process" class="headerlink" title="function get_all_process"></a>function get_all_process</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#返回进程名称列表字符串</span></span><br><span class="line"><span class="comment"># define variables</span></span><br><span class="line">HOME_DIR=<span class="string">"/home/frdqy/shell/day_06/"</span></span><br><span class="line">CONFIG_FILE=<span class="string">"process.cfg"</span></span><br><span class="line"><span class="keyword">function</span> get_all_process</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> `get_all_group`;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        P_LIST=`sed -n <span class="string">'/\['</span><span class="variable">$g</span><span class="string">'/,/^\[/p'</span> <span class="variable">$HOME_DIR</span>/<span class="variable">$CONFIG_FILE</span> | egrep -v <span class="string">"(^$|^\[)"</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$P_LIST</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-get-all-group"><a href="#function-get-all-group" class="headerlink" title="function get_all_group"></a>function get_all_group</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#返回进程租列表字符串</span></span><br><span class="line"><span class="comment"># define variables</span></span><br><span class="line">HOME_DIR=<span class="string">"/home/frdqy/shell/day_06/"</span></span><br><span class="line">CONFIG_FILE=<span class="string">"process.cfg"</span></span><br><span class="line"><span class="keyword">function</span> get_all_group</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> [ ! -e <span class="variable">$HOME_DIR</span>/<span class="variable">$CONFIG_FILE</span> ];<span class="keyword">then</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"<span class="variable">$CONFIG_FILE</span> is not exit."</span></span><br><span class="line">       <span class="built_in">exit</span> 1</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       G_LIST=`sed -n <span class="string">'/\[GROUP_LIST\]/,/\[/p'</span> <span class="variable">$HOME_DIR</span>/<span class="variable">$CONFIG_FILE</span> | egrep -v <span class="string">"(^$|^\[)"</span>`</span><br><span class="line">       <span class="built_in">echo</span> <span class="variable">$G_LIST</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-get-process-pid-by-name"><a href="#function-get-process-pid-by-name" class="headerlink" title="function get_process_pid_by_name"></a>function get_process_pid_by_name</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数为进程pid根据进程名称查pid</span></span><br><span class="line"><span class="keyword">function</span> get_process_pid_by_name</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pids=`ps -ef | grep <span class="variable">$1</span> | grep -v grep |grep -v <span class="variable">$0</span> | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$pids</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-get-process-info-by-pid"><a href="#function-get-process-info-by-pid" class="headerlink" title="function get_process_info_by_pid"></a>function get_process_info_by_pid</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数为pid，根据pid查询进程状</span></span><br><span class="line"><span class="comment">#详细信息包括：运行状态，PID，MEM信息，CPU信息，时间信息</span></span><br><span class="line"><span class="comment">#此处不能根据进程名查，会有很多无关信息</span></span><br><span class="line"><span class="keyword">function</span> get_process_info_by_pid</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [ `ps -ef | awk -v pid=<span class="variable">$1</span> <span class="string">"<span class="variable">$2</span>==pid&#123;print &#125;"</span> | wc -l` -eq 1 ];<span class="keyword">then</span></span><br><span class="line">        proc_statues=<span class="string">"RUNNING"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        proc_statues=<span class="string">"STOPED"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    pro_cpu=`ps aux | awk -v pid=<span class="variable">$1</span> <span class="string">"<span class="variable">$2</span>==pid&#123;print <span class="variable">$3</span>&#125;"</span>`</span><br><span class="line">    pro_mem=`ps aux | awk -v pid=<span class="variable">$1</span> <span class="string">"<span class="variable">$2</span>==pid&#123;print <span class="variable">$4</span>&#125;"</span>`</span><br><span class="line">    pro_stat_time=`ps -p <span class="variable">$1</span> -o lstart | grep -v STARTED`</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-is-group-in-config"><a href="#function-is-group-in-config" class="headerlink" title="function is_group_in_config"></a>function is_group_in_config</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数为group，判断group是否在config中</span></span><br><span class="line"><span class="comment"># define variables</span></span><br><span class="line">HOME_DIR=<span class="string">"/home/frdqy/shell/day_06/"</span></span><br><span class="line">CONFIG_FILE=<span class="string">"process.cfg"</span></span><br><span class="line"><span class="keyword">function</span> is_group_in_config</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> gn <span class="keyword">in</span> `get_all_group`;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$gn</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-get-all-process-group"><a href="#function-get-all-process-group" class="headerlink" title="function get_all_process_group"></a>function get_all_process_group</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数为group，根据group获取process</span></span><br><span class="line"><span class="keyword">function</span> get_all_process_group</span><br><span class="line">&#123;</span><br><span class="line">   is_group_in_config <span class="variable">$1</span></span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        p_list=`sed -n <span class="string">"/\[<span class="variable">$1</span>/,/\[/p"</span> <span class="variable">$HOME_DIR</span>/<span class="variable">$CONFIG_FILE</span> | egrep <span class="string">"(^$|^#|^\[)"</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$p_list</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"GroupName <span class="variable">$1</span> is not in process.cfg"</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-get-group-by-process"><a href="#function-get-group-by-process" class="headerlink" title="function get_group_by_process"></a>function get_group_by_process</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据进程获取组名，参数为process</span></span><br><span class="line"><span class="keyword">function</span> get_group_by_process</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">for</span> gn <span class="keyword">in</span> `get_all_group`</span><br><span class="line">   <span class="keyword">do</span></span><br><span class="line">       <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process_group <span class="variable">$gn</span>`</span><br><span class="line">       <span class="keyword">do</span></span><br><span class="line">           <span class="keyword">if</span> [ <span class="string">"<span class="variable">$pn</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">               <span class="built_in">echo</span> <span class="variable">$gn</span></span><br><span class="line">           <span class="keyword">fi</span></span><br><span class="line">       <span class="keyword">done</span></span><br><span class="line">   <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-format-print"><a href="#function-format-print" class="headerlink" title="function format_print"></a>function format_print</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#接收两个参数，第一个为process，第二个为group</span></span><br><span class="line"><span class="keyword">function</span> format_print</span><br><span class="line">&#123;</span><br><span class="line">    ps -ef | grep <span class="variable">$1</span> | grep -v grep | grep -v <span class="variable">$this_pid</span> &amp;&gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        pids=`get_process_pid_by_name <span class="variable">$1</span>`</span><br><span class="line">        <span class="keyword">for</span> pid <span class="keyword">in</span> <span class="variable">$pids</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            get_process_info_by_pid <span class="variable">$pid</span></span><br><span class="line">            awk -v p_name=<span class="variable">$1</span> -v g_name=<span class="variable">$2</span> -v p_status=<span class="variable">$pro_stat_time</span> -v p_cpu=<span class="variable">$pro_cpu</span> -v p_mem=<span class="variable">$pro_mem</span> -v p_start_time=<span class="variable">$pro_stat_time</span> <span class="string">'BEGIN&#123;printf "%-10s%-10s%-5s%-5s%-5s%-5s%-15s\n",p_name,g_name,p_status,p_cpu,p_mem,p_start_time&#125;'</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span>    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="function-is-process-in-config"><a href="#function-is-process-in-config" class="headerlink" title="function is_process_in_config"></a>function is_process_in_config</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#参数为process</span></span><br><span class="line"><span class="comment">#坑点：此处一开始将return1写在循环里导致直接跳出</span></span><br><span class="line"><span class="keyword">function</span> is_process_in_config</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$pn</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><ul><li>无参数    列出配置文件中所有经常的运行信息</li><li>-g GroupName      列出GroupName组内的所有进程</li><li>process_name1    列出指定进程的运行信息</li></ul><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -gt 0 ];<span class="keyword">then</span>    </span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"-g"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        <span class="keyword">for</span> gn <span class="keyword">in</span> <span class="variable">$@</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process_group <span class="variable">$gn</span>`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">               is_process_in_config <span class="variable">$pn</span> &amp;&amp; format_print <span class="variable">$pn</span> <span class="variable">$gn</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">done</span>      </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> pn <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            gn=`get_group_by_process <span class="variable">$pn</span>`</span><br><span class="line">            is_process_in_config <span class="variable">$pn</span> &amp;&amp; format_print <span class="variable">$pn</span> <span class="variable">$gn</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        gn=`get_group_by_process <span class="variable">$pn</span>`</span><br><span class="line"><span class="comment">#echo `is_process_in_config $pn`</span></span><br><span class="line">        is_process_in_config <span class="variable">$pn</span> &amp;&amp; format_print <span class="variable">$pn</span> <span class="variable">$gn</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Func:Get process statues in process.cfg</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># define variables</span></span><br><span class="line">HOME_DIR=<span class="string">"/home/frdqy/shell/day_06/"</span></span><br><span class="line">CONFIG_FILE=<span class="string">"process.cfg"</span></span><br><span class="line">this_pid=$$</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_all_group</span><br><span class="line">&#123;</span><br><span class="line">    G_LIST=`sed -n <span class="string">'/\[GROUP_LIST\]/,/\[/p'</span> <span class="variable">$HOME_DIR</span>/<span class="variable">$CONFIG_FILE</span>| egrep -v <span class="string">"(^$|^\[)"</span>`</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$G_LIST</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_all_process</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> `get_all_group`;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        P_LIST=`sed -n <span class="string">'/\['</span><span class="variable">$g</span><span class="string">'/,/^\[/p'</span> <span class="variable">$HOME_DIR</span>/<span class="variable">$CONFIG_FILE</span> | egrep -v <span class="string">"(^$|^\[)"</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$P_LIST</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_process_pid_by_name</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pids=`ps -ef | grep <span class="variable">$1</span> | grep -v grep |grep -v <span class="variable">$this_pid</span> | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$pids</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_process_info_by_pid</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [ `ps -ef | awk -v pid=<span class="variable">$1</span> <span class="string">'$2==pid&#123;print&#125;'</span> | wc -l` -eq 1 ];<span class="keyword">then</span></span><br><span class="line">        proc_statues=<span class="string">"RUNNING"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        proc_statues=<span class="string">"STOPED"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    pro_cpu=`ps aux | awk -v pid=<span class="variable">$1</span> <span class="string">'$2==pid&#123;print $3&#125;'</span>`</span><br><span class="line">    pro_mem=`ps aux | awk -v pid=<span class="variable">$1</span> <span class="string">'$2==pid&#123;print $4&#125;'</span>`</span><br><span class="line">    pro_stat_time=`ps -p <span class="variable">$1</span> -o lstart | grep -v STARTED`</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> is_group_in_config</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> gn <span class="keyword">in</span> `get_all_group`;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$gn</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_all_process_group</span><br><span class="line">&#123;</span><br><span class="line">   is_group_in_config <span class="variable">$1</span></span><br><span class="line">   <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        p_list=`sed -n <span class="string">"/\[<span class="variable">$1</span>/,/\[/p"</span> <span class="variable">$HOME_DIR</span>/<span class="variable">$CONFIG_FILE</span> | egrep -v <span class="string">"(^$|^#|^\[)"</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$p_list</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"GroupName <span class="variable">$1</span> is not in process.cfg"</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> get_group_by_process</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">for</span> gn <span class="keyword">in</span> `get_all_group`</span><br><span class="line">   <span class="keyword">do</span></span><br><span class="line">       <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process_group <span class="variable">$gn</span>`</span><br><span class="line">       <span class="keyword">do</span></span><br><span class="line">           <span class="keyword">if</span> [ <span class="string">"<span class="variable">$pn</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">               <span class="built_in">echo</span> <span class="variable">$gn</span></span><br><span class="line">           <span class="keyword">fi</span></span><br><span class="line">       <span class="keyword">done</span></span><br><span class="line">   <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> format_print</span><br><span class="line">&#123;</span><br><span class="line">    ps -ef | grep <span class="variable">$1</span> | grep -v grep | grep -v <span class="variable">$this_pid</span> &amp;&gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">        pids=`get_process_pid_by_name <span class="variable">$1</span>`</span><br><span class="line">        <span class="keyword">for</span> pid <span class="keyword">in</span> <span class="variable">$pids</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            get_process_info_by_pid <span class="variable">$pid</span></span><br><span class="line">            awk -v p_name=<span class="variable">$1</span> -v g_name=<span class="variable">$2</span> -v p_id=<span class="variable">$pid</span> -v p_status=<span class="variable">$proc_statues</span> -v p_cpu=<span class="variable">$pro_cpu</span> -v p_mem=<span class="variable">$pro_mem</span> -v p_start_time=<span class="string">"<span class="variable">$pro_stat_time</span>"</span> <span class="string">'BEGIN&#123;printf "%-20s%-15s%-15s%-15s%-15s%-15s%-15s\n",p_name,g_name,p_id,p_status,p_cpu,p_mem,p_start_time&#125;'</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        awk -v p_name=<span class="variable">$1</span> -v g_name=<span class="variable">$2</span> <span class="string">'BEGIN&#123;printf "%-20s%-15s%-15s%-15s%-15s%-15s%-15s\n",p_name,g_name,"NULL","NULL","NULL","NULL","NULL"&#125;'</span></span><br><span class="line">    <span class="keyword">fi</span>    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> is_process_in_config</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$pn</span>"</span> == <span class="string">"<span class="variable">$1</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -gt 0 ];<span class="keyword">then</span>    </span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">"-g"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line">        <span class="keyword">for</span> gn <span class="keyword">in</span> <span class="variable">$@</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process_group <span class="variable">$gn</span>`</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">               is_process_in_config <span class="variable">$pn</span> &amp;&amp; format_print <span class="variable">$pn</span> <span class="variable">$gn</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">done</span>      </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> pn <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            gn=`get_group_by_process <span class="variable">$pn</span>`</span><br><span class="line">            is_process_in_config <span class="variable">$pn</span> &amp;&amp; format_print <span class="variable">$pn</span> <span class="variable">$gn</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">for</span> pn <span class="keyword">in</span> `get_all_process`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        gn=`get_group_by_process <span class="variable">$pn</span>`</span><br><span class="line"><span class="comment">#echo `is_process_in_config $pn`</span></span><br><span class="line">        is_process_in_config <span class="variable">$pn</span> &amp;&amp; format_print <span class="variable">$pn</span> <span class="variable">$gn</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>至此，shell编程的专项学习告一段落，下面的练习都将在学习其他知识时进行巩固。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;脚本需求&quot;&gt;&lt;a href=&quot;#脚本需求&quot; class=&quot;headerlink&quot; title=&quot;脚本需求&quot;&gt;&lt;/a&gt;脚本需求&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;实现一个脚本工具，该脚本提供类似supervisor功能&lt;/li&gt;
&lt;li&gt;一键查看所有进程运行状态&lt;/li&gt;
&lt;li&gt;按分组查看进程运行状态&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程之（六）：mysql</title>
    <link href="http://yoursite.com/2019/12/30/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9Amysql/"/>
    <id>http://yoursite.com/2019/12/30/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9Amysql/</id>
    <published>2019-12-30T07:54:12.000Z</published>
    <updated>2019-12-30T07:57:06.178Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装mariadb"><a href="#安装mariadb" class="headerlink" title="安装mariadb"></a>安装mariadb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mariadb-server</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="测试实例"><a href="#测试实例" class="headerlink" title="测试实例"></a>测试实例</h3><h4 id="建表脚本"><a href="#建表脚本" class="headerlink" title="建表脚本"></a>建表脚本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">--student.sql</span><br><span class="line">--create tables</span><br><span class="line">--student tables</span><br><span class="line">create table &#96;student&#96;(</span><br><span class="line">    &#96;s_id&#96; varchar(20),</span><br><span class="line">    &#96;s_name&#96; varchar(20) not null default &#39;&#39;,</span><br><span class="line">    &#96;s_birth&#96; varchar(20)not null default &#39;&#39;,</span><br><span class="line">    &#96;s_sex&#96; varchar(20) not null default &#39;&#39;,</span><br><span class="line">    primary key(&#96;s_id&#96;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--course tables</span><br><span class="line">create table &#96;course&#96;(</span><br><span class="line">    &#96;c_id&#96; varchar(20),</span><br><span class="line">    &#96;c_name&#96; varchar(20)not null default &#39;&#39;,</span><br><span class="line">    &#96;t_id&#96; varchar(20) not null,</span><br><span class="line">    primary key(&#96;c_id&#96;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--teacher table</span><br><span class="line">create table &#96;teacher&#96;(</span><br><span class="line">    &#96;t_id&#96; varchar(20),</span><br><span class="line">    &#96;t_name&#96; varchar(20)not null default &#39;&#39;,</span><br><span class="line">    primary key(&#96;t_id&#96;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">--score table</span><br><span class="line">create table &#96;score&#96;(</span><br><span class="line">    &#96;s_id&#96; varchar(20),</span><br><span class="line">    &#96;c_id&#96; varchar(20),</span><br><span class="line">    &#96;s_score&#96; int(3),</span><br><span class="line">    primary key(&#96;s_id&#96;,&#96;c_id&#96;)</span><br><span class="line">);</span><br><span class="line">--insert student table</span><br><span class="line">insert into student values(&#39;1001&#39;,&#39;zhaolei&#39;,&#39;1990-1001-1001&#39;,&#39;male&#39;);</span><br><span class="line">insert into student values(&#39;1002&#39;,&#39;lihang&#39;,&#39;1990-12-21&#39;,&#39;male&#39;);</span><br><span class="line">insert into student values(&#39;1003&#39;,&#39;yanwen&#39;,&#39;1990-1005-20&#39;,&#39;male&#39;);</span><br><span class="line">insert into student values(&#39;1004&#39;,&#39;hongfei&#39;,&#39;1990-1008-1006&#39;,&#39;male&#39;);</span><br><span class="line">insert into student values(&#39;1005&#39;,&#39;ligang&#39;,&#39;1991-12-1001&#39;,&#39;female&#39;);</span><br><span class="line">insert into student values(&#39;1006&#39;,&#39;zhousheng&#39;,&#39;1992-1003-1001&#39;,&#39;female&#39;);</span><br><span class="line">insert into student values(&#39;1007&#39;,&#39;wangjun&#39;,&#39;1989-1007-1001&#39;,&#39;female&#39;);</span><br><span class="line">insert into student values(&#39;1008&#39;,&#39;zhoufei&#39;,&#39;1990-1001-20&#39;,&#39;female&#39;);</span><br><span class="line">--insert course table</span><br><span class="line">insert into teacher values(&#39;1001&#39;,&#39;aidisheng&#39;);</span><br><span class="line">insert into teacher values(&#39;1002&#39;,&#39;aiyinsitan&#39;);</span><br><span class="line">insert into teacher values(&#39;1003&#39;,&#39;qiansanqiang&#39;);</span><br><span class="line">--insert score table</span><br><span class="line">insert into score values(&#39;1001&#39;,&#39;1001&#39;,80);</span><br><span class="line">insert into score values(&#39;1001&#39;,&#39;1002&#39;,90);</span><br><span class="line">insert into score values(&#39;1001&#39;,&#39;1003&#39;,99);</span><br><span class="line">insert into score values(&#39;1002&#39;,&#39;1001&#39;,70);</span><br><span class="line">insert into score values(&#39;1002&#39;,&#39;1002&#39;,60);</span><br><span class="line">insert into score values(&#39;1002&#39;,&#39;1003&#39;,80);</span><br><span class="line">insert into score values(&#39;1003&#39;,&#39;1001&#39;,80);</span><br><span class="line">insert into score values(&#39;1003&#39;,&#39;1002&#39;,80);</span><br><span class="line">insert into score values(&#39;1003&#39;,&#39;1003&#39;,50);</span><br><span class="line">insert into score values(&#39;1004&#39;,&#39;1001&#39;,20);</span><br><span class="line">insert into score values(&#39;1004&#39;,&#39;1002&#39;,30);</span><br></pre></td></tr></table></figure><h4 id="建数据库"><a href="#建数据库" class="headerlink" title="建数据库"></a>建数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database school;</span><br></pre></td></tr></table></figure><h4 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql school &lt; student.sql</span><br></pre></td></tr></table></figure><h4 id="授权用户"><a href="#授权用户" class="headerlink" title="授权用户"></a>授权用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--授予dbuser用户在所有网段都可以对school数据库进行操作，密码为123456</span><br><span class="line">grant all on school.* to dbuser@&#39;%&#39; identified by &#39;123456&#39;</span><br><span class="line">grant all on school.* to dbuser@&#39;localhost&#39; identified by &#39;123456&#39;</span><br><span class="line">--&#39;%&#39;表示所有主机都可以访问</span><br></pre></td></tr></table></figure><h4 id="使用授权用户登录"><a href="#使用授权用户登录" class="headerlink" title="使用授权用户登录"></a>使用授权用户登录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--u和p与参数间可以省略</span><br><span class="line">mysql -udbuser -p123456 -h localhost</span><br></pre></td></tr></table></figure><h3 id="mysql命令参数"><a href="#mysql命令参数" class="headerlink" title="mysql命令参数"></a>mysql命令参数</h3><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>-u</td><td>用户名</td></tr><tr><td>-p</td><td>用户密码</td></tr><tr><td>-h</td><td>服务器ip地址</td></tr><tr><td>-D</td><td>链接的数数据库</td></tr><tr><td>-N</td><td>不输出列信息</td></tr><tr><td>-B</td><td>使用tab键代替默认交互分隔符</td></tr><tr><td>-e</td><td>执行sql语句</td></tr><tr><td>-E</td><td>垂直输出</td></tr><tr><td>-H</td><td>以HTML格式输出</td></tr><tr><td>-X</td><td>以XML格式输出</td></tr></tbody></table><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><blockquote><p>-B用来不显示周围一圈分隔符时建议放在选项最后，在-e之前。</p></blockquote><h4 id="查询实例"><a href="#查询实例" class="headerlink" title="查询实例"></a>查询实例</h4><ul><li>写一个脚本，该脚本可以接收一个参数，参数为需要执行的sql语句</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">mysql -u dbuser -p123456 -D school -e <span class="string">"<span class="variable">$1</span>"</span></span><br></pre></td></tr></table></figure><ul><li>查询mysql任意表的数据，并将查询到的结果保存到HTML文件中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">mysql -u dbuser -p123456 -D school -H -e <span class="string">"<span class="variable">$1</span>"</span> &gt; <span class="variable">$2</span></span><br></pre></td></tr></table></figure><ul><li>查询mysql任意表的数据，并将查询到的结果保存到XML文件中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">mysql -u dbuser -p123456 -D school -X -e <span class="string">"<span class="variable">$1</span>"</span> &gt; <span class="variable">$2</span></span><br></pre></td></tr></table></figure><h4 id="导入实例"><a href="#导入实例" class="headerlink" title="导入实例"></a>导入实例</h4><h5 id="需求一"><a href="#需求一" class="headerlink" title="需求一"></a>需求一</h5><p>处理文本中的数据，将文本中的数据插入mysql</p><blockquote><p>​    1010    jerry    1991-12-13    male</p><p>​    1011    mike    1991-12-13    female</p><p>​    1012    tracy    1991-12-13    male</p><p>​    1013    kobe    1991-12-13    female</p><p>​    1014    allen    1991-12-13    male</p><p>​    1015    curry    1991-12-13    male</p><p>​    1016    tom    1991-12-13    female</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">user=<span class="string">"dbuser"</span></span><br><span class="line">passwd=<span class="string">"123456"</span></span><br><span class="line">database=<span class="string">"school"</span></span><br><span class="line">mysql_conn=<span class="string">"mysql -u"</span><span class="variable">$user</span><span class="string">" -p"</span><span class="variable">$passwd</span><span class="string">""</span></span><br><span class="line"></span><br><span class="line">cat data.txt | <span class="keyword">while</span> <span class="built_in">read</span> id name birth sex</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="variable">$mysql_conn</span> -D <span class="variable">$database</span> -e <span class="string">"insert into student1 values('<span class="variable">$id</span>','<span class="variable">$name</span>','<span class="variable">$birth</span>','<span class="variable">$sex</span>')"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="需求二"><a href="#需求二" class="headerlink" title="需求二"></a>需求二</h5><p>同上，但是分隔符变了</p><blockquote><p>​    1010|jerry|1991-12-13|male</p><p>​    1011|mike|1991-12-13|female</p><p>​    1012|tracy|1991-12-13|male</p><p>​    1013|kobe|1991-12-13|female</p><p>​    1014|allen|1991-12-13|male</p><p>​    1015|curry|1991-12-13|male</p><p>​    1016|tom|1991-12-13|female</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">user=<span class="string">"dbuser"</span></span><br><span class="line">passwd=<span class="string">"123456"</span></span><br><span class="line">database=<span class="string">"school"</span></span><br><span class="line"><span class="comment">#mysql_conn="mysql -u"$user" -p"$passwd""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#输入分隔符指定</span></span><br><span class="line">IFS=<span class="string">"|"</span></span><br><span class="line"></span><br><span class="line">cat data2.txt | <span class="keyword">while</span> <span class="built_in">read</span> id name birth sex</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mysql -u <span class="string">"dbuser"</span> -p<span class="string">"<span class="variable">$passwd</span>"</span> -D <span class="variable">$database</span> -e <span class="string">"insert into student2 values('<span class="variable">$id</span>','<span class="variable">$name</span>','<span class="variable">$birth</span>','<span class="variable">$sex</span>')"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h5 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h5><p>需求二有一个坑，在于注释的sql语句那样写在变量里会提示找不到命令，可能时管道符号冲突问题，shll真不规范！！</p><h3 id="mysqldump备份"><a href="#mysqldump备份" class="headerlink" title="mysqldump备份"></a>mysqldump备份</h3><h4 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump [OPTIONS] database [tables]</span><br></pre></td></tr></table></figure><h4 id="命令参数"><a href="#命令参数" class="headerlink" title="命令参数"></a>命令参数</h4><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>-u</td><td>用户名</td></tr><tr><td>-p</td><td>密码</td></tr><tr><td>-h</td><td>服务器IP地址</td></tr><tr><td>-d</td><td>等价于–no-data，只导出表结构</td></tr><tr><td>-t</td><td>等价于–no-create-info，只导出数据，不导出建表语句</td></tr><tr><td>-A</td><td>等价于–all-databases</td></tr><tr><td>-B</td><td>等价于–databases，导出一个或多个数据库</td></tr></tbody></table><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>将school中的score备份，并且将备份数据通过ftp传输到xxx.xxx.xxx.xxx的/data/backup目录下</p><p>补充知识</p><blockquote><p>open xxx.xxx.xxx.xxx：用于打开远端连接</p><p>user 用户名 密码：用于登录</p><p>-i：不交互</p><p><strong>-n：自动登录</strong></p><p>-v：显示详细信息</p><p><strong>&lt;&lt; EOF：表示下面将输入长命令，直到遇到EOF结束，且EOF最后一行必须顶格写</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">db_user=<span class="string">"dbuser"</span></span><br><span class="line">db_passwd=<span class="string">"123456"</span></span><br><span class="line"></span><br><span class="line">ftp_user=<span class="string">"ftp_user"</span></span><br><span class="line">ftp_passwd=<span class="string">"redhat"</span></span><br><span class="line">ftp_host=<span class="string">"192.168.184.3"</span></span><br><span class="line"></span><br><span class="line">dst_dir=<span class="string">"/data/backup"</span></span><br><span class="line"></span><br><span class="line">time_date=<span class="string">"`date +%Y%m%d%H%M%S`"</span></span><br><span class="line">file_name=<span class="string">"school_score_<span class="variable">$&#123;time_date&#125;</span>.sql"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> auto_ftp</span><br><span class="line">&#123;</span><br><span class="line">    ftp -niv &lt;&lt; EOF</span><br><span class="line">        open <span class="variable">$ftp_host</span></span><br><span class="line">        user <span class="variable">$ftp_user</span> <span class="variable">$ftp_passwd</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">cd</span> <span class="variable">$dst_dir</span></span><br><span class="line">        put <span class="variable">$1</span></span><br><span class="line">        <span class="built_in">bye</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysqldump -u<span class="string">"<span class="variable">$db_user</span>"</span> -p<span class="string">"<span class="variable">$db_passwd</span>"</span> school score &gt; ./<span class="variable">$file_name</span> &amp;&amp; auto_ftp ./<span class="variable">$file_name</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装mariadb&quot;&gt;&lt;a href=&quot;#安装mariadb&quot; class=&quot;headerlink&quot; title=&quot;安装mariadb&quot;&gt;&lt;/a&gt;安装mariadb&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install mariadb-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程之（五）：awk</title>
    <link href="http://yoursite.com/2019/12/29/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Aawk/"/>
    <id>http://yoursite.com/2019/12/29/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Aawk/</id>
    <published>2019-12-29T13:09:12.000Z</published>
    <updated>2019-12-30T07:58:27.704Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>awk是一个文本处理工具，通常用于处理数据并生成结果报告。</p><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;&#125;pattern&#123;commands&#125;END&#123;&#125;'</span> file_name</span><br><span class="line">stdout | awk <span class="string">'BEGIN&#123;&#125;pattern&#123;commands&#125;END&#123;&#125;'</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="语法格式说明"><a href="#语法格式说明" class="headerlink" title="语法格式说明"></a>语法格式说明</h4><table><thead><tr><th>语法格式</th><th>解释</th></tr></thead><tbody><tr><td>BEGIN{}</td><td>正式处理数据之前执行</td></tr><tr><td>pattern</td><td>匹配模式</td></tr><tr><td>{commands}</td><td>处理命令，可能多行</td></tr><tr><td>END{}</td><td>处理完所有匹配数据后执行</td></tr></tbody></table><h3 id="内置变量对照表"><a href="#内置变量对照表" class="headerlink" title="内置变量对照表"></a>内置变量对照表</h3><table><thead><tr><th>内置变量</th><th>含义</th></tr></thead><tbody><tr><td>$0</td><td>整行内容</td></tr><tr><td>$1-$n</td><td>当前行的第1-n个字段</td></tr><tr><td>NF(Number Field)</td><td>当前行的字段个数</td></tr><tr><td>NR(Number Row)</td><td>当前行行号，从1开始</td></tr><tr><td>FNR(File Number Row)</td><td>多文件每个文件行号单独计数，从0开始</td></tr><tr><td>FS(Field Separator)</td><td>输入字段分隔符，默认空格或tab</td></tr><tr><td>RS(Row Separator)</td><td>输入行分隔符，默认回车换行</td></tr><tr><td>OFS(Output Field Separator)</td><td>输出字段分隔符，默认空格</td></tr><tr><td>ORS(Output Row Separator)</td><td>输出行分隔符，默认回车换行</td></tr><tr><td>FILENAME</td><td>当前输入的文件名字</td></tr><tr><td>ARGC</td><td>命令行参数个数</td></tr><tr><td>ARGV</td><td>命令行参数数组</td></tr></tbody></table><h3 id="printf详解"><a href="#printf详解" class="headerlink" title="printf详解"></a>printf详解</h3><h4 id="printf格式说明符"><a href="#printf格式说明符" class="headerlink" title="printf格式说明符"></a>printf格式说明符</h4><table><thead><tr><th>格式符</th><th>含义</th></tr></thead><tbody><tr><td><strong>%s</strong></td><td><strong>打印字符串</strong></td></tr><tr><td><strong>%d</strong></td><td><strong>打印十进制数</strong></td></tr><tr><td>%f</td><td>打印浮点数</td></tr><tr><td>%x</td><td>打印十六进制数</td></tr><tr><td>%o</td><td>打印八进制数</td></tr><tr><td>%e</td><td>打印数字科学计数法形式</td></tr><tr><td>%c</td><td>打印单个字符的ASCII</td></tr></tbody></table><h4 id="printf修饰符"><a href="#printf修饰符" class="headerlink" title="printf修饰符"></a>printf修饰符</h4><table><thead><tr><th>修饰符</th><th>含义</th></tr></thead><tbody><tr><td>-</td><td>左对齐</td></tr><tr><td>+</td><td>右对齐</td></tr><tr><td>#</td><td>八进制加0，十六进制加0x</td></tr></tbody></table><h4 id="格式符实例"><a href="#格式符实例" class="headerlink" title="格式符实例"></a>格式符实例</h4><ul><li>以字符串格式打印/etc/passwd中的第7个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%s\n",$7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以10进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%d\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以浮点数进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符，小数点保留2位</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%0.2f\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以16进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%#x\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以8进制格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%#o\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以科学技术格式打印/etc/passwd中的第3个字段，以”:”作为分隔符</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;printf "%e\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="模式匹配"><a href="#模式匹配" class="headerlink" title="模式匹配"></a>模式匹配</h3><h4 id="语法格式-1"><a href="#语法格式-1" class="headerlink" title="语法格式"></a>语法格式</h4><table><thead><tr><th>语法格式</th><th>含义</th></tr></thead><tbody><tr><td>/RegExp/</td><td>按正则匹配</td></tr><tr><td>关系运算</td><td>按关系匹配</td></tr></tbody></table><h4 id="正则实例"><a href="#正则实例" class="headerlink" title="正则实例"></a>正则实例</h4><ul><li>匹配/etc/passwd文件行中包含有root字符串的所有行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;/root/&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>匹配/etc/passwd文件行中以frdqy开头的所有行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;/^frdqy/&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="关系实例"><a href="#关系实例" class="headerlink" title="关系实例"></a>关系实例</h4><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段小于50的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3&lt;50&#123;printf "%d\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段大于50的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3&gt;50&#123;printf "%d\n",$3&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第7个字段为/bin/bash的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$7=="/bin/bash"&#123;printf "%s\n",$7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第7个字段不为/bin/bash的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$7!="/bin/bash"&#123;printf "%s\n",$7&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段包含3个以上数字的所有行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3~/[0-9]&#123;3,&#125;/&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br><span class="line"><span class="comment">#~表示匹配正则，!~表示不匹配正则</span></span><br></pre></td></tr></table></figure><h4 id="布尔实例"><a href="#布尔实例" class="headerlink" title="布尔实例"></a>布尔实例</h4><ul><li>以:为分隔符，匹配/etc/passwd文件中包含root或frdqy的所有</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$1=="root" || $1=="frdqy"&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>以:为分隔符，匹配/etc/passwd文件中第3个字段小于50并且第4个字段大于50的所有行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;$3&lt;50 &amp;&amp; $4&gt;50&#123;printf "%s\n",$0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><table><thead><tr><th>运算符</th><th align="left">含义</th></tr></thead><tbody><tr><td>+</td><td align="left">加</td></tr><tr><td>-</td><td align="left">减</td></tr><tr><td>*</td><td align="left">乘</td></tr><tr><td>除</td><td align="left">/</td></tr><tr><td>%</td><td align="left">模</td></tr><tr><td>^或**</td><td align="left">乘方</td></tr><tr><td>++x</td><td align="left">返回变量x之前+1</td></tr><tr><td>x++</td><td align="left">返回变量x之后+1</td></tr><tr><td>x+=y</td><td align="left">x=x+y</td></tr></tbody></table><h4 id="算数实例"><a href="#算数实例" class="headerlink" title="算数实例"></a>算数实例</h4><ul><li>使用awk计算/etc/services中空白行的数量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'/^$/&#123;sum++&#125;END&#123;printf "%d\n",sum&#125;'</span> /etc/services</span><br></pre></td></tr></table></figure><ul><li><p>计算下列每个同学的平均分数，将其打印在最后一列后</p><blockquote><p>Allen,80,90,96,98</p><p>Mike,93,98,92,91</p><p>Zhang,78,76,87,92</p><p>Jerry,86,89,68,92</p><p>Li,78,88,98,100</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=","&#125;&#123;sum=$2+$3+$4+$5;avg=sum/(NF-1);printf "%-8s%-8d%-8d%-8d%-8d%-0.2f\n",$1,$2,$3,$4,$5,avg&#125;'</span> ./student.txt</span><br></pre></td></tr></table></figure><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式)</span><br><span class="line">动作1</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(条件表达式)</span><br><span class="line">动作2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">动作3</span><br></pre></td></tr></table></figure><h4 id="条件实例"><a href="#条件实例" class="headerlink" title="条件实例"></a>条件实例</h4><ul><li>以:为分隔符，只打印/etc/passwd中第3个字段的数值在50-100范围内的行信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'BEGIN&#123;FS=":"&#125;&#123;if($3&lt;=100&amp;&amp;$3&gt;=50)print $0&#125;'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li><p>计算下列每个学生的平均分数，并且只打印平均分大于90的学生姓名和分数信息</p><blockquote><p>Allen,80,90,96,98</p><p>Mike,93,98,92,91</p><p>Zhang,78,76,87,92</p><p>Jerry,86,89,68,92</p><p>Li,78,88,98,100</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#过长，写在scripts.awk中</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    FS=<span class="string">","</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    sum=<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>+<span class="variable">$5</span>;</span><br><span class="line">    avg=sum/(NF-1);</span><br><span class="line">    <span class="keyword">if</span>(avg&gt;90)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-8s%-8d%-8d%-8d%-8d%-0.2f\n"</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$5</span>,avg</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#用-f选项调用</span></span><br><span class="line">awk -f ./scripts.awk ./student.txt</span><br></pre></td></tr></table></figure><h4 id="循环语句-while"><a href="#循环语句-while" class="headerlink" title="循环语句-while"></a>循环语句-while</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件表达式)</span><br><span class="line">动作</span><br></pre></td></tr></table></figure><h4 id="循环语句-do-while"><a href="#循环语句-do-while" class="headerlink" title="循环语句-do while"></a>循环语句-do while</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span></span><br><span class="line">动作</span><br><span class="line"><span class="keyword">while</span>(条件表达式)</span><br></pre></td></tr></table></figure><h4 id="循环语句-for"><a href="#循环语句-for" class="headerlink" title="循环语句-for"></a>循环语句-for</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化计数器;测试计数器;计数器变更)</span><br><span class="line">动作</span><br></pre></td></tr></table></figure><h4 id="循环实例"><a href="#循环实例" class="headerlink" title="循环实例"></a>循环实例</h4><ul><li>计算1+2+…+100的和，使用while、do while、for三种实现</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#while</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=100)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#do-while</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    i=0;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">    i++</span><br><span class="line">    sum+=i</span><br><span class="line">    &#125;<span class="keyword">while</span>(i&lt;100)</span><br><span class="line">    <span class="built_in">print</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#for</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=0;i&lt;=100;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><table><thead><tr><th>函数名</th><th>解释</th><th>函数返回值</th></tr></thead><tbody><tr><td>length</td><td>计算字符串长度</td><td>整数长度值</td></tr><tr><td>index(str1,str2)</td><td>在str1中找str2位置</td><td>返回索引，从1开始</td></tr><tr><td>tolower(str)</td><td>转换为小写</td><td>转换后的字符串</td></tr><tr><td>toupper(str)</td><td>转换为大写</td><td>转换后的字符串</td></tr><tr><td>substr(str,m,n)</td><td>从str的m个字符开始，截取n位</td><td>截取后的子串</td></tr><tr><td>match(str,RE)</td><td>在str中按RE查找</td><td>返回索引</td></tr><tr><td>split(str,arr,fs)</td><td>按fs切割字符串，结果存arr中</td><td>切割后的子串个数</td></tr><tr><td>sub(RE,repStr,str)</td><td>在str中找符合RE的子串，将其换为repStr，换一个</td><td>替换个数</td></tr><tr><td>gsub(RE,repStr,str)</td><td>在str中找符合RE的子串，将其换为repStr，换所有</td><td>替换个数</td></tr></tbody></table><h4 id="字符串处理实例"><a href="#字符串处理实例" class="headerlink" title="字符串处理实例"></a>字符串处理实例</h4><ul><li>以:为分隔符，返回/etc/passwd中每行每个字段的长度</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    FS=<span class="string">":"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(i=1;i&lt;=NF;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i!=NF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span> <span class="string">"%d:"</span>,length(<span class="variable">$i</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==NF)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span> <span class="string">"%d"</span>,length(<span class="variable">$i</span>)</span><br><span class="line">            <span class="built_in">printf</span> <span class="string">"\n"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>搜索字符串”I have a dream”中出现”ea”字符串的位置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    i=index(<span class="string">"I have a dream"</span>,<span class="string">"ea"</span>)</span><br><span class="line">    <span class="built_in">print</span> i</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#match,可见match功能包含了index</span></span><br><span class="line">BEGIN&#123;</span><br><span class="line">    i=index(<span class="string">"I have a dream"</span>,<span class="string">"ea"</span>)</span><br><span class="line">    <span class="built_in">print</span> i</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将字符串”Hadoop is a bigdata Framework”全部转换为小写</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=tolower(<span class="string">"Hadoop is a bigdata Framework"</span>)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将字符串”Hadoop is a bigdata Framework”全部转换为大写</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=toupper(<span class="string">"Hadoop is a bigdata Framework"</span>)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将字符串”Hadoop Kafka Spark Storm HDFS YARN Zookeeper”分割保存到数组arr中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Hadoop Kafka Spark Storm HDFS YARN Zookeeper"</span></span><br><span class="line">    len=split(str,arr,<span class="string">" "</span>)</span><br><span class="line">    i=1</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">print</span> arr[i]</span><br><span class="line">        i++</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>搜素字符串”Transaction 2345 Start:Select * from master”第一个数字出现的位置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction 2345 Start:Select * from master"</span></span><br><span class="line">    i=match(str,<span class="string">"[0-9]"</span>)</span><br><span class="line">    <span class="built_in">print</span> i</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>截取字符串”Transaction start”的子串，截取条件从第4个字符开始，截取5位</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction start"</span></span><br><span class="line">    str1=substr(str,4,5)</span><br><span class="line">    <span class="built_in">print</span> str1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>替换字符串”Transaction 243 Start,Event ID:9002”中第一个匹配到数字串替换为$符号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction 243 Start,Event ID:9002"</span></span><br><span class="line">    sub(<span class="string">"[0-9]+"</span>,<span class="string">"$"</span>,str)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>替换字符串”Transaction 243 Start,Event ID:9002”中所有匹配到数字串替换为$符号</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    str=<span class="string">"Transaction 243 Start,Event ID:9002"</span></span><br><span class="line">    gsub(<span class="string">"[0-9]+"</span>,<span class="string">"$"</span>,str)</span><br><span class="line">    <span class="built_in">print</span> str</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><table><thead><tr><th>选项</th><th>解释</th></tr></thead><tbody><tr><td>-v</td><td>参数传递</td></tr><tr><td><strong>-f</strong></td><td><strong>指定脚本文件</strong></td></tr><tr><td>-F</td><td>指定分隔符</td></tr><tr><td>-V</td><td>查看awk版本号</td></tr></tbody></table><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在使用参数传递时，引用变量建议全部使用""，否则如果引用的字符串内出现空格则会报错。</span></span><br><span class="line">num=20</span><br><span class="line">var=<span class="string">"Hello World"</span></span><br><span class="line"><span class="comment">#下面命令会报错，原因在于var变量字符串包含空格</span></span><br><span class="line">awk -v num2=<span class="variable">$num</span> -v var1=<span class="variable">$var</span> <span class="string">'BEGIN&#123;print num2,var1&#125;'</span></span><br><span class="line"><span class="comment">#遇到上述问题需要将引用用""包含起来</span></span><br><span class="line">awk -v <span class="string">"num2=<span class="variable">$num</span>"</span> -v <span class="string">"var1=<span class="variable">$var</span>"</span> <span class="string">'BEGIN&#123;print num2,var1&#125;'</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="shell中数组的用法"><a href="#shell中数组的用法" class="headerlink" title="shell中数组的用法"></a>shell中数组的用法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义,各元素用空格或tab分隔</span></span><br><span class="line">array=(<span class="string">"Allen"</span> <span class="string">"Mike"</span> <span class="string">"Messi"</span>)</span><br><span class="line"><span class="comment">#遍历</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="variable">$&#123;array[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>echo ${array[2]}</td><td>打印元素</td></tr><tr><td>echo ${ #array[@]}</td><td>打印元素个数</td></tr><tr><td>echo ${ #array[3]}</td><td>打印元素长度</td></tr><tr><td>array[3]=”Li”</td><td>数组元素赋值</td></tr><tr><td>unset array[2];unset array</td><td>删除元素</td></tr><tr><td>echo ${array[@]:1:3}</td><td>分片访问</td></tr><tr><td>${array[@]/e/E}</td><td>替换第一个e为E</td></tr><tr><td>${array[@]//e/E}</td><td>替换所有的e为E</td></tr></tbody></table><h4 id="awk中数组的用法"><a href="#awk中数组的用法" class="headerlink" title="awk中数组的用法"></a>awk中数组的用法</h4><p>既可以数字作为数组下标也可以字符串作为数组下标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检测数组第i+1下标是否存在</span></span><br><span class="line"><span class="keyword">if</span> i <span class="keyword">in</span> array</span><br><span class="line"><span class="comment">#删除某个数组元素</span></span><br><span class="line">delete array[i]</span><br><span class="line"><span class="comment">#删除整个数组</span></span><br><span class="line">delete array</span><br><span class="line"></span><br><span class="line"><span class="comment">#for循环语法格式1</span></span><br><span class="line"><span class="keyword">for</span>(初始化; 布尔表达式; 更新) &#123;</span><br><span class="line">//代码语句</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">#for循环语法格式2</span></span><br><span class="line"><span class="keyword">for</span>(变量 <span class="keyword">in</span> 数组) &#123;</span><br><span class="line">//代码语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组实例"><a href="#数组实例" class="headerlink" title="数组实例"></a>数组实例</h4><ul><li>统计主机上所有的TCP连接状态数，按照每个TCP状态分类</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an | grep tcp | awk <span class="string">'&#123;array[$6]++&#125;END&#123;for(a in array) print a,array[a]&#125;'</span></span><br></pre></td></tr></table></figure><ul><li><p>计算横向数据总和，计算纵向数据总和</p><blockquote><p>allen    80    90    87    91</p><p>mike    78    86    93    96</p><p>Kobe    66    92    82    78</p><p>Jerry    98    74    66    54</p><p>Wang    87    21    100    43</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-10s%-10s%-10s%-10s%-10s%-10s\n"</span>,<span class="string">"Name"</span>,<span class="string">"Yuwen"</span>,<span class="string">"Math"</span>,<span class="string">"English"</span>,<span class="string">"Physical"</span>,<span class="string">"total"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    total=<span class="variable">$2</span>+<span class="variable">$3</span>+<span class="variable">$4</span>+<span class="variable">$5</span></span><br><span class="line">    sum+=total</span><br><span class="line">    i=2</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=NF)</span><br><span class="line">    &#123;</span><br><span class="line">        array[i]+=<span class="variable">$i</span></span><br><span class="line">        i++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-10s%-10d%-10d%-10d%-10d%-10d\n"</span>,<span class="variable">$1</span>,<span class="variable">$2</span>,<span class="variable">$3</span>,<span class="variable">$4</span>,<span class="variable">$5</span>,total</span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-10s%-10d%-10d%-10d%-10d%-10d\n"</span>,<span class="string">"sum_c"</span>,array[2],array[3],array[4],array[5],sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实战演练"><a href="#实战演练" class="headerlink" title="实战演练"></a>实战演练</h3><h4 id="模拟脚本"><a href="#模拟脚本" class="headerlink" title="模拟脚本"></a>模拟脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#数据生成脚本，模拟大型数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> create_random</span><br><span class="line">&#123;</span><br><span class="line">    min=<span class="variable">$1</span></span><br><span class="line">    max=$((<span class="variable">$2</span>-<span class="variable">$min</span>+1))</span><br><span class="line">    num=`date +%s%N`</span><br><span class="line">    <span class="built_in">echo</span> $((<span class="variable">$num</span>%<span class="variable">$max</span>+<span class="variable">$min</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">INDEX=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> allen mike jerry tracy han lilei</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        COUNT=<span class="variable">$RANDOM</span></span><br><span class="line">        NUM1=`create_random 1 <span class="variable">$COUNT</span>`</span><br><span class="line">        NUM2=`expr <span class="variable">$COUNT</span> - <span class="variable">$NUM1</span>`</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"`date '+%Y-%m-%d %H:%M:%S'` <span class="variable">$INDEX</span> Batches: user <span class="variable">$user</span> insert <span class="variable">$COUNT</span> records into database:product table:detal, insert <span class="variable">$NUM1</span> records successfully,failed <span class="variable">$NUM2</span> records"</span> &gt;&gt; ./db.log.`date +%Y%m%d`</span><br><span class="line">        INDEX=`expr <span class="variable">$INDEX</span> + 1`</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="需求及解决方案"><a href="#需求及解决方案" class="headerlink" title="需求及解决方案"></a>需求及解决方案</h4><ul><li>统计每个人分别插入多少条record进数据库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-10s%-10d\n"</span>,i,array[i]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>统计每个人分别插入成功多少record，失败多少record</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    array1[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-10s   %-10d successed!\n"</span>,i,array[i]</span><br><span class="line">    <span class="keyword">for</span> (j <span class="keyword">in</span> array1)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-10s   %-10d Failed!\n"</span>,j,array[j]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将1和2结合起来一起输出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-20s%-20s%-20s%-20s\n"</span>,<span class="string">"Name"</span>,<span class="string">"Sum"</span>,<span class="string">"Successed"</span>,<span class="string">"Failed"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">    array1[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    array2[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-20s%-20d%-20d%-20d\n"</span>,i,array[i],array1[i],array2[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在3结尾加上统计全部插入记录、失败记录数、成功记录数</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">BEGIN&#123;</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"%-20s%-20s%-20s%-20s\n"</span>,<span class="string">"Name"</span>,<span class="string">"Sum"</span>,<span class="string">"Successed"</span>,<span class="string">"Failed"</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    array[<span class="variable">$6</span>]+=<span class="variable">$8</span></span><br><span class="line">    array1[<span class="variable">$6</span>]+=<span class="variable">$14</span></span><br><span class="line">    array2[<span class="variable">$6</span>]+=<span class="variable">$17</span></span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">    <span class="keyword">for</span> (i <span class="keyword">in</span> array)</span><br><span class="line">    &#123;</span><br><span class="line">        total_sum+=array[i]</span><br><span class="line">        total_successed+=array1[i]</span><br><span class="line">        total_failed+=array2[i]</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-20s%-20d%-20d%-20d\n"</span>,i,array[i],array1[i],array2[i]</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">"%-20s%-20d%-20d%-20d\n"</span>,<span class="string">"total"</span>,total_sum,total_successed,total_failed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查找丢失数据的现象(成功+失败不等于插入的记录数)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$8</span>!=<span class="variable">$14</span>+<span class="variable">$17</span>)</span><br><span class="line">        <span class="built_in">print</span> <span class="variable">$0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;awk是一个文本处理工具，通常用于处理数据并生成结果报告。&lt;/p&gt;
&lt;h3 id=&quot;语法格式&quot;&gt;&lt;a href=&quot;#语法格式&quot; class=&quot;headerlink&quot; title=&quot;语法格式&quot;&gt;&lt;/a&gt;语法格式&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;awk &lt;span class=&quot;string&quot;&gt;&#39;BEGIN&amp;#123;&amp;#125;pattern&amp;#123;commands&amp;#125;END&amp;#123;&amp;#125;&#39;&lt;/span&gt; file_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stdout | awk &lt;span class=&quot;string&quot;&gt;&#39;BEGIN&amp;#123;&amp;#125;pattern&amp;#123;commands&amp;#125;END&amp;#123;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="awk" scheme="http://yoursite.com/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程之（四）：sed</title>
    <link href="http://yoursite.com/2019/12/28/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9Ased/"/>
    <id>http://yoursite.com/2019/12/28/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9Ased/</id>
    <published>2019-12-28T12:48:41.000Z</published>
    <updated>2020-01-03T11:35:41.973Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础介绍"><a href="#基础介绍" class="headerlink" title="基础介绍"></a>基础介绍</h3><p>sed(Stream Editor)，流编辑器。对标准输出或文件<strong>逐行</strong>进行处理(修改、删除、打印等)。</p><a id="more"></a><h4 id="pattern-space"><a href="#pattern-space" class="headerlink" title="pattern space"></a>pattern space</h4><p>模式空间，每一个被pattern所匹配到的行都放到pattern space中等待进一步处理</p><h4 id="hold-space"><a href="#hold-space" class="headerlink" title="hold space"></a>hold space</h4><p>保持空间，内存中另一块可以存放sed匹配行的空间，可以使操作更灵活。但主要是用来炫技，实际很少使用。</p><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed [option] <span class="string">"pattern command"</span> file<span class="comment">#对文件逐行操作</span></span><br><span class="line">stdout | sed [option] <span class="string">"pattern command"</span><span class="comment">#对标注输出逐行操作</span></span><br><span class="line"><span class="comment">#sed用parttern来匹配每一行，如果某一行符合pattern模式被匹配到，就用command对那一行进行执行</span></span><br></pre></td></tr></table></figure><h3 id="sed选项"><a href="#sed选项" class="headerlink" title="sed选项"></a>sed选项</h3><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>只打印模式匹配行(静默模式)</td></tr><tr><td>-e</td><td>直接在命令行进行sed编辑,默认选项;适用于多个匹配模式和命令</td></tr><tr><td>-f</td><td>编辑动作保存在文件中，指定文件执行</td></tr><tr><td>-r</td><td>支持扩展正则表达式</td></tr><tr><td><strong>-i</strong></td><td><strong>直接修改文件内容</strong></td></tr></tbody></table><h3 id="pattern用法"><a href="#pattern用法" class="headerlink" title="pattern用法"></a>pattern用法</h3><table><thead><tr><th>匹配模式</th><th>含义</th></tr></thead><tbody><tr><td>10command</td><td>匹配到第10行</td></tr><tr><td>10,20command</td><td>匹配从第10行开始，到第20行结束</td></tr><tr><td>10,+5command</td><td>匹配从第10行开始，到第16行结束</td></tr><tr><td><strong>/pattern1/command</strong></td><td><strong>匹配到pattern1的行</strong></td></tr><tr><td><strong>/pattern1/,/pattern2/command</strong></td><td><strong>匹配到pattern1开始，pattern2结束的行</strong></td></tr><tr><td>10,/pattern1/command</td><td>匹配从第10行开始，到匹配到pattern1的行结束</td></tr><tr><td>/pattern1/,10command</td><td>匹配到pattern1的行开始到第10行结束</td></tr><tr><td>1~2command</td><td>步长为2：从第一行开始每两行执行一次</td></tr></tbody></table><h3 id="编辑命令对照表"><a href="#编辑命令对照表" class="headerlink" title="编辑命令对照表"></a>编辑命令对照表</h3><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>p</td><td>打印</td></tr></tbody></table><h4 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>a</td><td>往后追加</td></tr><tr><td>i</td><td>往前追加</td></tr><tr><td>r</td><td>外部文件读入，行后追加</td></tr><tr><td>w</td><td>匹配行写入外部文件</td></tr></tbody></table><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>d</td><td>删除</td></tr></tbody></table><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>s/old/new</td><td>将行内第一个old替换为new</td></tr><tr><td>s/old/new/g</td><td>将行内全部的old替换为new</td></tr><tr><td>s/old/new/2g</td><td>将行内从第两个old开始到最后所有的old替换为new</td></tr><tr><td>s/old/new/ig</td><td>将行内old全部替换为new，忽略大小写</td></tr></tbody></table><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><table><thead><tr><th>编辑命令</th><th>含义</th></tr></thead><tbody><tr><td>=</td><td>显示行号</td></tr><tr><td>n</td><td>覆盖读取下一行</td></tr><tr><td>N</td><td>追加读取下一行</td></tr><tr><td>h</td><td>把模式空间的内容覆盖至保持空间</td></tr><tr><td>H</td><td>把模式空间的内容追加至保持空间</td></tr><tr><td>g</td><td>把保持空间的内容覆盖至模式空间</td></tr><tr><td>G</td><td>把保持空间的内容追加至模式空间</td></tr><tr><td>x</td><td>把模式空间与保持空间内容互换</td></tr><tr><td>！</td><td>条件取反，例如！1表示除了第一行</td></tr></tbody></table><h3 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;#引用匹配的整个串</span><br><span class="line">\1#引用匹配的第一个分组，需要&quot;()&quot;将待匹配括起来</span><br><span class="line">#例如：</span><br><span class="line">sed &#39;s&#x2F;\(l..e\)&#x2F;\1r&#x2F;g&#39;#表示将以l开头e结尾的四字串替换为结尾加e</span><br><span class="line">#注意：&amp;只能匹配整个串，而\1可以匹配一部分串，更加灵活</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>当写脚本时使用sed匹配模式中包含变量时，要用双引号将整个匹配模式括起来。也可以对引用变量使用单引号单独括起来，效果一样。</p><h3 id="查询实例"><a href="#查询实例" class="headerlink" title="查询实例"></a>查询实例</h3><ul><li>打印/etc/passwd中第20行内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'20p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中从第8行开始，到第15行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'8,15p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中从第8行开始，然后+5行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'8,+5p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中开头匹配frdqy字符串的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/^frdqy/p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中开头为root的行开始，到开头为frdqy的行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/^root/,/^frdqy/p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中第8行开始，到含有/sbin/nologin的内容的行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'8,/\/sbin\/nologin/p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>打印/etc/passwd中第一个包含/bin/bash内容的行开始，到第五行结束的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">'/\/bin\/bash/,5p'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="删除实例"><a href="#删除实例" class="headerlink" title="删除实例"></a>删除实例</h3><ul><li>删除/etc/passwd中的第15行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'15d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中的第8行到第14行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'8,14d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中的不能登录的用户(/sbin/nologin)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/sbin\/nologin/d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中以mail开头的行，到以backup开头的行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^mail/,/^backup/d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中第一个不能登录的用户，到第13行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/sbin\/nologin/,13d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中第5行到以ftp开头的所有行的内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'5,/^ftp/d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除/etc/passwd中以backup开头的行到最后行的所有内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^backup/,$d'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>删除配置文件的注释行和空行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^#/d;/^$/d'</span></span><br><span class="line"><span class="comment">#只能删除#在开头的注释，例如代码内部注释就删不了。</span></span><br><span class="line">sed -i <span class="string">'/^[:blank:]*#/d'</span> ./nginx</span><br><span class="line"><span class="comment">#只删除代码内部的注释</span></span><br></pre></td></tr></table></figure><ul><li>在配置文件中所有不以#开头的行前面添加*符号，注意：以#开头的行不添加</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/^[^#]/\*&amp;/g'</span> ./nginx</span><br><span class="line"><span class="comment">#中括号外的^表示行首，中括号内的^表示取反，即不取中括号内的值。</span></span><br></pre></td></tr></table></figure><h3 id="修改实例"><a href="#修改实例" class="headerlink" title="修改实例"></a>修改实例</h3><ul><li>修改/etc/passwd中第1行中第一个root为ROOT</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'1s/root/ROOT/'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd中第5行到第10行中所有的/sbin/nologin为/bin/bash</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'5,10/\/sbin\/nologin/\/bin\/bash/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd中匹配到/sbin/nologin的行，将匹配到行中的login改为大写LOGIN</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'s/\(\/sbin\/no\)login/\1LOGIN/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd从匹配到以root开头的行，到匹配到行中包括mail的所有行，将bin改为dqy</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^root/,/mail/s/bin/dqy/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd从匹配到以root开头的行，到第15行中所有行的nologin修改为frdqy</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^root/,15s/nologin/frdqy/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>修改/etc/passwd从第15行开始，到匹配到以frdqy开头的所有行的bin修改为BIN</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'15,/^frdqy/s/bin/BIN/g'</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="追加实例"><a href="#追加实例" class="headerlink" title="追加实例"></a>追加实例</h3><ul><li>在/etc/passwd文件第10行后面追加”Add Line Behind”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'10a Add Line Behind'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件第10行到第20行，每行后面追加”Test Line Behind”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'10,20a Test Line Behind'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件匹配到/bin/bash的行后追加”Insert Line For /bin/bash Behind”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/bin\/bash/a Insert Line For /bin/bash Behind'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件匹配到以gdm开头的行，在匹配行前面追加”Add Line Before”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^gdm/i Add Line Before'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>在/etc/passwd文件每一行前面都追加”Insert Line Before Every Line”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'i Insert Line Before Every Line'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/fstab文件内容追加到/etc/passwd文件第 20行后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'20r /etc/fstab'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/inittab文件内容追加到/etc/passwd文件匹配/sbin/nologin行后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/sbin\/nologin/r /etc/inittab'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/vconsole.conf文件内容追加到/etc/passwd文件匹配以sync开头到18行的所有行后</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/^sync/,18r /etc/vconsole.conf'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/passwd文件匹配到/bin/bash的行追加到/tmp/sed.txt中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'/\/bin\/bash/w /tmp/sed.txt'</span> /etc/passwd</span><br></pre></td></tr></table></figure><ul><li>将/etc/passwd文件从第10行开始到匹配到frdqy开头的所有行追加到/tmp/sed_1.txt中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">'10,/^frdqy/w /tmp/sed_1.txt'</span> /etc/passwd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基础介绍&quot;&gt;&lt;a href=&quot;#基础介绍&quot; class=&quot;headerlink&quot; title=&quot;基础介绍&quot;&gt;&lt;/a&gt;基础介绍&lt;/h3&gt;&lt;p&gt;sed(Stream Editor)，流编辑器。对标准输出或文件&lt;strong&gt;逐行&lt;/strong&gt;进行处理(修改、删除、打印等)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="sed" scheme="http://yoursite.com/tags/sed/"/>
    
  </entry>
  
  <entry>
    <title>正则知识补充</title>
    <link href="http://yoursite.com/2019/12/27/%E6%AD%A3%E5%88%99%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/"/>
    <id>http://yoursite.com/2019/12/27/%E6%AD%A3%E5%88%99%E7%9F%A5%E8%AF%86%E8%A1%A5%E5%85%85/</id>
    <published>2019-12-27T14:19:00.000Z</published>
    <updated>2019-12-28T00:46:28.925Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">^ <span class="comment">#行首</span></span><br><span class="line">$ <span class="comment">#行尾</span></span><br><span class="line">\&lt; <span class="comment">#词首</span></span><br><span class="line">\&gt; <span class="comment">#词尾</span></span><br><span class="line">\b <span class="comment">#单词边界</span></span><br><span class="line">\B <span class="comment">#单词非边界</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#  #表示前面的字符连续出现任意次，包括0次。</span><br><span class="line">.  #表示任意单个字符。</span><br><span class="line">.* #表示任意长度的任意字符，与通配符中的*的意思相同。</span><br><span class="line">\? #表示匹配其前面的字符0或1次</span><br><span class="line">\+ #表示匹配其前面的字符至少1次，或者连续多次，连续次数上不封顶。</span><br><span class="line">\&#123;n\&#125;#表示前面的字符连续出现n次，将会被匹配到。</span><br><span class="line">\&#123;x,y\&#125; #表示之前的字符至少连续出现x次，最多连续出现y次，都能被匹配到，换句话说，只要之前的字符连续出现的次数在x与y之间，即可被匹配到。</span><br><span class="line">\&#123;,n\&#125; #表示之前的字符连续出现至多n次，最少0次，都会陪匹配到。</span><br><span class="line">\&#123;n,\&#125; #表示之前的字符连续出现至少n次，才会被匹配到.</span><br><span class="line">.  #表示匹配任意单个字符</span><br><span class="line">S* #表示匹配前面的字符任意次，包括0次</span><br><span class="line">[  ] #表示匹配指定范围内的任意单个字符</span><br><span class="line">[^  ]#表示匹配指定范围外的任意单个字符</span><br><span class="line"> </span><br><span class="line">[[:alpha:]]  #表示任意大小写字母</span><br><span class="line">[[:lower:]]  #表示任意小写字母</span><br><span class="line">[[:upper:]]  #表示任意大写字母</span><br><span class="line">[[:digit:]]  #表示0到9之间的任意单个数字（包括0和9）</span><br><span class="line">[[:alnum:]]  #表示任意数字或字母</span><br><span class="line">[[:space:]]  #表示任意空白字符，包括&quot;空格&quot;、&quot;tab键&quot;等。</span><br><span class="line">[[:punct:]]  #表示任意标点符号</span><br><span class="line"> </span><br><span class="line">[0-9]与[[:digit:]]等效</span><br><span class="line">[a-z]与[[:lower:]]等效</span><br><span class="line">[A-Z]与[[:upper:]]等效</span><br><span class="line">[a-zA-Z]与[[:alpha:]]等效</span><br><span class="line">[a-zA-Z0-9]与[[:alnum:]]等效</span><br><span class="line"> </span><br><span class="line">[^0-9]与[^[:digit:]]等效</span><br><span class="line">[^a-z]与[^[:lower:]]等效</span><br><span class="line">[^A-Z]与[^[:upper:]]等效</span><br><span class="line">[^a-zA-Z]与[^[:alpha:]]等效</span><br><span class="line">[^a-zA-Z0-9]与[^[:alnum:]]等效</span><br><span class="line"> </span><br><span class="line">#简短格式并非所有正则表达式解析器都可以识别</span><br><span class="line">\d #表示任意单个0到9的数字</span><br><span class="line">\D #表示任意单个非数字字符</span><br><span class="line">\t #表示匹配单个横向制表符（相当于一个tab键）</span><br><span class="line">\s #表示匹配单个空白字符，包括&quot;空格&quot;，&quot;tab制表符&quot;等</span><br><span class="line">\S #表示匹配单个非空白字符</span><br><span class="line"></span><br><span class="line">\(\)#表示分组，且可以嵌套</span><br><span class="line">\(ab\)#表示将ab作为一个整体处理</span><br><span class="line">\1 #表示引用整个表达式中第一个分组中的正则表达式</span><br><span class="line">\2 #表示引用整个表达式中第二个分组中的正则表达式</span><br><span class="line">#若分组嵌套，以左括号为基准判断是第几个分组</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;^ &lt;span class=&quot;comment&quot;&gt;#行首&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;comment&quot;&gt;#行尾&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;lt; &lt;span class=&quot;comment&quot;&gt;#词首&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\&amp;gt; &lt;span class=&quot;comment&quot;&gt;#词尾&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\b &lt;span class=&quot;comment&quot;&gt;#单词边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\B &lt;span class=&quot;comment&quot;&gt;#单词非边界&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="正则" scheme="http://yoursite.com/categories/%E6%AD%A3%E5%88%99/"/>
    
    
      <category term="正则" scheme="http://yoursite.com/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程之（三）：常用查找工具</title>
    <link href="http://yoursite.com/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%9F%A5%E6%89%BE%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%B8%B8%E7%94%A8%E6%9F%A5%E6%89%BE%E5%B7%A5%E5%85%B7/</id>
    <published>2019-12-27T14:16:02.000Z</published>
    <updated>2019-12-30T07:58:04.759Z</updated>
    
    <content type="html"><![CDATA[<h3 id="find命令："><a href="#find命令：" class="headerlink" title="find命令："></a>find命令：</h3><blockquote><pre><code>语法格式：find [路径] [选项] [操作]</code></pre><blockquote><pre><code>选项：    -name(大小写敏感)    -iname(忽略大小写)    -perm    -prune(排除某些目录，通常与path一起使用)    如：find . -path ./test -prune -o -type f(-o表示或者)    -user    -group    -mtime -n | +n    -nogroup(无效组)    -nouser(无效用户)    -newer file1 ! file2    -type    -size -n | +n    -mindepth n    -maxdepth n</code></pre><a id="more"></a><pre><code>操作：    -print(默认)    -ok(与exec相似，会给用户提示)    -exec     删除etc下conf结尾的文件        find ./etc -name &apos;*.conf&apos; -exec rm -rf {} \;     复制         find ./etc -size +1M -exec cp {} ./test/ \;     删除/var/log下以.log结尾的7天以前的文件         find /var/log -name &apos;*.log&apos; -mtime +7 -exec rm -rf {} \;     搜素etc下以conf结尾的且大于10k的文件，复制到root/conf目录下         find /etc/ -name &apos;*.conf&apos; -size +10k -exec cp {} /root/conf/ \;</code></pre></blockquote></blockquote><h3 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h3><blockquote><pre><code>locate在数据库文件中查找，而find在整个磁盘中查找由系统定时任务负责更新数据库find默认全部匹配，locate默认部分匹配updatedb命令：更新/var/lib/mlocate/mlocate.db配置文件为：/etc/updatedb.conf</code></pre></blockquote><h3 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h3><blockquote><p>-b查找二进制文件</p><p>-m查找帮助文件</p><p>-s查找源代码文件</p></blockquote><h3 id="which"><a href="#which" class="headerlink" title="which"></a>which</h3><blockquote><p>查找二进制文件(查用于查找程序绝对路径)</p></blockquote><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><blockquote><pre><code>形式一：grep [option] [pattern] [file1,file2...]形式二：command | grep [option] [pattern]    参数：        -v     不显示匹配行        -i     忽略大小写        -n     显示行号        -r     递归搜索(当前目录下搜索所有文件)        -E     支持扩展正则        -F     不按正则        -c     输出匹配行的数量        -w     匹配整个单词        -x     匹配整行        -l     只列出匹配的文件名</code></pre></blockquote><h3 id="逻辑运算："><a href="#逻辑运算：" class="headerlink" title="逻辑运算："></a>逻辑运算：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a<span class="comment">#与</span></span><br><span class="line">-o<span class="comment">#或</span></span><br><span class="line">-not|! <span class="comment">#非</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;find命令：&quot;&gt;&lt;a href=&quot;#find命令：&quot; class=&quot;headerlink&quot; title=&quot;find命令：&quot;&gt;&lt;/a&gt;find命令：&lt;/h3&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;语法格式：find [路径] [选项] [操作]&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;选项：

    -name(大小写敏感)
    -iname(忽略大小写)
    -perm
    -prune(排除某些目录，通常与path一起使用)
    如：find . -path ./test -prune -o -type f(-o表示或者)
    -user
    -group
    -mtime -n | +n
    -nogroup(无效组)
    -nouser(无效用户)
    -newer file1 ! file2
    -type
    -size -n | +n
    -mindepth n
    -maxdepth n&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="find" scheme="http://yoursite.com/tags/find/"/>
    
      <category term="grep" scheme="http://yoursite.com/tags/grep/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程之（二）：函数的使用</title>
    <link href="http://yoursite.com/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2019-12-27T14:15:17.000Z</published>
    <updated>2019-12-28T00:47:27.317Z</updated>
    
    <content type="html"><![CDATA[<h3 id="函数命名格式"><a href="#函数命名格式" class="headerlink" title="函数命名格式"></a>函数命名格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">name()</span><br><span class="line">&#123;</span><br><span class="line">command1</span><br><span class="line">command2</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line">command1</span><br><span class="line">command2</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#调用函数时直接用函数名调用即可，像一条shell命令一样</span></span><br><span class="line"><span class="comment">#函数内部参数使用$1,$2...$n</span></span><br><span class="line"><span class="comment">#调用函数例子：function_name $1 $2</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="函数传参"><a href="#函数传参" class="headerlink" title="函数传参"></a>函数传参</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> name</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span><span class="comment">#第一个参数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$2</span><span class="comment">#第二个参数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name zhangsan lisi</span><br></pre></td></tr></table></figure><h3 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h3><blockquote><p>返回0：成功<br>返回1~255：失败</p><p>echo返回单一字符串或数据列表</p><p>echo $$：返回脚本执行的进程pid，用于解决脚本自身名字包含所要管    理的服务引起冲突的情况。<br>守护进程(daemon)：通过脚本判断某个服务是否正常，不正常就启动</p><p>netstat -tnlp：查看网络状态</p></blockquote><h3 id="全局变量与局部变量的定义"><a href="#全局变量与局部变量的定义" class="headerlink" title="全局变量与局部变量的定义"></a>全局变量与局部变量的定义</h3><blockquote><p>不做特殊说明，shell中变量都是全局变量(不建议在大型脚本中使用全    局变量)</p><p>定义变量时使用local关键字<br>函数内外若存在同名变量，则函数内部变量覆盖外部变量</p><p>库函数：用于封装常用函数，后缀通常以.lib结尾。<br>引用库函数时，用. base_function即可，推荐用绝对路径(点后有一个    空格)</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;函数命名格式&quot;&gt;&lt;a href=&quot;#函数命名格式&quot; class=&quot;headerlink&quot; title=&quot;函数命名格式&quot;&gt;&lt;/a&gt;函数命名格式&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;name()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		command1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		command2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		command1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		command2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#调用函数时直接用函数名调用即可，像一条shell命令一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#函数内部参数使用$1,$2...$n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#调用函数例子：function_name $1 $2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Shell编程之（一）：变量的用法</title>
    <link href="http://yoursite.com/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%8F%98%E9%87%8F%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2019/12/27/Shell%E7%BC%96%E7%A8%8B%E4%B9%8B%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%8F%98%E9%87%8F%E7%9A%84%E7%94%A8%E6%B3%95/</id>
    <published>2019-12-27T14:13:36.000Z</published>
    <updated>2019-12-28T00:47:16.246Z</updated>
    
    <content type="html"><![CDATA[<h3 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;#String&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr length <span class="string">"<span class="variable">$String</span>"</span></span><br></pre></td></tr></table></figure><h3 id="获取子串在字符串中的索引位置"><a href="#获取子串在字符串中的索引位置" class="headerlink" title="获取子串在字符串中的索引位置"></a>获取子串在字符串中的索引位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr index <span class="variable">$String</span> <span class="variable">$subString</span>  <span class="comment">#切片,字符查找，返回第一个</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="计算子串长度"><a href="#计算子串长度" class="headerlink" title="计算子串长度"></a>计算子串长度</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr match <span class="variable">$String</span> subString</span><br></pre></td></tr></table></figure><h3 id="抽取子串"><a href="#抽取子串" class="headerlink" title="抽取子串"></a>抽取子串</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;string:position:length&#125;</span><span class="comment">#从position取length个</span></span><br><span class="line"><span class="variable">$&#123;String:position&#125;</span><span class="comment">#从String中的position开始</span></span><br><span class="line"><span class="variable">$&#123;String: -position&#125;</span><span class="comment">#从右往左(注意空格)</span></span><br><span class="line"><span class="variable">$&#123;String:(position)&#125;</span><span class="comment">#从左往右</span></span><br><span class="line"><span class="variable">$expr</span> substr <span class="variable">$String</span> <span class="variable">$position</span> <span class="variable">$length</span><span class="comment">#与二类似</span></span><br></pre></td></tr></table></figure><h3 id="变量替换："><a href="#变量替换：" class="headerlink" title="变量替换："></a>变量替换：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;变量名#正则&#125;</span><span class="comment">#从开头匹配最短删除</span></span><br><span class="line"><span class="variable">$&#123;变量名##正则&#125;</span><span class="comment">#从开头匹配最长删除</span></span><br><span class="line"><span class="variable">$&#123;变量名%正则&#125;</span><span class="comment">#从尾部匹配最短删除</span></span><br><span class="line"><span class="variable">$&#123;变量名%%正则&#125;</span><span class="comment">#从尾部匹配最长删除</span></span><br><span class="line"><span class="variable">$&#123;变量名/旧字符串/新字符串&#125;</span><span class="comment">#第一个字符串替换</span></span><br><span class="line"><span class="variable">$&#123;变量名//旧字符串/新字符串&#125;</span><span class="comment">#全部字符串替换</span></span><br><span class="line"><span class="comment">#注意：使用expr索引计数从1开始，使用$&#123;&#125;索引计数从0开始</span></span><br></pre></td></tr></table></figure><h3 id="命令替换"><a href="#命令替换" class="headerlink" title="命令替换"></a>命令替换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">``</span><br><span class="line">$()</span><br></pre></td></tr></table></figure><h3 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(())<span class="comment">#注意与命令替换区分</span></span><br></pre></td></tr></table></figure><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef<span class="comment">#完整格式显示所有进程</span></span><br><span class="line">grep -v <span class="comment">#不输出查询内容，用于过滤grep本身</span></span><br><span class="line">wc -l <span class="comment">#统计有多少行</span></span><br><span class="line">ps -ef | grep nginx | grep -v grep | wc -l <span class="comment">#判断nginx是否存活</span></span><br></pre></td></tr></table></figure><h3 id="有类型变量"><a href="#有类型变量" class="headerlink" title="有类型变量"></a>有类型变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">declare</span> -r<span class="comment">#声明变量为只读类型</span></span><br><span class="line"><span class="built_in">declare</span> -i <span class="comment">#声明变量为整型</span></span><br><span class="line"><span class="built_in">declare</span> -f <span class="comment">#在脚本中显示定义的函数和内容</span></span><br><span class="line"><span class="built_in">declare</span> -F <span class="comment">#在脚本中显示定义的函数</span></span><br><span class="line"><span class="built_in">declare</span> -a <span class="comment">#声明数组</span></span><br><span class="line">arr=(<span class="string">"jones"</span> <span class="string">"mike"</span> <span class="string">"kobe"</span> <span class="string">"jordan"</span>) <span class="comment">#以空格分隔</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;arr[@]&#125;</span><span class="comment">#获取整个数组</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#arr[@]&#125;</span>  <span class="comment">#获取整个数组长度</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#arr[i]&#125;</span><span class="comment">#获取某个数组元素长度</span></span><br><span class="line"><span class="built_in">declare</span> -x <span class="comment">#声明环境变量</span></span><br><span class="line"><span class="comment">#取消某个设置只需要“-”改为“+”即可</span></span><br></pre></td></tr></table></figure><h3 id="expr语法格式"><a href="#expr语法格式" class="headerlink" title="expr语法格式"></a>expr语法格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">expr <span class="variable">$num1</span> operator <span class="variable">$num2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#操作符对照表(注意转义)</span></span><br><span class="line">num1 | num2num1<span class="comment">#不为空且非0，返回num1；否则返回num2</span></span><br><span class="line">num1 &amp; num2 num1  <span class="comment">#不为空且非0，返回num1；否则返回0</span></span><br><span class="line"><span class="comment">#判断整数</span></span><br><span class="line">expr <span class="variable">$num</span> + 1<span class="comment">#如果执行成功则为整数(成功返回1)</span></span><br></pre></td></tr></table></figure><h3 id="bc进行浮点数计算"><a href="#bc进行浮点数计算" class="headerlink" title="bc进行浮点数计算"></a>bc进行浮点数计算</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"23 + 5"</span> | bc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"23.15 + 4.3"</span> | bc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"scale=4;23.5/3.5"</span> | bc</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;计算字符串长度&quot;&gt;&lt;a href=&quot;#计算字符串长度&quot; class=&quot;headerlink&quot; title=&quot;计算字符串长度&quot;&gt;&lt;/a&gt;计算字符串长度&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$&amp;#123;#String&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;expr length &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$String&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;获取子串在字符串中的索引位置&quot;&gt;&lt;a href=&quot;#获取子串在字符串中的索引位置&quot; class=&quot;headerlink&quot; title=&quot;获取子串在字符串中的索引位置&quot;&gt;&lt;/a&gt;获取子串在字符串中的索引位置&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;expr index &lt;span class=&quot;variable&quot;&gt;$String&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$subString&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;#切片,字符查找，返回第一个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/12/27/hello-world/"/>
    <id>http://yoursite.com/2019/12/27/hello-world/</id>
    <published>2019-12-27T05:38:00.000Z</published>
    <updated>2019-12-27T15:36:33.873Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Strat"><a href="#Quick-Strat" class="headerlink" title="Quick Strat"></a>Quick Strat</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Strat&quot;&gt;&lt;a href=&quot;#Quick-Strat&quot; class=&quot;headerlink&quot; title=&quot;Quick Strat&quot;&gt;&lt;/a&gt;Quick Strat&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
